<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>if / else and Conditional Operators</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="概述If / Else和条件运算符的页面" />
  <meta name="rh-index-keywords" content="？,if,else,三元运算符,then" />
  <meta name="search-keywords" content="if,else,then,？,三元,有条件的" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> if / else和条件运算符</h1><p>大多数编程语言的基本特征是能够提出一个简单的问题，该问题给出布尔值 <tt>true</tt>或者 <tt>false</tt>答案，在<span class="notranslate">GML</span>这是通过使用 <tt>if</tt>关键词。一个简单的 <tt>if</tt>条件接受一个<a class="glossterm" data-glossterm="表达" href="#">表达式</a>，并且将执行一个或多个<a class="glossterm" data-glossterm="陈述" href="#">语句</a><span class="glossextra">■</span>如果表达解析为 <span class="inline">true</span>，其基本格式如下：</p><p class="code">if (&lt;expression&gt;)<br/>     {<br/>     &lt;statement&gt;;<br/>     &lt;statement&gt;;<br/>     ...<br/>     }</p><p><br/>在这里，您说的是如果表达式解析为 <tt>true</tt>然后做点什么。请注意，条件的“ then”部分是<em>隐式的</em>，但是有一个 <span class="inline">then</span>可以使用的关键字（尽管几乎总是被省略），因此您还可以像下面这样创建条件：</p><p class="code">if (&lt;expression&gt;) then<br/>     {<br/>     &lt;statement&gt;;<br/>     &lt;statement&gt;;<br/>     ...<br/>     }</p><p>除了 <span class="inline">if</span>和 <span class="inline">then</span>，您也可以使用 <tt>else</tt>如果被检查的表达式计算为，则关键字可以执行其他操作 <tt>false</tt>。这 ”<tt>if... then... else...</tt>表格如下：</p><p class="code">if (&lt;expression&gt;)<br/>     {<br/>     &lt;statement&gt;;<br/>     }<br/> else
    <br/>     {<br/>     &lt;statement&gt;;<br/>     }</p><p>在这种情况下，表达式将被求值，如果它的求值为 <span class="inline">false</span>，之后的声明 <span class="inline">else</span>被执行，否则执行初始语句（<tt>true</tt> ）。</p><p class="note">注意：在<span class="notranslate">GameMaker</span>语言中，任何小于或等于0的值都将被评估为 <span class="inline">false</span>，而任何大于0的值都将计算为 <span class="inline">true</span>。</p><p>一个好习惯是，始终在表达式中用括号括住，在表达式中用括号{}括起来。<tt>if</tt> （否则，将仅执行第一条语句），并在每个语句的块中换行，例如：</p><p class="code">// This will work<br/> if &lt;expression&gt; &lt;statement&gt;;<br/>
    <br/> // Example:<br/> if test == true variable = false else variable = true;</p><p class="code">// This is better<br/> if (&lt;expression&gt;)<br/>     {
    <br/>     &lt;statement&gt;
    <br/>     }<br/> else
    <br/>     {
    <br/>     &lt;statement&gt;
    <br/>     }
    <br/>
    <br/> // Example<br/> if (test == true)<br/>     {<br/>     variable = false;<br/>     }<br/> else
    <br/>     {<br/>     variable = true;<br/>     }</p><p>请注意，虽然这有点冗长，但这意味着代码中没有歧义，并且可以始终在所有平台上正确编译。<a href="../Expressions_And_Operators.htm">但是，如“表达式和运算符”</a>页面上的部分所述，初始示例可能不行。</p><p class="note"><strong>注意</strong>：比较两个值以查看它们是否相等时，应使用“<span class="inline">==</span> “运算符，并且只能使用“<span class="inline">=</span> ”。目前， <span class="notranslate">GameMaker</span>会将它们视为可互换的，但是将来可能会发生变化，并且使用正确的运算符进行比较和分配时，您的代码会更加简洁清晰。</p><p>给出使用的正确示例 <span class="inline">if</span>，请考虑以下代码，它将实例移至该位置 <tt>x=200</tt>在房间中放置“步进事件”时：</p><p class="code">if (x &lt; 200)<br/>     {
    <br/>     x += 4;<br/>     }
    <br/> else
    <br/>     {
    <br/>     x = 200;<br/>     }
  </p><p>请注意，您也可以做在<i>复合</i>检查 <span class="inline">if</span>，即：在同一条语句中检查各种值或表达式。这些检查可以使用各种<a href="../Expressions_And_Operators.htm">组合运算符</a>（<tt>&amp;&amp;</tt>和，<tt>||</tt>或 <tt>^^</tt>xor）。当您执行此操作时， <span class="notranslate">GameMaker Studio 2</span>将一次评估每个，并且根据评估的方式，其余的可能会被跳过。例如：</p><p class="code">if (keyboard_check_pressed(vk_enter)) &amp;&amp; (instance_exists(obj_Player))<br/>     {
    <br/>     go = false;<br/>     alarm[0] = room_speed;<br/>     }
  </p><p>在这里，我们正在使用 <tt>&amp;&amp;</tt>“ and”运算符，因此它正在检查是否<em>同时</em>存在两个条件 <tt>if</tt>评估为 <tt>true</tt>，如果第一个是 <tt>false</tt>那么第二个甚至都不会被检查。这就是所谓的“短路”代码，因此，在组合表达式进行检查时，应确保始终以“最便宜”的性能为先，以避免评估更昂贵的代码 <span class="inline">false</span>。同样，如果条件可以被评估为<span class="inline">true</span>或者 <span class="inline">false</span>在编译时，整个条件将从代码中删除，例如，说您有一个<a href="../Variables/Constants.htm">宏</a> <span class="inline">DEBUG_ON </span>用于调试，可以是 <span class="inline">true</span>或者 <span class="inline">false</span>-设置为 <span class="inline">false</span>那么在编译游戏时，以下代码块将从游戏中剥离：</p><p class="code">if DEBUG_ON == true<br/>     {<br/>     show_debug_message(&quot;Instances = &quot; + string(instance_count));<br/>     }</p><p>您还可以执行<b>条件运算</b>（也称为<b>三元</b>运算），这实际上是执行基本运算的“捷径”<tt>if</tt> 。它具有以下语法：</p><p class="code">variable = &lt;condition&gt; ? &lt;statement1 (if <i>true</i>)&gt; : &lt;statement2 (if <i>false</i>)&gt;</p><p>条件运算符“<span class="inline">?</span> ”将返回两个给定值之一，具体取决于条件表达式的计算结果为 <tt>true</tt>或者 <tt>false</tt>， 例如：</p><p class="code">var temp_x = (x &lt; (room_width / 2)) ? 32: (room_width - 32);</p><p>上面的代码将对照房间宽度一半的值检查“ x”的值，然后将其减小，将其设置为“<span class="inline">temp_x</span> “否则为32”<span class="inline">temp_x</span> “将是房间宽度-32。以下是更多使用示例：</p><p class="code">draw_text(x, y, &quot;The fee is &quot; + (global.Member ? &quot;$2.00&quot; : &quot;$10.00&quot;));<br/> path_start(((global.level &gt; 10) ? path_hard : path_easy;), 2, path_action_reverse, true);<br/> (--hp &lt;= 0) ? instance_destroy() : score +=
    10;</p><p>同样值得注意的是，您可以嵌套条件操作，但是如果这样做，则每个操作都需要放在方括号中，例如： </p><p class="code">var c = a ? &quot;foo&quot; : (b ? &quot;bar&quot; : &quot;whee&quot;); // Correct<br/> var c = a ? &quot;foo&quot; : b ? &quot;bar&quot; : &quot;whee&quot;;   // Will cause an error</p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">返回：<a href="../Language_Features.htm">语言功能</a></div><div style="float:right">下一个：<a href="repeat.htm">repeat</a></div></div></div><h5> <span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
if
else
then
ternary operators
conditional operators
-->
  <!-- TAGS
if
else
then
-->
</body>
</html>