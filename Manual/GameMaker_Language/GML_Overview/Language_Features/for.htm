<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>为</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the for function" />
  <meta name="rh-index-keywords" content="for" />
  <meta name="search-keywords" content="for" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>为</h1>
  <p>多次迭代一个（或多个）<a class="glossterm" data-glossterm="声明" href="#">语句</a>的最常用方法之一是使用<tt>for</tt>循环，其形式如下。</p>
  <p class="code">for (&lt;assignment&gt;; &lt;expression&gt;; &lt;operation&gt;;)<br> {<br> &lt;statement&gt;;<br> &lt;statement&gt;;<br>...<br> }</p>
  <p>其工作原理如下：首先执行赋值，为变量赋值，然后对<a class="glossterm" data-glossterm="表情" href="#">表达式</a>进行评估，如果为<tt>真</tt>，则执行大括号{}中的语句。
    中的语句被执行。接下来对被赋值的变量进行操作，然后再次对表达式进行评估。这个循环将继续下去，直到发现表达式为<tt>假</tt>。</p>
  <p>现在，这样写可能听起来很复杂，但你应该把它理解为。</p>
  <ol>
    <li>第一个赋值初始化了for-loop</li>
    <li>该表达式测试是否应该结束循环</li>
    <li>该声明的执行</li>
    <li>操作的进行</li>
    <li>回到第2步，再次执行表达式，继续或退出循环。</li>
  </ol>
  <p>这对于做重复性的工作是非常有用的，因为以任何其他方式都会涉及到多行代码，而且通常被用作评估数组、绘制东西、设置增量值等的计数器。下面的代码例子说明了
    这种类型的语句的典型用途。</p>
  <p class="code">for (var i = 0; i &lt; 10; i += 1)<br> {
    <br> draw_text(32, 32 + (i * 32), string(i) + &quot;. &quot;+ string(scr[i]) );<br> }
  </p>
  <p>上面的代码初始化了一个 <span class="inline">for</span> 循环，从0开始，一直数到（包括）9，然后使用<tt>i</tt>的循环值在屏幕上绘制存储在数组中的数值。注意<tt>for</tt>循环变量
   <tt>i</tt>不仅用于循环数组，而且还用于绘制数字，以及告诉<span class="notranslate">GameMaker Studio 2</span>在房间里把数值绘制到哪里。这种灵活性是<tt>for</tt>循环在编程中如此重要的主要原因之一。</p>
  <p><strong>什么时候应该使用<tt>for</tt></strong>循环？任何时候你需要对一个或多个语句执行固定数量的迭代，同时跟踪当前正在运行的<a class="glossterm" data-glossterm="迭代" href="#">迭代</a>
    同时跟踪当前正在运行的迭代并使用该迭代值。</p>
  <p class="note"><b>注意</b>：在与其他人一起工作时，你会看到多个例子，其中的变量 &quot;i<tt>&quot;和</tt>&quot;j &quot;被用于循环计数器的变量。这些<b>并不是</b>强制性的变量名，你可以使用任何
    像 &quot;a &quot;或 &quot;foo &quot;或<tt>其他什么。</tt>使用 &quot;i<tt>&quot;和</tt>&quot;j &quot;只是编程中的一个标准惯例。</p>
  <p>值得注意的是，你也可以在一个 <span class="inline">for</span> 循环中使用特殊的 <span class="inline"><a href="break.htm">break</a></span> 和 <span class="inline"><a href="continue.htm">continue</a></span> 语句。使用 <span class="inline">break</span> ，将立即退出循环，并在循环结束后转入事件或函数中的任何代码，例如。</p>
  <p class="code">var _inst = noone;<br> for (var i = 0; i &lt; 10; i += 1)<br> {
    <br> _inst = instance_find(obj_Enemy_Parent, i);<br> if instance_exists(_inst)<br> {<br> if _inst.object_index == obj_Enemy_Melee<br> {<br> break;<br> }<br> }<br> }<br> target = _inst;</p>
  <p>上面的代码在给定的 &quot;父 &quot;对象的10个最近的实例中循环，如果找到一个实例，它将检查实例对象的ID，如果它是 <span class="inline">obj_Enemy_Melee</span> 的一个实例，那么循环就会结束。
    使用 <span class="inline">break</span> ，并将ID值分配给一个变量（如果没有找到实例，那么关键字 <span class="inline"><a href="../Instance_Keywords.htm">noone</a></span> 将被添加到该变量中）。</p>
  <p>在 <span class="inline">for</span> 循环中使用 <span class="inline">continue</span> 的一个例子是。</p>
  <p class="code">var _val = 0;<br> for (var i = 0; i &lt; 10; i += 1)<br> {
    <br> if (val_array[i] &lt;= 0)<br> {<br> continue;<br> }<br> _val += val_array[i];<br> }
    <br> draw_text(32, 32, &quot;正值总数=&quot; + string(_val))。</p>
  <p>这段代码将检查存储在一个10长度的1D<a href="../Arrays.htm">数组</a>的每个数组位置的值，如果有任何小于或等于0的值，它将 <span class="inline">continue</span> ，意味着当前的迭代将结束。
    <span class="inline">i</span> ，并开始下一个循环迭代。如果数值大于0，那么它将被添加到本地变量 <span class="inline">_val</span> ，在循环结束后，总的数值将被画到屏幕上。
    被画到屏幕上。</p>
  <p>更多关于循环关键词的例子，请参见以下章节 <a href="repeat.htm"><tt>重复</tt></a>, <a href="while.htm"><tt>而</tt></a>，以及 <a href="do___until.htm"><tt>做/直到</tt></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Language_Features.htm">语言特点</a></div>
        <div style="float:right">下一页:<a href="switch.htm">开关</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
for
-->
  <!-- TAGS
for
-->
</body>
</html>