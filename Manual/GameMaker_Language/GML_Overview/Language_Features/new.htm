<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>新</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the new function" />
  <meta name="rh-index-keywords" content="new" />
  <meta name="search-keywords" content="new" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>新</h1>
  <p> <tt>新</tt>操作符可用于创建一个带有函数的结构，该函数会在给定参数下被调用。然后，该函数可以用参数中的变量来填充结构--就像实例的创建事件将为实例设置初始的
    变量--然后<tt>new</tt>操作符将返回该结构。在使用该操作符之前，必须注意给定的函数<i>必须被标记为<tt>构造函数</tt></i>，否则<tt>new</tt>操作符将不会创建结构（下面的代码示例显示了这一点，更多信息请参见<a href="../Structs.htm">结构</a>页面）。</p>
  <p class="note"><strong>注意</strong>：你可以检查一个结构，以了解使用<span class="notranslate">运行时</span>函数创建该结构时使用了哪个函数 <a href="../../GML_Reference/Variable_Functions/instanceof.htm"><tt>instanceof()</tt></a>.</p>
  <p>该操作符的语法如下。</p>
  <p class="code"><span>&lt;变量&gt;=新的&lt; </span>函数&gt;（&lt;参数&gt;，&lt;参数&gt;，...）。</p>
  <p>当你在使用函数的同时使用new操作符时，它将返回一个存储在给定变量中的结构引用，允许你访问该结构和由函数在其中创建的任何变量。</p>
  <p>下面的例子显示了一个被定义为构造器的函数。</p>
  <p class="code">function init_struct(_a, _b, _c) constructor<br> {
    <br> a = _a;<br> b = _b;<br> c = _c;<br> }
  </p>
  <p>然后，这个函数可以与<tt>new</tt>操作符一起使用，以创建一个结构，并将变量设置为函数中使用的参数值来填充该结构，像这样。</p>
  <p class="code">mystruct = new init_struct(10, 100, &quot;Hello World&quot;)。</p>
  <p>需要注意的是，在任何<em>没有</em>被标记为构造函数的函数上调用new将导致<a href="../../../Additional_Information/Errors/Runner_Errors.htm"><span class="notranslate">运行时</span></a>异常。</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Language_Features.htm">语言特点</a></div>
        <div style="float:right">下一页:<a href="delete.htm">删除</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
new
-->
  <!-- TAGS
new
-->

</body></html>