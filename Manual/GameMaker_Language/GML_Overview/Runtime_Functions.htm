<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>运行时功能</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the use of runtime functions" />
  <meta name="rh-index-keywords" content="Runtime Functions" />
  <meta name="search-keywords" content="functions,built-in functions" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span class="notranslate">运行时</span>功能</h1>
  <p>函数的一般定义是这样的。</p>
  <p><i>一个函数有一个输入和一个输出，输出与输入有一定的关系。</i></p>
  <p>在<span class="notranslate">GameMaker Studio 2</span>中，这转化为两种不同的东西，但它们都以同样的方式工作。</p>
  <ul class="colour">
    <li><b><span class="notranslate">运行时</span></b>函数 - 一个 <i><span class="notranslate">运行时间</span></i>函数是指作为GML的一部分而提供的函数。 <b><span class="notranslate">GameMaker语言</span></b><span class="notranslate">(GML</span>)的一部分。这些是内置于语言中的，可以用来使你的游戏中发生的事情，有大量的<span class="notranslate">GML</span>
      有大量的GML<span class="notranslate">运行时</span>函数供你使用，所有这些在手册的<a href="../GML_Reference/GML_Reference.htm">语言参考</a>部分都有解释。</li>
    <li><b>脚本函数和方法 </b>- <a href="Script_Functions.htm"><em>脚本 </em><em>职能</em></a>和 <a href="Method_Variables.htm"><em>M</em><i>方法变量</i></a>是你自己创建的函数，使用了基本的
      的基本模块创建的函数。 <b><span class="notranslate">GameMaker语言</span></b><span class="notranslate">(GML</span>)，这些可以包括作为其代码一部分的<span class="notranslate">运行时</span>函数。</li>
  </ul>
  <p>在上述两种情况下，一个函数的形式是一个函数<i>名</i>，后面是在大括号<tt>（）</tt>之间的<i>输入<span class="glossextra">参数</span></i>，用逗号隔开（如果函数没有输入参数，则只用大括号）。
    逗号分隔（如果函数没有输入参数，则只使用括号）。本页集中讨论<strong><span class="notranslate">运行时</span></strong>函数（即：<span class="notranslate">GameMaker</span>内置的函数，形成<span class="notranslate">GameMaker 语言</span>），但以下所示的一般规则适用于所有函数类型。
    但以下所示的一般规则适用于所有函数类型。</p>
  <p>下面是一个函数的结构概要。</p>
  <p class="code">&lt;function&gt;(&lt;arg0&gt;, &lt;arg1&gt; , ... &lt;argN&gt;)。</p>
  <p>一些函数可以返回值，并可以在<span class="glossextra">表达式</span>中使用，而另一些函数只是执行命令，如下面两个<span class="notranslate">运行时</span>函数的例子所示
    的例子。</p>
  <p class="code">// 销毁调用的实例<br> // 这不需要参数，也不返回任何东西<br> instance_destroy()。
    <br>
    <br> // 获取当前实例位置到鼠标位置的距离<br> // 这需要四个参数并返回一个实数<br> dist = point_distance(x, y, mouse_x, mouse_y);</p>
  <p class="note"><strong>注意</strong>：手册中任何地方将 &quot;N/A &quot;作为一个函数的返回值，都意味着该函数不打算作为其操作的一部分而返回任何值。如果你试图从这些函数中检查一个返回值，那么你
    将得到的值是 <span class="inline">undefined</span> 。 </p>
  <p>有时，一个函数的返回值可能是你想在<a class="glossterm" data-glossterm="任务" href="#">赋值</a>中使用的值，但你应该注意，不可能<em>直接</em>使用任何函数作为赋值的左边的
    赋值的左边。例如，下面这段在实例上设置速度的代码会给你一个错误。</p>
  <p class="code">instance_nearest(x, y, obj).speed = 0;</p>
  <p>该代码示例中表达式的返回值是一个整数（最近的实例的唯一ID值），因此必须用括号括起来，才能以这种方式使用，并正确寻址所需的实例（参见在<a href="Addressing_Variables_In_Other_Instances.htm">其他实例中寻址变量</a>以获得更多信息）。上面的代码可以正确地写成。</p>
  <p class="code">(instance_nearest(x, y, obj)).speed = 0;<br>
    <br> //或者更正确的还是<br>
    <br> var inst = instance_nearest(x, y, obj);<br> inst.speed = 0;</p>
  <p>手册中的 "<a href="../GML_Reference/GML_Reference.htm">语言参考</a>"部分列出了所有可用的<span class="notranslate">运行时</span>函数，并给出了如何使用这些函数的例子，以及关于它们可能返回什么的其他重要信息
    或者它们可能触发的任何事件等等。关于用户定义的脚本函数和方法的更多信息，请参见<a href="Script_Functions.htm">脚本函数</a>部分和<a href="Method_Variables.htm">方法变量</a>部分。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="GML_Overview.htm"><span class="notranslate">GML</span>概述</a></div>
        <div style="float:right">下一步。<a href="Commenting_Code.htm">注释代码</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">Runtime</span> Functions
-->
  <!-- TAGS
<span class="notranslate">runtime</span>_functions
-->
</body>
</html>