<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>音频_free_play_queue</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_free_play_queue" />
  <meta name="rh-index-keywords" content="audio_free_play_queue" />
  <meta name="search-keywords" content="audio_free_play_queue" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>音频_free_play_queue</h1>
  <p>这个函数用来释放与给定音频队列相关的内存。队列索引是你用函数创建队列时返回的值 <a href="audio_create_play_queue.htm"><tt>Audio_create_play_queue()</tt></a>，并且
    这个函数应该在不再需要该队列时调用，以防止内存泄漏。释放队列将停止任何正在播放的声音，你不能删除正在流传的声音的缓冲区，直到它被分配的队列
    的队列被释放之前，你不能删除声音流的缓冲区。这个函数将触发一个<a href="../../../../../The_Asset_Editors/Object_Properties/Async_Events/Audio_Playback.htm">音频播放的异步事件</a>，在这个事件中，一个特殊的<a href="../../../Data_Structures/DS_Maps/DS_Maps.htm">DS地图</a>将被创建在变量中。
    变量中创建一个特殊的DS地图 <a href="../../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a>中创建一个特殊的DS地图，其键/值对如下。</p>
  <ul class="colour">
    <li>&quot; queue<strong>_id&quot;--</strong>已完成播放数据的队列</li>
    <li>&quot; bu<strong>ffer_id&quot; -</strong> 不再被播放的缓冲区</li>
    <li>&quot; queue<strong>_shutdown&quot; -</strong> 在正常播放时设置为0，收到事件时设置为1，因为你已经用这个函数释放了队列。当它被设置为1时，你就不想再排队等待数据了。</li>
  </ul>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">audio_free_play_queue(queueIndex)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>队列索引(queueIndex)</td>
        <td>要释放的队列的索引。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">不适用</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var q_id = async_load[? &quot;queue_id&quot;];<br> if (q_id == audio_queue)<br> {<br> audio_free_play_queue( audio_queue);<br> buffer_delete( audio_buffer);<br> }</p>
  <p>上面的代码将在异步<a href="../../../../../The_Asset_Editors/Object_Properties/Async_Events/Audio_Playback.htm">音频播放</a>事件中进行，并检查已完成播放的音频是否来自 &quot;audio_queue&quot;
    如果是，就释放队列和与之相关的缓冲区。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Audio.htm">音频缓冲器</a></div>
        <div style="float:right">下一页:<a href="audio_queue_sound.htm">音频队列_声音</a></div>
        <div style="float:right"> </div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
audio_free_play_queue
-->
  <!-- TAGS
audio_free_play_queue
-->
</body>
</html>