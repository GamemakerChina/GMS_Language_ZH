<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>音频听众的速度</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_listener_velocity" />
  <meta name="rh-index-keywords" content="audio_listener_velocity" />
  <meta name="search-keywords" content="audio_listener_velocity" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>音频听众的速度</h1>
  <p>这个函数可以用来给听众提供<em>多普勒 </em>效应，并根据从给定的相对x、y和z位置解析的矢量来模拟音频运动。如果听众本身不会移动，或者移动不是一个恒定的运动，你通常不需要设置。
    但是，例如，如果你正在制作一个滚动游戏，玩家有一个从下到上的恒定运动，而敌人有一个从上到下的恒定运动，你将设置
    听众<i>和</i>发射器的速度（对于发射器，你可以使用 <span class="inline"><a href="../Audio_Emitters/audio_emitter_velocity.htm"><tt>audio_emitter_velocity()</tt></a></span> ）设置为适当的矢量，以模拟正确的多普勒效应。
    以模拟正确的多普勒效应，因为它们从玩家实例旁边移动。</p>
  <p class="note"><b>注意： </b>如果你有多个监听器，你应该使用函数 <span style="font-size:1px;"><a href="audio_listener_set_velocity.htm"><tt style="font-size: 14px">audio_listener_set_velocity()</tt></a></span>.</p>
  <p>下面的图片显示了如何为上面给出的游戏实例进行设置。</p>
  <p><img alt="Audio Listener Velocity Example" class="center" src="../../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Listener_Velocity.png" /></p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">audio_listener_velocity(vx, vy, vz)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>vx</td>
        <td>听众的X速度分量（默认为0）。</td>
      </tr>
      <tr>
        <td>vy</td>
        <td>听众的y速度分量（默认为0）。</td>
      </tr>
      <tr>
        <td>vz</td>
        <td>听众的Z速度分量（默认为0）。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">不适用</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">如果速度&gt;0<br> {
    <br> audio_listener_velocity(abs(hspeed), abs(vspeed), 0);<br> }
  </p>
  <p>上面的代码检查播放器实例的速度是否超过0，如果是，它就使用适当的绝对 <span class="inline">hspeed</span> 和 <span class="inline">vspeed</span> 组件来设置监听器的速度。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Audio_Listeners.htm">音频收听者</a></div>
        <div style="float:right">下一篇：<a href="audio_listener_orientation.htm">音频_听众</a>的方向性</div>
        <div style="float:right"> </div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
audio_listener_velocity
-->
  <!-- TAGS
audio_listener_velocity
-->
</body>
</html>