<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>实例_地点</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function instance_place" />
  <meta name="rh-index-keywords" content="instance_place" />
  <meta name="search-keywords" content="instance_place" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>实例_地点</h1>
  <p>通过这个函数，你可以使用运行检查代码的实例的碰撞掩码来检查一个位置是否与另一个实例或一个物体的所有实例发生碰撞。当你使用这个功能时，你实际上是要求<span class="notranslate">GameMaker Studio 2</span>将实例移动到新的位置，检查是否有碰撞，然后移动回来，并告诉你是否发现了碰撞。这对精确的碰撞是有效的，但前提是实例和被检查的对象都有精确的碰撞掩码
    选择，否则只应用边界框碰撞。这个函数将返回被碰撞对象的唯一实例 <a href="Instance_Variables/id.htm"><tt>id</tt></a>的唯一实例，但是如果不需要的话，使用
    函数 <a href="../../Movement_And_Collisions/Collisions/place_meeting.htm"><tt>place_meeting()</tt></a>.这个函数也接受特殊的关键字 <span class="inline"><b>all</b></span> 和 <span class="inline"><b>other</b></span> ，如果没有碰撞，将返回关键字 。
    如果没有发生碰撞，则返回<a href="../../../GML_Overview/Instance_Keywords.htm">关键字</a> <span class="inline"><b>noone</b></span> ，如果发生了碰撞，则返回找到的实例的唯一ID值。</p>
  <p>注意，在执行检查之前，给定的x/y坐标将被四舍五入为最接近的整数，所以如果这<i>不是</i>你所需要的（或者你一直在使用一个传统的<span class="notranslate">GameMaker</span>产品），你应该<tt>将</tt>坐标在
    检查。</p>
  <p class="code">instance_place_list(floor(x), floor(y), obj_Enemy, list, true)。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">instance_place(x, y, obj);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>x</td>
        <td>检查实例的X位置。</td>
      </tr>
      <tr>
        <td>y</td>
        <td>检查实例的y位置。</td>
      </tr>
      <tr>
        <td>obj</td>
        <td>要检查的对象的实例。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">真实（要么是一个实例ID值，要么是关键词<tt>noone</tt>）。</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var _inst = instance_place(x, y, obj_Enemy);<br> if _inst != noone<br> {
    <br> hp -= _inst.dmg;<br> instance_destroy(_inst);
    <br> }
  </p>
  <p>上面的代码将检查与 &quot;obj_Enemy &quot;实例的碰撞，如果有的话，它将把 &quot;hp &quot;变量减少，减少的量存储在碰撞实例的 &quot;dmg &quot;变量中，然后破坏碰撞的
    实例。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回:<a href="Instances.htm">实例</a></div>
        <div style="float:right">下一篇：<a href="instance_place_list.htm">instance_place_list</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
instance_place
-->
  <!-- TAGS
instance_place
-->
</body>
</html>