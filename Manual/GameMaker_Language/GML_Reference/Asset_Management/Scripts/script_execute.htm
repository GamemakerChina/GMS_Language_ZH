<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>脚本_执行</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function script_execute" />
  <meta name="rh-index-keywords" content="script_execute" />
  <meta name="search-keywords" content="script_execute" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>脚本_执行</h1>
  <p>这个函数最初是为以动态方式调用脚本<i>资产</i>而设计的，但随着用户定义函数的引入，它现在可以以两种方式使用。</p>
  <ul class="colour">
    <li>第一种方式是支持<b>传统的</b>脚本，即每个脚本都是一个函数，脚本的标题也是函数的名称。以这种方式使用，它将像以前一样工作，它将运行一个用户创建的脚本资产，并将给定的参数传给它。
      给定的参数到它里面。注意，<i>在</i>这种情况下，它实际上并不是在调用<i>脚本</i>，而是在脚本中调用同名<i>的脚本函数</i>。<span style="text-align: justify;"></span></li>
    <li><span style="text-align: justify;">第二种方法是在一个包含多个函数或变量定义的脚本资产中调用一个函数。在这种情况下，你将提供函数名称和它所需要的参数，而不是脚本资产名称。注意，这只对<a href="../../../GML_Overview/Script_Functions.htm">脚本函数</a>有效，而对<a href="../../../GML_Overview/Method_Variables.htm">方法</a>无效，因为只有脚本函数才有一个分配给它们的脚本ID。</span></li>
  </ul>
  <p><span style="text-align: justify;"></span>虽然这个函数主要是为传统支持而设计的，但它并没有被废弃，因为它在网络和远程过程调用的情况下仍然有它的位置。另外值得注意的是，这个函数
    是很慢的，经常使用它可能会对性能产生不利的影响。</p>
  <p class="note"><b>注意</b>：此功能不能与内置功能一起使用。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">script_execute(scr, arg0, arg1, arg2..., etc...)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>擦洗</td>
        <td>你想调用的函数/脚本的名称</td>
      </tr>
      <tr>
        <td>arg0, arg1, arg2..., 等等...</td>
        <td>你想传递给函数/脚本的不同参数</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">将取决于被调用的脚本/函数的返回值</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">script_execute(choose(move_up, move_down, move_left, move_right), irandom(5))。</p>
  <p>上面的示例代码将使用<tt>script_execute</tt>从四个用户定义的函数中选择一个（本例中与运动有关），并将一个随机的整数作为第一个参数传给它。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Scripts.htm">脚本</a></div>
        <div style="float:right">下一页:<a href="script_execute_ext.htm">script_execute_ext</a></div>
        <div style="float:right"> </div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
script_execute
-->
  <!-- TAGS
script_execute
-->
</body>
</html>