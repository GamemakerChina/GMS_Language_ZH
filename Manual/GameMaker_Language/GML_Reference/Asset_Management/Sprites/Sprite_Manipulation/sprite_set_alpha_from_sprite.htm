<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>幽灵_set_alpha_from_sprite</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function sprite_set_alpha_from_sprite" />
  <meta name="rh-index-keywords" content="sprite_set_alpha_from_sprite" />
  <meta name="search-keywords" content="sprite_set_alpha_from_sprite" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>幽灵_set_alpha_from_sprite</h1>
  <p>这个函数使用一个精灵的值/饱和度，并将其与目标精灵的α值相乘。理想情况下，被用来生成新的阿尔法贴图的精灵应该是灰度的，白色区域的阿尔法值相当于1
   <i>不</i>透明），黑色区域相当于α值为0（透明），而灰色区域的α值则介于0和1之间。
    因为这将产生一个错误。这意味着你必须以某种方式 &quot;临时 &quot;创建两个全新的精灵，才能使该功能正常工作。这可以通过使用曲面来实现，也可以通过从屏幕上创建一个精灵（下面的代码
    下面的例子显示了如何用曲面实现这个效果）。)</p>
  <p class="note"><b>注意</b>：这个函数只<b>对位图</b>精灵有用，对SWF或JSON（Spine）精灵不起作用。</p>
  <p>下面是一张图片，说明了这个功能是如何工作的。</p>
  <p><img alt="Sprite Set Alpha Example" class="center" src="../../../../../assets/Images/Scripting_Reference/GML/Reference/Sprites/spr_alpha.png" /></p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">sprite_set_alpha_from_sprite(ind, spr)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>ind</td>
        <td>要改变透明度贴图的精灵的索引。</td>
      </tr>
      <tr>
        <td>洒水</td>
        <td>取出透明度贴图数据的精灵的索引。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回</h4>
  <p class="code">不适用</p>
  <p> </p>
  <h4>扩展实例。</h4>
  <p>在这个扩展的例子中，我们展示了如何从两个精灵资源中创建一个特殊效果的精灵。首先，我们需要在实例的<b>创建事件</b>中设置一个控制器变量。这个变量是为了确保精灵只被创建一次
    创建一次。</p>
  <p class="code">spr_create = true。</p>
  <p>一旦完成，我们就需要转到<b>绘图事件</b>，并加入以下代码。</p>
  <p class="code">如果 spr_create<br> {
    <br> spr_create = false;<br> var _sw = sprite_get_width(spr_Explosion_Alpha);<br> var _sh = sprite_get_height(spr_Explosion_Alpha);<br> var _xo = sprite_get_xoffset(spr_Gradient);<br> var _yo = sprite_get_yoffset(spr_Gradient);<br> var _surf = surface_create(_sw, _sh);<br> surface_set_target(_surf) 。
    <br> draw_clear_alpha(c_black, 0);<br> draw_sprite(spr_Gradient, 0, 0, 0);<br> sprite_index = sprite_create_from_surface(_surf, 0, 0, _sw, _sh, false, false, _xo, _yo);<br> draw_clear_alpha(c_black, 0);<br> draw_sprite(spr_Explosion_Alpha,
    0, _xo, _yo);<br> var _spr = sprite_create_from_surface(_surf, 0, 0, _sw, _sh, false, false, _xo, _yo);<br> surface_reset_target() 。
    <br> surface_free(_surf)。
    <br> sprite_set_alpha_from_sprite(sprite_index, _spr);<br> sprite_delete(_spr);
    <br> }
    <br> draw_sprite(sprite_index, 0, x, y);</p>
  <p>上面的代码首先检查控制变量是否为真，如果为真，它就运行代码来设置精灵的阿尔法，将变量设置为假，以防止代码多次运行。在这种情况下，它会创建一个表面
    的大小，然后把要改变阿尔法值的精灵画在表面上，并从中创建一个新的精灵，把它指定为对象的<tt>精灵索引</tt>。然后，代码会清除表面并
    并创建另一个新的精灵，将其索引存储在一个局部变量中。最后，分配给对象的新精灵从这个临时精灵那里得到它的阿尔法设置，表面被释放，临时精灵被删除。
    删除。</p>
  <p>这里还有最后一件事要做，那就是在不使用时从内存中删除为该对象创建的精灵。这可以在<b>Destroy事件</b>或<b>Room End事件</b>中完成，就像这样。</p>
  <p class="code">sprite_delete(sprite_index)。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">回来了。<a href="Sprite_Manipulation.htm">雪碧操纵</a></div>
        <div style="float:right">下一页:<a href="sprite_set_cache_size.htm">sprite_set_cache_size</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
sprite_set_alpha_from_sprite
-->
  <!-- TAGS
sprite_set_alpha_from_sprite
-->
</body>
</html>