<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_post_string</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for http_post_string" />
  <meta name="rh-index-keywords" content="http_post_string" />
  <meta name="search-keywords" content="http_post_string" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>http_post_string</h1>
  <p>在计算中，当客户端需要向服务器发送数据作为检索请求的一部分时，就会使用<b>post</b>请求，例如在上传文件或提交一个完成的表单时，<span class="notranslate">GameMaker Studio 2</span>中的这个函数也是如此。
    与只向服务器发送URL的 <span class="inline"><a href="http_get.htm">http_get()</a></span> 请求方法不同，<tt>http_post_string()</tt>还包括一个发送到服务器的字符串，并可能导致创建
    新的资源或更新现有的资源或两者。应该注意的是，HTTP请求参数（当你在网页上提交表单时，有时会被 &quot;附加 &quot;到URL的末尾）在使用这个函数时也是完全可以接受的。
    这个函数时也完全可以接受。</p>
  <p class="note"><b>注意： </b>你应该知道，由于浏览器的XSS保护，从跨域加载资源的请求和尝试会被阻止，并可能出现返回空白结果。请参阅<a href="HTTP.htm">跨域问题</a>部分以了解更多细节。</p>
  <p>这个事件将产生一个 &quot;回调&quot;，由任何HTTP<a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">事件接收，在这种</a>情况下，它将产生一个DS Map（<a href="../../Data_Structures/DS_Maps/DS_Maps.htm">更</a>常见的是 &quot;字典&quot;），它是这个事件独有的，并被存储在特殊变量中 <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a>.这个DS地图将包含
    不同的值，取决于是否有数据被返回。例如，如果你请求了一个文件，事件将在每个数据包被接收时多次触发，这样你就可以显示一个进度条，比如说。一般的
    DS地图的一般结构如下。</p>
  <ul class="colour">
    <li><b>id:从 </b>命令中返回的ID。如果你发出了一系列的<tt>http_</tt>请求，那么你需要知道你得到的是哪一个回复，因此你将使用这个值与你最初发送请求时存储的值进行比较，以找到正确的答案。
      的值进行比较，以找到正确的那一个。</li>
    <li><b>status:错 </b>误时返回一个小于0的值，完成时返回0，接收数据包时返回1（详见下文）。</li>
    <li><b>结果。 </b>收到的数据（只有字符串）。</li>
    <li><b>url。 </b>你要求的完整的URL。</li>
    <li><b>http_status。 </b>原始的http状态代码（如果有的话）。这将返回大多数浏览器的标准网络状态代码，例如：304表示 &quot;未修改 &quot;或204表示 &quot;无内容&quot;，等等。</li>
  </ul>
  <p>如果有多个数据包被返回给你的游戏，回调 &quot;状态 &quot;键将返回1，在这种情况下，DS地图将有以下额外的键。</p>
  <ul class="colour">
    <li><b>&quot;contentLength&quot;。 </b>这是网络服务器说你应该期望收到的文件的大小（如果服务器不返回这个数据，可能是-1）。</li>
    <li><b>&quot;sizeDownloaded&quot;。 </b>已经下载的数据的大小。</li>
  </ul>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">http_post_string(url, string)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>网址</td>
        <td>你希望获得信息的服务器的网络地址</td>
      </tr>
      <tr>
        <td>绳子</td>
        <td>你希望发送至指定URL的字符串</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">真实的</p>
  <p> </p>
  <h4>扩展实例。</h4>
  <p> <tt>http_post_string()</tt>函数可以从任何事件中调用，由于它是异步的，所以回调可以是瞬间的，也可以是几秒钟的。调用该函数很简单，看起来就像这样。</p>
  <p class="code">var str = &quot;name=&quot; + global.player_name + &quot;&amp;score=&quot; + string（global.player_score）;<br> post = http_post_string(&quot;http://www.angusgames.com/game?game_id=&quot; + string（global.game_id）, str);</p>
  <p>上面的代码用给定的参数向指定的URL发送一个检索请求，同时发送存储在变量str中的额外数据（以URL编码形式的球员姓名和得分）。如果收到回调，这将触发所有定义的异步<b>Http事件</b>，你可以对照存储在变量post中的 &quot;id &quot;返回，以<tt>确保</tt>你运行正确的代码，如果你已经使用了各种http_post_<tt>string()函数</tt>。下面的
    示例代码显示了如何做到这一点。</p>
  <p class="code">var r_str = &quot;null&quot;;<br> if ds_map_find_value(async_load, &quot;id&quot; ) == post<br> {
    <br> if ds_map_find_value(async_load, &quot;status&quot;) == 0<br> {
    <br> r_str = ds_map_find_value(async_load, &quot;result&quot;);<br> }
    <br> }
  </p>
  <p>上面的代码将首先检查已经创建的DS地图的id，然后检查回调的状态。如果该值等于0（表示成功），那么回调的结果将被存储在一个变量中供将来使用，否则
    变量将只是保留一个默认值（在这里是 &quot;null&quot;）。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back:<a href="HTTP.htm">HTTP</a></div>
        <div style="float:right">下一篇:<a href="http_get_request_crossorigin.htm">http_get_request_crossorigin</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
http_post_string
-->
  <!-- TAGS
http_post_string
-->
</body>
</html>