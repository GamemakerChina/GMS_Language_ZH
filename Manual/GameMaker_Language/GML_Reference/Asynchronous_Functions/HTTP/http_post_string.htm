<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_post_string</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="http_post_string的参考页" />
  <meta name="rh-index-keywords" content="http_post_string" />
  <meta name="search-keywords" content="http_post_string" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>http_post_string</h1><p>在计算中，<b>交</b>请求用于当客户端需要将数据发送到服务器作为检索请求的一部分，例如上传文件或提交完成的表格时一样，和同样是在这个函数中的真实<span class="notranslate">GameMaker Studio 2</span> 。与之相反 <span class="inline"><a href="http_get.htm">http_get()</a></span>仅将URL发送到服务器的请求方法，<tt>http_post_string()</tt>还包括发送到服务器的字符串，它可能导致创建新资源或更新现有资源或两者。应该注意的是，使用此功能时，HTTP请求参数（当您在网页上提交表单时有时会“附加”到URL的末尾）也是完全可以接受的。</p><p class="note"><b>注意：</b>您应该意识到，由于浏览器中的XSS保护，跨域对资源的请求和加载尝试都将被阻止，并且可能会返回空白结果。有关更多详细信息，请参阅“<a href="HTTP.htm">跨域问题”部分。</a></p><p>此事件将生成一个“回调”，该回调将被任何<a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">HTTP事件</a>拾取，在这种情况下，它将生成一个<a href="../../Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a> （通常称为“字典”），该映射专用于此事件，并存储在特殊变量中<a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a> 。根据是否有数据返回，此DS映射将包含不同的值。例如，如果您已请求文件，则事件将在接收到每个数据包时触发多次，因此您可以显示进度条。 DS地图的一般结构如下：</p><ul class="colour"><li> <b>id：</b>从命令返回的ID。如果您开除一系列 <tt>http_</tt>请求，那么您需要知道您要获得答复的对象，因此您将使用此值与最初发送请求以查找正确请求时存储的值进行比较。</li><li> <b>status：</b>对于错误返回小于0的值，对于完整返回0，对于接收数据包返回小于1的值（有关更多详细信息，请参见下文）。</li><li><b>结果：</b>接收到的数据（仅字符串）。</li><li> <b>url：</b>您请求的完整URL。</li><li> <b>http_status：</b>原始的http状态代码（如果有）。这将为大多数浏览器返回标准的网络状态代码，例如：“未修改”为304，“无内容”为204，等等。</li></ul><p>如果有多个数据包返回给您的游戏，则回调“状态”键将返回1，在这种情况下，DS映射将具有以下附加键：</p><ul class="colour"><li> <b>“ contentLength”：</b>这是Web服务器说您应该期望接收的文件大小（如果服务器不返回此数据，则为-1）。</li><li> <b>“ sizeDownloaded”：</b>已经下载的数据的大小。</li></ul><p></p><h4>句法：</h4><p class="code">http_post_string(url, string);</p><table><tbody><tr><th>争论</th><th>描述</th></tr><tr><td><span class="notranslate">url</span></td><td>您希望从中获取信息的服务器的网址</td></tr><tr><td><span class="notranslate">string</span></td><td>您希望发送到指定URL的字符串</td></tr></tbody></table><p></p><h4>返回值：</h4><p class="code">Real</p><p></p><h4>扩展示例：</h4><p>这 <tt>http_post_string()</tt>可以从任何事件调用该函数，并且由于它是异步的，所以回调几乎是瞬时的，也可能需要几秒钟。调用函数很简单，看起来像这样：</p><p class="code">var str = &quot;name=&quot; + global.player_name + &quot;&amp;score=&quot; + string(global.player_score);<br/> post = http_post_string(&quot;http://www.angusgames.com/game?game_id=&quot; + string(global.game_id), str);</p><p>上面的代码使用给定的参数将检索请求发送到指定的URL，并发送存储在变量str中的其他数据（播放器名称和得分以URL编码的形式）。如果收到回调，这将触发所有已定义的异步<b>Http事件</b>，您可以对照存储在变量中的ID来检查返回的“ id”<tt>post</tt>确保您使用了各种代码来运行正确的代码 <tt>http_post_string()</tt>功能。以下示例代码显示了如何完成此操作：</p><p class="code">var r_str = &quot;null&quot;;<br/> if ds_map_find_value(async_load, &quot;id&quot;) == post<br/>     {
    <br/>     if ds_map_find_value(async_load, &quot;status&quot;) == 0<br/>         {
    <br/>         r_str = ds_map_find_value(async_load, &quot;result&quot;);<br/>         }
    <br/>     }
  </p><p>上面的代码将首先检查已创建的DS映射的ID，然后检查回调的状态。如果该值等于0（信号发送成功），则来自回调的结果将存储在变量中以备将来使用，否则该变量将仅保留默认值（在这种情况下为“ null”）。 </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">背面： <a href="HTTP.htm">HTTP</a></div><div style="float:right">下一个：<a href="http_get_request_crossorigin.htm">http_get_request_crossorigin</a></div></div></div><h5> <span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
http_post_string
-->
  <!-- TAGS
http_post_string
-->
</body>
</html>