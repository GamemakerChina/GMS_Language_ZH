<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_load</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="buffer_load的参考页" />
  <meta name="rh-index-keywords" content="buffer_load" />
  <meta name="search-keywords" content="buffer_load" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>buffer_load</h1><p>此功能用于加载以前使用 <a href="buffer_save.htm"><tt>buffer_save()</tt></a>功能，以及所有<a href="../../../Settings/Included_Files.htm" title="包含文件">包含文件</a>或从外部加载的文件。它将返回一个新的缓冲区ID，该ID由函数创建为<a href="buffer_create.htm">字节对齐方式为1的“增长”缓冲区（请参见此处</a>）。此ID应存储在变量中，并在对该缓冲区的所有其他函数调用中使用。如果由于某种原因加载失败，该函数将返回-1，并且在编译器输出窗口中将显示一条消息，指出加载失败。</p><p>请注意，在HTML5上，将从本地存储加载的所有缓冲区都将使用base64进行解码（因为它们被保存为base64字符串），但是在“包含文件”或任何外部文件上使用此功能将不会使用base64解码，这在大多数情况下都可以。</p><p class="note"><b>注意</b>：重要的是，当不再需要像这样动态创建的资源时，请从内存中删除它们，以防止内存泄漏，因此，当您完成创建的缓冲区后，应该使用 <a href="buffer_delete.htm"><tt>buffer_delete()</tt></a>。</p><p></p><h4>句法：</h4><p class="code">buffer_load(filename);</p><table><tbody><tr><th>争论</th><th>描述</th></tr><tr><td><span class="notranslate">filename</span></td><td>要加载的文件的名称。</td></tr></tbody></table><p></p><h4>返回值：</h4><p class="code">real</p><p></p><h4>例子：</h4><p class="code">player_buffer = buffer_load(&quot;Player_Save.sav&quot;);</p><p>上面的代码会将以前保存的缓冲区加载到内存中，从而创建一个新的缓冲区。这个新缓冲区的索引存储在变量“ player_buffer”中。 </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">返回：<a href="Buffers.htm">缓冲区</a></div><div style="float:right">下一个： <a href="buffer_load_ext.htm"><span>buffer_load_ext</span></a></div></div></div><h5> <span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
buffer_load
-->
  <!-- TAGS
buffer_load
-->
</body>
</html>