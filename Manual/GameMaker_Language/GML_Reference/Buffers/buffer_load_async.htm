<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_load_async</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="buffer_load_async的参考页" />
  <meta name="rh-index-keywords" content="buffer_load_async" />
  <meta name="search-keywords" content="buffer_load_async" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>buffer_load_async</h1><p>使用此功能，您可以使用 <a href="buffer_save.htm"><tt>buffer_save()</tt></a>函数（或用于保存缓冲区的任何其他函数）到缓冲区中。 “偏移量”定义了要加载的缓冲区中的起始位置（以字节为单位），“大小”是从该偏移量开始要加载的缓冲区的大小（也以字节为单位）。您可以为size参数提供-1的值，整个缓冲区将被加载。请注意，该功能会从“默认”的文件夹，这<i>并不</i>需要包括为您提供的文件路径的一部分加载。如果该文件夹不存在或使用以下命令保存文件，则将创建该文件夹 <a href="buffer_save_async.htm"><tt>buffer_save_async()</tt></a>。</p><p>该函数返回一个唯一的ID值，然后可以在<a href="../../../The_Asset_Editors/Object_Properties/Async_Events/Save_Load.htm">Save / Load Asynchronous事件中使用它</a>来检查 <a href="../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a>ID值，如下面的扩展示例所示。这 <tt>async_load</tt>事件中的map将具有以下两个键/值对：</p><ul class="colour"><li> <b>“ id”：</b>由保存功能返回的异步功能的ID。</li><li> <b>“状态”：</b>将返回 <tt>true</tt>数据是否正确保存/加载，以及 <tt>false</tt>否则。</li></ul><p class="note"><b>注意</b>：在<b>HTML5上</b>，如果要从服务器而不是本地存储进行加载，则这是加载文件的首选方法，因为大多数浏览器均已弃用同步加载，最终将被废弃。</p><p></p><h4>句法：</h4><p class="code">buffer_load_async(buffer, filename, offset, size);</p><table><tbody><tr><th>争论</th><th>描述</th></tr><tr><td><span class="notranslate">buffer</span></td><td>要加载的缓冲区的索引。</td></tr><tr><td> <span class="notranslate">filename</span></td><td>要加载的文件的名称。</td></tr><tr><td> <span class="notranslate">offset</span></td><td>要加载到的缓冲区中的偏移量（以字节为单位）。</td></tr><tr><td> <span class="notranslate">size</span></td><td>要加载的缓冲区的大小（以字节为单位）。</td></tr></tbody></table><p></p><h4>返回值：</h4><p class="code">Real</p><p></p><h4>扩展示例：</h4><p>这 <tt>buffer_load_async()</tt>可以从任何事件调用该函数，并且由于它是异步的，所以回调几乎是瞬时的，也可能需要几秒钟。调用函数很简单，看起来像这样：</p><p class="code">loadid = buffer_load_async(buff, &quot;Player_Save.sav&quot;, 0, 16384);</p><p>上面的代码将文件“ <i>Player_Save.sav</i> ”的内容加载到给定的缓冲区中，并将函数调用的ID存储在变量“ <i>loadid</i> ”中。加载完成后，将触发异步Save / Load事件，您可以解析 <tt>async_load</tt>映射功能的正确ID，如下所示：</p><p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == loadid<br/>     {
    <br/>     if ds_map_find_value(async_load, &quot;status&quot;) == false<br/>         {
    <br/>         show_debug_message(&quot;Load failed!&quot;);<br/>         }
    <br/>     }
  </p><p>上面的代码将首先检查已创建的DS映射的ID，然后检查回调的状态，并在出现任何问题时发布调试消息。 </p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">返回：<a href="Buffers.htm">缓冲区</a></div><div style="float:right">下一个：<a href="buffer_load_partial.htm">buffer_load_partial</a></div></div></div><h5> <span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
buffer_load_async
-->
  <!-- TAGS
buffer_load_async
-->
</body>
</html>