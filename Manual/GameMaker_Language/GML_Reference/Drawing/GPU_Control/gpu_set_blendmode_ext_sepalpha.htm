<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_set_blendmode_ext_sepalpha</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="功能参考gpu_set_blendmode_ext_sepalpha" />
  <meta name="rh-index-keywords" content="gpu_set_blendmode_ext_sepalpha,bm_zero,bm_one,bm_src_colour,bm_inv_src_colour,bm_src_alpha,bm_inv_src_alpha,bm_dest_alpha,bm_inv_dest_alpha,bm_dest_colour,bm_inv_dest_colour,bm_src_alpha_sat,bm_src_color,bm_inv_src_color,bm_dest_color,bm_inv_dest_colour"
  />
  <meta name="search-keywords" content="gpu_set_blendmode_ext_sepalpha,bm_zero,bm_one,bm_src_colour,bm_inv_src_colour,bm_src_alpha,bm_inv_src_alpha,bm_dest_alpha,bm_inv_dest_alpha,bm_dest_colour,bm_inv_dest_colour,bm_src_alpha_sat,bm_src_color,bm_inv_src_color,bm_dest_color,bm_inv_dest_colour"
  />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>gpu_set_blendmode_ext_sepalpha</h1><p>当<span class="notranslate">GameMaker Studio 2</span>绘制像素时，会有源颜色（我们要绘制的像素的颜色）和目标颜色（我们要绘制到的像素中已经存在的颜色），因此确定像素的新颜色，根据选择的混合模式计算源颜色和目标颜色。颜色的每个分量都存储为0到1之间的浮点值，新颜色的计算方法是将源颜色的每个分量乘以某个因子，然后将目标颜色的每个分量乘以其他某个因子，然后将其相加结果逐个组成部分。</p><p>此功能允许您设置应组合在一起以创建自定义混合模式的不同组成部分，为RGB组件和Alpha组件选择具有不同混合模式因子的不同部分。因此，“ src”和“ dest”参数将使用前三个混合模式值（RGB），而“ alphasrc”和“ alphadest”参数将使用混合模式因子的最后一部分。例如，如果您将RGB源 <tt>bm_zero</tt>，则将使用（0，0，0）。如果然后将Alpha信号源设置为bm_one，则将使用（1），从而给出最终的信号源混合模式（0，0，0，1）。</p><p>下表显示了每种混合模式的RGBA值，其中（Rs，Gs，Bs，As）被视为源值，而（Rd，Gd，Bd，Ad）被视为目标值。在此函数中使用时，可以使用的十一个常数可以是源常数或目标常数（或两者都可以）。</p><table><tbody><tr><th>持续的</th><th>混合因子（红色，绿色，蓝色，Alpha）</th></tr><tr><td> <span class="notranslate">bm_zero</span></td><td> （0，0，0，0）</td></tr><tr><td> <span class="notranslate">bm_one</span></td><td> （1、1、1、1）</td></tr><tr><td> <span class="notranslate">bm_src_colour</span></td><td> （Rs，Gs，Bs，As）</td></tr><tr><td> <span class="notranslate">bm_inv_src_colour</span></td><td> （1-Rs，1-Gs，1-Bs，1-As）</td></tr><tr><td> <span class="notranslate">bm_src_alpha</span></td><td> （砷，砷，砷，砷）</td></tr><tr><td> <span class="notranslate">bm_inv_src_alpha</span></td><td> （1-As，1-As，1-As，1-As）</td></tr><tr><td> <span class="notranslate">bm_dest_alpha</span></td><td> （广告，广告，广告，广告）</td></tr><tr><td> <span class="notranslate">bm_inv_dest_alpha</span></td><td> （1个广告，1个广告，1个广告，1个广告）</td></tr><tr><td> <span class="notranslate">bm_dest_colour</span></td><td> （Rd，Gd，Bd，Ad）</td></tr><tr><td> <span class="notranslate">bm_inv_dest_colour</span></td><td> （1-Rd，1-Gd，1-Bd，1-Ad）</td></tr><tr><td> <span class="notranslate">bm_src_alpha_sat</span></td><td> （f，f，f，1），其中f = min（As，1-Ad）</td></tr></tbody></table><p class="note"><b>重要的！</b>未启用WebGL的HTML5将<b>无法</b>正确显示以下使用模式：</p><ul class="colour" style="padding-left: 120px"><li><tt>bm_src_colour </tt></li><li><tt>bm_inv_src_colour </tt></li><li><tt>bm_dest_colour </tt></li><li><tt>bm_inv_dest_colour </tt></li><li><tt>bm_src_alpha_sat</tt></li></ul><p></p><p>请注意，您可以为此函数提供四个单独的参数，也可以提供一个参数数组（由函数返回）<a href="gpu_get_blendmode_ext_sepalpha.htm"><tt>gpu_get_blendmode_ext_sepalpha()</tt></a>例如）。如果提供数组，则应具有以下四个元素：</p><ul class="colour"><li> [0] =源混合模式减去alpha分量（默认为 <tt>bm_src_alpha</tt>（As，As，As）</li><li> [1] =目标混合模式减去alpha分量（默认为 <tt>bm_inv_src_alpha</tt>（1-As，1-As，1-As））</li><li> [2] =源Alpha分量（默认为 <tt>bm_src_alpha</tt>（作为））</li><li> [3] =目标Alpha分量（默认为 <tt>bm_inv_src_alpha</tt>（1-As））</li></ul><p>为了帮助您从混合模式中获得最大收益，并帮助您了解它们的工作方式以及它们如何影响绘制到屏幕上的最终图像，我们建议您阅读以下指南：</p><ul class="colour"><li><a href="../../../../Additional_Information/Guide_To_Using_Blendmodes.htm">使用Blendmodes的指南</a></li></ul><p></p><h4>句法：</h4><p class="code">gpu_set_blendmode(src, dest, alphasrc, alphadest);</p><table><tbody><tr><th>争论</th><th>描述</th></tr><tr><td><span class="notranslate">src</span></td><td> RGB的源混合模式因子（请参见上面的常数）。</td></tr><tr><td> <span class="notranslate">dest</span></td><td> RGB的目标混合模式因子（请参见上面的常数）</td></tr><tr><td> <span class="notranslate">alphasrc</span></td><td>源混合模式因子Alpha（请参见上面的常数）。</td></tr><tr><td> <span class="notranslate">alphadest</span></td><td>目标混合模式因子Alpha（请参见上面的常数）</td></tr></tbody></table><p></p><h4>返回值：</h4><p class="code">N/A</p><p></p><h4>例子：</h4><p class="code">var bm = gpu_get_blendmode_ext_sepalpha();<br/> bm[0] = bm_src_alpha;<br/> bm[1] = bm_inv_src_alpha;<br/> gpu_set_blendmode_ext_sepalpha(bm);
  </p><p>上面的代码创建一个本地数组，并使用单独的alpha值获取当前的扩展混合模式。然后对该数组进行操作并返回以设置混合模式。 </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">背面： <a href="GPU_Control.htm">GPU控制</a></div><div style="float:right">下一个：<a href="gpu_set_colourwriteenable.htm">gpu_set_colourwriteenable</a></div></div></div><h5> <span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
gpu_set_blendmode_ext_sepalpha
bm_zero
bm_one
bm_src_colour
bm_inv_src_colour
bm_src_alpha
bm_inv_src_alpha
bm_dest_alpha
bm_inv_dest_alpha
bm_dest_colour
bm_inv_dest_colour
bm_src_alpha_sat
-->
  <!-- TAGS
gpu_set_blendmode_ext_sepalpha
-->
</body>
</html>