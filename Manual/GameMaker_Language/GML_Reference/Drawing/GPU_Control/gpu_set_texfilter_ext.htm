<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_set_texfilter_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for the function gpu_set_texfilter_ext" />
  <meta name="rh-index-keywords" content="gpu_set_texfilter_ext" />
  <meta name="search-keywords" content="gpu_set_texfilter_ext" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gpu_set_texfilter_ext</h1>
  <p>当在GameMaker Studio 2中使用这个函数时，它可以用来设置单个采样器 &quot;槽 &quot;的线性插值。 <a href="../../Asset_Management/Shaders/Shaders.htm"><span class="notranslate">着色器</span></a>在<span class="notranslate">GameMaker Studio 2</span>中，这个函数可以用来设置单个采样器 "槽 "的线性插值。当它被启用<tt>（真</tt>）时，采样器的
    纹理将被平滑化，如果禁用<tt>（false</tt>），那么图像将根据最近的像素绘制。默认值是由你的游戏的<b>全局游戏选项</b>设置的，或者使用函数设置的 <a href="gpu_set_texfilter.htm"><tt>gpu_set_texfilter()</tt></a>.</p>
  <p class="note"><b>注意</b>：这个设置将被调用函数时设定的值所覆盖。 <a href="gpu_set_texfilter.htm"><tt>gpu_set_texfilter()</tt></a>.</p>
  <p class="note"><b>注意</b>：在HTML5目标上，这个功能只有在启用WebGL的情况下才能发挥作用。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">gpu_set_texfilter_ext(sampler_id, enable)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>sampler_id</td>
        <td> <span class="notranslate">着色器</span>的取样器ID。</td>
      </tr>
      <tr>
        <td>启用</td>
        <td>启用或禁用纹理过滤<tt>（true</tt>/<tt>false</tt>）。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">不适用</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var s_tex =<span class="notranslate">shader</span>_get_sampler_index<span class="notranslate">(shader</span>_glass, &quot;s_NoiseSampler&quot;);<br> if gpu_get_filter_ext(s_tex)<br> {
    <br> gpu_set_texfilter_ext(s_tex, false);<br> }
    <br> else
    <br> {
    <br> gpu_set_texfilter_ext(s_tex, true);<br> }
  </p>
  <p>上述代码检查特定采样器ID（存储在一个局部变量中）的纹理过滤是否开启或关闭，并相应地进行切换。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">背面。<a href="GPU_Control.htm">GPU控制</a></div>
        <div style="float:right">下一篇:<a href="gpu_set_texrepeat.htm">gpu_set_texrepeat</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
gpu_set_texfilter_ext
-->
  <!-- TAGS
gpu_set_texfilter_ext
-->
</body>
</html>