<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_set_tex_mip_filter_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="功能参考gpu_set_tex_mip_filter_ext" />
  <meta name="rh-index-keywords" content="gpu_set_tex_mip_filter_ext,tf_point,tf_linear,tf_anisotropic" />
  <meta name="search-keywords" content="gpu_set_tex_mip_filter_ext,tf_point,tf_linear,tf_anisotropic" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>gpu_set_tex_mip_filter_ext</h1><p>使用此功能，可以为给定的<span class="notranslate">shader</span>器采样器设置MIP过滤器模式。 <span class="notranslate">shader</span>器采样器提供索引值（由函数返回）<a href="../../Asset_Management/Shaders/shader_get_sampler_index.htm"><tt>shader_get_sampler_index()</tt></a> ，然后是下面列出的模式值常量之一。</p><p></p><table><tbody><tr><th>持续的</th><th>描述</th></tr><tr><td><span class="notranslate">tf_point</span></td><td>这意味着禁用了Mipmap级别之间的混合，这可能会导致可见的纹理过渡，但性能最佳。</td></tr><tr><td> <span class="notranslate">tf_linear</span></td><td>这意味着启用了mipmap级别之间的混合（也称为<i>三线性过滤</i>），可以平滑纹理过渡，但对性能的影响较小。</td></tr><tr><td> <span class="notranslate">tf_anisotropic</span></td><td>这意味着启用了各向异性过滤，这可以大大提高纹理过渡质量，并可以减少其他过滤模式下可见的模糊，但对性能的影响最高。</td></tr></tbody></table><p></p><h4>句法：</h4><p class="code">gpu_set_tex_mip_filter_ext(sampler_index, filter);</p><p></p><table><tbody><tr><th>争论</th><th>描述</th></tr><tr><td><span class="notranslate">sampler_index</span></td><td> <span class="notranslate">shader</span>器采样器的索引。</td></tr><tr><td> <span class="notranslate">filter</span></td><td>要使用的MIP过滤器模式（一个常量，默认为：<tt>tf_point</tt> ）。</td></tr></tbody></table><p></p><h4>返回值：</h4><p class="code">N/A</p><p></p><h4>例子：</h4><p class="code">var _sampleIndex = shader_get_sampler_index(shd_Glass, &quot;s_Background&quot;);<br/> var _spriteTex = sprite_get_texture(sprite_index, 0);<br/> shader_set(shd_Glass);
    <br/> if gpu_get_tex_mip_filter_ext(_sampleIndex) != tf_point<br/>     {
    <br/>     gpu_set_tex_mip_filter_ext(_sampleIndex, tf_point);<br/>     }
    <br/> texture_set_stage(_sampleIndex , _spriteTex);<br/> shader_reset();
  </p><p>上面的代码将MIP过滤器模式设置为 <tt>tf_point</tt>（禁用mipmapping）给定的<span class="notranslate">shader</span>纹理采样器（如果尚未设置）。 </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">背面： <a href="Mipmapping.htm">Mipmapping</a></div><div style="float:right">下一个：<a href="gpu_set_tex_mip_bias.htm">gpu_set_tex_mip_bias</a></div></div></div><h5> <span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
gpu_set_tex_mip_filter_ext
tf_point
tf_linear
tf_anisotropic
-->
  <!-- TAGS
gpu_set_tex_mip_filter_ext
-->
</body>
</html>