<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_set_tex_mip_filter_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for the function gpu_set_tex_mip_filter_ext" />
  <meta name="rh-index-keywords" content="gpu_set_tex_mip_filter_ext,tf_point,tf_linear,tf_anisotropic" />
  <meta name="search-keywords" content="gpu_set_tex_mip_filter_ext,tf_point,tf_linear,tf_anisotropic" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gpu_set_tex_mip_filter_ext</h1>
  <p>通过这个函数，你可以为一个给定的<span class="notranslate">着色器</span>采样器设置mip滤镜模式。你需要提供该<span class="notranslate">着色器</span>采样器的索引值（如由函数 <a href="../../Asset_Management/Shaders/shader_get_sampler_index.htm"><tt><span class="notranslate">shader</span>_get_sampler_index()</tt></a>,
    然后是下面列出的模式值常数之一。</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>恒定</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>tf_point</td>
        <td>这意味着mipmap层之间的混合被禁用，这可能会导致可见的纹理过渡，但能提供最佳性能。</td>
      </tr>
      <tr>
        <td>tf_linear</td>
        <td>这意味着mipmap级别之间的混合被启用（这也被称为<i>三线过滤</i>），这可以平滑纹理过渡，但它会给性能带来轻微的影响。</td>
      </tr>
      <tr>
        <td>tf_anisotropic</td>
        <td>这意味着各向异性过滤被启用，这大大改善了纹理过渡的质量，并能减少其他过滤模式下可见的模糊现象，但它对性能的打击最大。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">gpu_set_tex_mip_filter_ext(sampler_index, filter)。</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>采样器_索引</td>
        <td>要获取的<span class="notranslate">着色器</span>采样器的索引。</td>
      </tr>
      <tr>
        <td>过滤器</td>
        <td>使用的mip过滤模式（一个常数，默认：<tt>tf_point</tt>）。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">不适用</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var _sampleIndex =<span class="notranslate">shader</span>_get_sampler_index(shd_Glass, &quot;s_Background&quot;);<br> var _spriteTex = sprite_get_texture(sprite_index, 0);<br> shader_set<span class="notranslate">(shd_Glass</span>) 。
    <br> if gpu_get_tex_mip_filter_ext(_sampleIndex) != tf_point<br> {
    <br> gpu_set_tex_mip_filter_ext(_sampleIndex, tf_point);<br> }
    <br> texture_set_stage(_sampleIndex , _spriteTex);<br> <span class="notranslate">shader</span>_reset()。
  </p>
  <p>上面的代码为给定的<span class="notranslate">着色器</span>纹理采样器设置mip过滤模式为<tt>tf_point</tt>（禁用mipmapping），如果它还没有被设置。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Mipmapping.htm">Mipmapping</a></div>
        <div style="float:right">下一页:<a href="gpu_set_tex_mip_bias.htm">gpu_set_tex_mip_bias</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
gpu_set_tex_mip_filter_ext
tf_point
tf_linear
tf_anisotropic
-->
  <!-- TAGS
gpu_set_tex_mip_filter_ext
-->
</body>
</html>