<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>json_decode</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="json_decode的参考页" />
  <meta name="rh-index-keywords" content="json_decode" />
  <meta name="search-keywords" content="json_decode" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>json_decode</h1><h3><strong>重要的！</strong>该功能-仍然有效-已被该功能取代 <span class="inline"><a href="json_parse.htm">json_parse()</a></span>，我们建议您仅将此功能用于旧版支持。</h3><p> JSON（JavaScript对象表示法）是一种轻量级的数据交换格式，对于人和机器都易于读写。它基于两个基本结构：</p><ul class="colour"><li>名称/值对的集合，称为 <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><tt>DS Map</tt></a>在<span class="notranslate">GameMaker Studio 2</span>也被称为“字典”或“对象”。</li><li>值的有序列表，称为 <a href="../../Data_Structures/DS_Lists/DS_Lists.htm"><tt>DS List</tt></a>在<span class="notranslate">GameMaker Studio 2</span>但也可以称为“数组”或“序列”。</li></ul><p>使用此功能，您可以解码一段JSON并将其转换为 <tt>DS Map</tt>，准备在<span class="notranslate">GameMaker Studio 2</span> 。如果要解码的JSON需要中央DS映射内的列表和映射层次结构，则这些列表和映射也会被解码，并使用以下规则为您创建（请注意，这些规则仅适用于顶层结构）：</p><ul class="colour"><li> <strong><i>JSON是单个值</i></strong>-返回带有值为“ default”的单个条目的DS映射</li><li><strong><i>JSON是对象或值的数组</i></strong>-返回具有单个条目“默认”的DS映射，该条目是对象或值的DS列表</li><li><strong><i>JSON是一个对象</i></strong>-返回其中包含对象条目的DS映射</li></ul><p class="note"><b>注意</b>：解码JSON数组时，只有当数组是顶层结构时，才有一个键为“默认”的映射，并且仅针对该顶层数组。内部列表直接解码为DS映射，而无需包含在DS映射中。</p><p class="note"><strong>注意</strong>：如果将<span class="notranslate">GameMaker</span>数组写入顶层，或作为DS映射或DS列表的内容，则这些<strong>数组将被解码为DS列表，而不是</strong>数组。</p><p>通常，您会知道JSON会解码到哪些键，但是如果没有，则可以使用 <a href="../../Data_Structures/DS_Maps/ds_map_size.htm"><tt>ds_map_size()</tt></a>，<a href="../../Data_Structures/DS_Maps/ds_map_find_first.htm"><tt>ds_map_find_first()</tt></a>和 <a href="../../Data_Structures/DS_Maps/ds_map_find_next.htm"><tt>ds_map_find_next()</tt></a>函数来解析地图并获取必要的信息。</p><p class="note"><b>注意</b>： <span class="notranslate">GameMaker Studio 2</span>从JSON创建必要的DS地图和列表，并且清理时只需要删除<b>顶层</b>地图或列表， <span class="notranslate">GameMaker Studio 2</span>就会自动从内存中删除下面的所有地图和列表。</p><p class="note"><b>重要说明</b>：JSON中不能包含64位数字，因为它们没有被JSON格式处理，因此将无法正常工作。</p><p></p><h4>句法：</h4><p class="code">json_decode(string)</p><table><tbody><tr><th>争论</th><th>描述</th></tr><tr><td><span class="notranslate">string</span></td><td>您传递给函数进行解码的JSON格式字符串</td></tr></tbody></table><p></p><h4>返回值：</h4><p class="code">DS map id or -1 if it fails</p><p></p><h4>例子：</h4><p class="code">var resultMap = json_decode(requestResult);<br/> var list = ds_map_find_value(resultMap, &quot;default&quot;);<br/> var size = ds_list_size(list);<br/> for (var n = 0; n &lt; ds_list_size(list); n++;)<br/>    {
    <br/>    var map = ds_list_find_value(list, n);<br/>    var curr = ds_map_find_first(map);<br/>    while (is_string(curr))<br/>       {
    <br/>       global.Name[n] = ds_map_find_value(map, &quot;name&quot;);<br/>       curr = ds_map_find_next(map, curr);<br/>       }
    <br/>    }
    <br/> ds_map_destroy(resultMap);
  </p><p>上面的代码将解码一个JSON字符串并解析它以生成一个全局数组。 </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">背面：<a href="Encoding_And_Hashing.htm">文件编码</a></div><div style="float:right">下一个：<a href="json_stringify.htm">json_stringify</a></div></div></div><h5> <span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
json_decode
-->
  <!-- TAGS
json_decode
-->
</body>
</html>