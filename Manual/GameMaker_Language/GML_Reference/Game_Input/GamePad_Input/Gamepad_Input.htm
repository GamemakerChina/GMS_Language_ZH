<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>游戏手柄输入</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="游戏手柄输入的参考部分" />
  <meta name="rh-index-keywords" content="gp_face1,gp_face2,gp_face3,gp_face4,gp_shoulderl,gp_shoulderlb,gp_shoulderr,gp_shoulderrb,gp_select,gp_start,gp_stickl,gp_stickr,gp_padu,gp_padd,gp_padl,gp_padr,gp_axislh,gp_axislv,gp_axisrh,gp_axisrv" />
  <meta name="search-keywords" content="游戏手柄输入,游戏手柄,gp_face1,gp_face2,gp_face3,gp_face4,gp_shoulderl,gp_shoulderlb,gp_shoulderr,gp_shoulderrb,gp_select,gp_start,gp_stickl,gp_stickr,gp_padu,gp_padd,gp_padl,gp_padr,gp_axislh,gp_axislv,gp_axisrh,gp_axisrv"
  />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>游戏手柄输入</h1><p><b></b><span class="notranslate">GameMaker Studio 2</span>具有许多专用功能，可用于检测来自多个连接的游戏手柄的模拟和数字控件。这些功能的工作方式与<a href="../Device_Input/Device_Input.htm">设备输入</a>类似，因为您可以检测到最多四个已连接的不同XInput游戏手柄（和多达8个DirectInput游戏手柄），并使用相同的功能处理来自每个键盘的输入。请注意，当将游戏手柄插入设备（或将其移除）时，将<a href="../../../../The_Asset_Editors/Object_Properties/Async_Events.htm">触发异步系统事件</a>，您可以在其中使用适当的功能来处理这种情况。</p><p>游戏手柄的“插槽”从0向上索引，而游戏手柄分配的实际插槽将取决于多种因素，其中最重要的是项目运行所在的操作系统。在<strong><span class="notranslate">Windows</span></strong>目标上，插槽0-3（含）<i>仅用于Xinput游戏手柄</i>，即：Xbox360控制器和兼容版本。但是，您还可以检查<i>DirectInput</i>游戏手柄的4-11插槽（含），这意味着通过这些插槽连接时，您可以检测到许多其他型号的控制器。在其他平台上，可能会<em>在操作系统为其分配的任何</em>插槽上检测到打击垫，该插槽可能是插槽3或插槽20或更多。例如， <strong><span class="notranslate">Android</span></strong>设备会将蓝牙游戏手柄存储在插槽中，然后在将来将该插槽保留给该游戏手柄（无论是否已连接），因此您<em>不能</em>假定单个已连接的游戏手柄已连接到插槽0，因为这可能会并非如此。</p><p>值得注意的是，在<span class="notranslate">Windows</span>上使用DirectInput游戏手柄或在其他平台上使用通用游戏手柄时，由于API的碎片化和非标准化方式，<strong>下面给出的常量可能与您按下按钮时期望的按钮不完全匹配。</strong>由控制器制造商实施。因此，建议您在游戏中使用某种游戏手柄设置屏幕，以便人们可以根据来自任何已连接设备的输入来重新定义游戏手柄按钮，以缓解任何问题（有一些游戏手柄“映射”功能可以帮助您解决此问题）在<span class="notranslate">Windows</span>桌面， <span class="notranslate">Ubuntu</span> ， <span class="notranslate">macOS</span>和<span class="notranslate">Android</span> ，则需要使用代码自行完成此操作）。</p><p>使用游戏手柄功能时，输入可以来自<strong>axis</strong> ，<strong>按钮</strong>和/或<strong>帽子，</strong>并且<span class="notranslate">GameMaker Studio 2</span>将分配给以下某些或所有内置常量（请注意，“ hats”通常仅在非标准控制器上检测到） ）：</p><p></p><table><tbody><tr><th>持续的</th><th>描述 </th></tr><tr><td><span class="notranslate"><tt>gp_face1</tt></span></td><td>顶部按钮1（这对应于Xbox 360控制器上<i>的“ A”</i>和PS控制器上<i>的叉号）</i></td></tr><tr><td><span class="notranslate"><tt>gp_face2</tt></span></td><td>顶部按钮2（这对应于Xbox 360控制器上<i>的“ B”</i>和PS控制器上<i>的圆圈）</i></td></tr><tr><td><span class="notranslate"><tt>gp_face3</tt></span></td><td>顶部按钮3（这对应于Xbox 360控制器上<i>的“ X”</i>和PS控制器上<i>的正方形）</i></td></tr><tr><td><span class="notranslate"><tt>gp_face4</tt></span></td><td>顶部按钮4（这对应于Xbox 360控制器上<i>的“ Y”</i>和PS控制器上<i>的三角形）</i></td></tr><tr><td><span class="notranslate"><tt>gp_shoulderl</tt></span></td><td>左肩按钮 </td></tr><tr><td><span class="notranslate"><tt>gp_shoulderlb</tt></span></td><td>左肩扳机 </td></tr><tr><td><span class="notranslate"><tt>gp_shoulderr</tt></span></td><td>右肩扣 </td></tr><tr><td><span class="notranslate"><tt>gp_shoulderrb</tt></span></td><td>右肩扳机 </td></tr><tr><td><span class="notranslate"><tt>gp_select</tt></span></td><td>选择按钮（这是DS4控制器上<i>的PS按钮）</i></td></tr><tr><td><span class="notranslate"><tt>gp_start</tt></span></td><td>开始按钮（这是PS4控制器上的“选项”按钮）</td></tr><tr><td><span class="notranslate"><tt>gp_stickl</tt></span></td><td>按下左摇杆（作为按钮）</td></tr><tr><td><span class="notranslate"><tt>gp_stickr</tt></span></td><td>按下右摇杆（作为按钮）</td></tr><tr><td><span class="notranslate"><tt>gp_padu</tt></span></td><td> D-垫上 </td></tr><tr><td><span class="notranslate"><tt>gp_padd</tt></span></td><td>D-pad向下 </td></tr><tr><td><span class="notranslate"><tt>gp_padl</tt></span></td><td>D-pad向左 </td></tr><tr><td><span class="notranslate"><tt>gp_padr</tt></span></td><td>D-pad右 </td></tr><tr><td><span class="notranslate"><tt>gp_axislh</tt></span></td><td>左摇杆水平轴（模拟）</td></tr><tr><td><span class="notranslate"><tt>gp_axislv</tt></span></td><td>左摇杆垂直轴（模拟）</td></tr><tr><td><span class="notranslate"><tt>gp_axisrh</tt></span></td><td>右摇杆水平轴（模拟）</td></tr><tr><td><span class="notranslate"><tt>gp_axisrv</tt></span></td><td>右摇杆垂直轴（模拟）</td></tr></tbody></table><p></p><p>为了更好地理解每个常量代表控制器的哪一部分，您可以参考以下标准Xinput游戏手柄的图像：</p><p><img alt="Xinput gamepad illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Game_Input/GamePad.png" />您可以在下面找到所有游戏手柄功能的列表： </p><p></p><ul class="colour"><li><a href="gamepad_is_supported.htm">gamepad_is_supported</a></li><li><a href="gamepad_is_connected.htm">gamepad_is_connected</a></li><li><a href="gamepad_get_guid.htm">gamepad_get_guid</a></li><li><a href="gamepad_get_device_count.htm">gamepad_get_device_count</a></li><li><a href="gamepad_get_description.htm">gamepad_get_description</a></li><li><a href="gamepad_get_button_threshold.htm">gamepad_get_button_threshold</a></li><li><a href="gamepad_get_axis_deadzone.htm">gamepad_get_axis_deadzone</a></li><li><a href="gamepad_get_option.htm">gamepad_get_option</a></li><li><a href="gamepad_set_button_threshold.htm">gamepad_set_button_threshold</a></li><li><a href="gamepad_set_axis_deadzone.htm">gamepad_set_axis_deadzone</a></li><li><a href="gamepad_set_vibration.htm">gamepad_set_vibration</a></li><li><a href="gamepad_set_colour.htm">gamepad_set_colour</a></li><li><a href="gamepad_set_option.htm">gamepad_set_option</a></li><li><a href="gamepad_axis_count.htm">gamepad_axis_count</a></li><li><a href="gamepad_axis_value.htm">gamepad_axis_value</a></li><li><a href="gamepad_button_check.htm">gamepad_button_check</a></li><li><a href="gamepad_button_check_pressed.htm">gamepad_button_check_pressed</a></li><li><a href="gamepad_button_check_released.htm">gamepad_button_check_released</a></li><li><a href="gamepad_button_count.htm">gamepad_button_count</a></li><li><a href="gamepad_button_value.htm">gamepad_button_value</a></li><li><a href="gamepad_hat_count.htm">gamepad_hat_count</a></li><li><a href="gamepad_hat_value.htm">gamepad_hat_value</a></li></ul><p></p><p>以下游戏手柄功能也存在，用于将内置常量重新映射到给定游戏手柄的直接物理输入。这些功能仅适用于<span class="notranslate">Windows</span>桌面， <span class="notranslate">Ubuntu</span> ， <span class="notranslate">macOS</span>和<span class="notranslate">Android</span>目标平台，并且在<span class="notranslate">Windows</span>上仅对直接输入设备有效。虽然<span class="notranslate">GameMaker Studio 2</span><a href="https://github.com/gabomdq/SDL_GameControllerDB" target="_blank">随附了基于SDL Gamepad Controller DB</a>的许多不同游戏手柄的映射，但是由于那里存在大量的控制器类型和品牌，因此无法将<span class="notranslate">GML</span>常量映射到每个制造商和制造商的正确输入。模型，因此使用这些功能，您可以创建自己的自定义映射。 </p><p></p><ul class="colour"><li><a href="gamepad_get_mapping.htm">gamepad_get_mapping</a></li><li><a href="gamepad_test_mapping.htm">gamepad_test_mapping</a></li><li><a href="gamepad_remove_mapping.htm">gamepad_remove_mapping</a></li></ul><p></p><p>值得注意的是，直接输入游戏手柄在<i>协作模式下</i>运行，这意味着您的游戏只有在其作为前台应用程序时才可以访问它们，这又将导致直接输入控制器在游戏失去焦点后“丢失”，然后当它重新成为焦点时再次“找到”（可以在系统事件中检测到并处理）。同样，当游戏未处于焦点状态时，也不会检测到来自游戏手柄的输入，因此我们建议您使用该功能 <a href="../../OS_And_Compiler/os_is_paused.htm"><tt>os_is_paused()</tt></a>或者 <a href="../../Cameras_And_Display/The_Game_Window/window_has_focus.htm"><tt>window_has_focus()</tt></a>为了检测到这一点并暂停游戏，或者与游戏失去焦点时按下的任何类似按钮一样，它将保持按下状态，直到游戏重新获得焦点。</p><p></p><h2>兼容性</h2><p>以下列表显示了跨平台的当前兼容性（请注意，随着将来的更新，兼容性将发生变化）：</p><ul class="colour"><li> <strong><span class="notranslate">Windows</span></strong> ，一次最多允许12个连接的设备（编号从0到11，其中0-3是XInput设备，而4-11是DirectInput）。也允许重新映射控制器常数。</li><li> <strong><span class="notranslate">macOS</span></strong>一次最多支持4个连接的设备，并且这些设备只能是<span class="notranslate">Playstation</span> 3或Xbox 360类型。请注意，Mac Game Options中的“ Build for Mac AppStore”选项必须为OFF为垫支持工作。也允许重新映射控制器常数。</li><li> <strong><span class="notranslate">Ubuntu</span></strong>也支持Gamepad输入，但是您可能需要从<span class="notranslate">Ubuntu</span>存储库安装其他库。可以通过打开命令线终端和键入以下为此容易（这将安装GUI支持操纵杆/手柄以及操纵杆/手柄API本身-控制器常量是<i>不允许</i>的重新映射）：<p class="code">sudo apt-get install jstest-gtk<br/> sudo apt-get install joystick.</p></li><li><i>除Safari</i>之外，大多数主流浏览器均支持使用游戏手柄的<strong>HTML5</strong>游戏。控制器常数的重新映射是<i>不允许</i>的。</li><li>通过iCade机箱，游戏手柄支持也扩展到了<strong><span class="notranslate">iOS</span></strong>左轴映射到操纵杆控制器（尽管输入是数字的，而不是模拟的），四个“面部”按钮映射到机柜的前部按钮，四个肩部按钮映射到机柜后部的按钮。</li><li> <strong><span class="notranslate">Android</span></strong> （和<strong><span class="notranslate">Amazon Fire</span></strong> ）导出支持NYKO控制器和通用的蓝牙控制器，但仅在启用它们时才表示，这意味着您必须<span class="notranslate">Android</span>游戏选项<a href="../../../../Settings/Game_Options/Android.htm">的“常规”</a>部分中勾选iCade / Bluetooth选项。他们需要API级别12才能正常工作，并且应该注意， <span class="notranslate">GameMaker Studio 2</span>将与您的设备配对的任何蓝牙设备注册为已连接，无论它是否实际连接。因此，在分配和检查“插槽”时应考虑到这一点。注意，也允许重新映射控制器常数。</li><li>在<strong>PS4上</strong>，如果要使用触摸板跟踪，则需要使用 <a href="../Device_Input/Device_Input.htm"><tt>device_mouse_*</tt></a>纽扣。控制器常数的重新映射是<i>不允许</i>的。</li><li>在<strong><span class="notranslate">Windows</span></strong> <strong><strong>UWP，XBoxOne</strong></strong>和<strong><span class="notranslate">Nintendo</span> <span class="notranslate">Switch</span></strong>目标，游戏手柄完全支持，但控制器常数的重新映射是<i>不允许</i>的。</li></ul><p>理想情况下，在<i>所有</i>目标平台上，您都希望枚举可用游戏手柄“插槽”的列表，然后检查它们以查看是否检测到任何设备，如下所示： </p><p class="code">var _maxpads = gamepad_get_device_count();<br/> for (var i = 0; i &lt; _maxpads; i++)<br/>     {
    <br/>     if (gamepad_is_connected(i))<br/>         {
    <br/>         // do stuff with pad &quot;i&quot;<br/>         }
    <br/>     }
  </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">返回：<a href="../Game_Input.htm">游戏输入</a></div><div style="float:right">下一页：<a href="../Virtual_Keys_And_Keyboards/Virtual_Keys_And_Keyboards.htm">虚拟键和虚拟键盘</a></div></div></div><h5><span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
Gamepad Input Functions
gp_face1
gp_face2
gp_face3
gp_face4
gp_shoulderl
gp_shoulderlb
gp_shoulderr
gp_shoulderrb
gp_select
gp_start
gp_stickl
gp_stickr
gp_padu
gp_padd
gp_padl
gp_padr
gp_axislh
gp_axislv
gp_axisrh
gp_axisrv
-->
  <!-- TAGS
gamepad_functions
-->
</body>
</html>