<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>游戏手柄输入</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for Gamepad Input" />
  <meta name="rh-index-keywords" content="gp_face1,gp_face2,gp_face3,gp_face4,gp_shoulderl,gp_shoulderlb,gp_shoulderr,gp_shoulderrb,gp_select,gp_start,gp_stickl,gp_stickr,gp_padu,gp_padd,gp_padl,gp_padr,gp_axislh,gp_axislv,gp_axisrh,gp_axisrv,gp_axis_acceleration_x,gp_axis_acceleration_y,gp_axis_acceleration_z,gp_axis_angular_velocity_x,gp_axis_angular_velocity_y,gp_axis_angular_velocity_z,gp_axis_orientation_x,gp_axis_orientation_y,gp_axis_orientation_z,gp_axis_orientation_w" />
  <meta name="search-keywords" content="Gamepad Input,gamepads,gp_face1,gp_face2,gp_face3,gp_face4,gp_shoulderl,gp_shoulderlb,gp_shoulderr,gp_shoulderrb,gp_select,gp_start,gp_stickl,gp_stickr,gp_padu,gp_padd,gp_padl,gp_padr,gp_axislh,gp_axislv,gp_axisrh,gp_axisrv,gp_axis_acceleration_x,gp_axis_acceleration_y,gp_axis_acceleration_z,gp_axis_angular_velocity_x,gp_axis_angular_velocity_y,gp_axis_angular_velocity_z,gp_axis_orientation_x,gp_axis_orientation_y,gp_axis_orientation_z,gp_axis_orientation_w" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>游戏手柄输入</h1>
  <p><b></b><span class="notranslate">GameMaker Studio 2</span>有许多专用功能，可用于检测来自多个连接的游戏手柄的模拟和数字控制。这些功能的工作原理类似于<a href="../Device_Input/Device_Input.htm">设备输入</a>。
    你可以检测到最多四个不同的 XInput 游戏板（以及最多 8 个 DirectInput 游戏板），并使用相同的功能处理每个游戏板的输入。请注意，当一个游戏板被插入你的设备（或被移除）时
    就会触发一个异步的<a href="../../../../The_Asset_Editors/Object_Properties/Async_Events.htm">系统事件</a>，你可以用适当的函数来处理这种情况。</p>
  <p>游戏板的 &quot;插槽 &quot;从0向上索引，一个游戏板所分配的实际插槽将取决于各种因素，其中最重要的是项目所运行的操作系统。在 <strong><span class="notranslate">窗口</span></strong>目标上，槽位0-3（含）只用于Xinput游戏机。
    3<i>只适用于Xinput游戏</i>板，即：Xbox360控制器和兼容机。然而，你也可以检查4-11槽，包括<i>直接输入</i>的游戏板，这意味着你可以检测许多其他型号的控制器，当连接到
    通过这些插槽。在其他平台上，可以在操作系统分配给它的<em>任何</em>插槽上检测到手柄，这可能是3号插槽或20号插槽或更多。比如说。 <strong><span class="notranslate">安卓</span></strong>设备会将蓝牙游戏板储存在一个插槽中，然后将该插槽保留给
    因此，你<em>不能</em>假设一个连接的游戏板被连接到0号槽，因为情况可能不是这样。</p>
  <p>值得注意的是，当在<span class="notranslate">Windows</span>上使用DirectInput游戏板，或在其他平台上使用通用游戏板时，下面给出的常数<strong>可能与你所期望的按钮不完全一致</strong>，因为控制器制造商的API实现方式是零散的和非标准的。
    由于控制器制造商实现API的方式是分散的和非标准化的。正因为如此，我们建议你在游戏中设置一些游戏手柄设置屏幕，人们可以根据来自任何连接设备的输入来重新定义游戏手柄的按钮，以减少任何问题。
    缓解任何问题（在Windows<span class="notranslate">桌面、</span>Ubuntu、<span class="notranslate">macOS</span>和Android<span class="notranslate">目标</span>上有游戏手柄 &quot;映射 &quot;功能可以帮助解决这个问题<span class="notranslate">，</span>而在所有其他<span class="notranslate">目标</span>上，你需要自己用代码完成这个工作）。</p>
  <h2>输入常量</h2>
  <p>当使用游戏手柄功能时，输入可以来自<strong>轴</strong>、<strong>按钮</strong>或<strong>帽子</strong>，<span class="notranslate">GameMaker Studio 2</span>将把它们分配给以下内置常量（注意，&quot;帽子 &quot;通常只在非标准控制器上检测到）。
    注意 "帽子 "通常只在非标准控制器上检测到）。)</p>
  <table>
    <tbody>
      <tr>
        <th>恒定</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><tt>gp_face1</tt></td>
        <td>顶部按钮1（这与Xbox 360控制器<i>上的 &quot;A &quot;</i>和<i>PS</i>控制器上的十字架相对应）。</td>
      </tr>
      <tr>
        <td><tt>脸谱网2</tt></td>
        <td>顶部按钮2（这相当于Xbox 360控制器<i>上的 &quot;B &quot;</i>和<i>PS</i>控制器上的圆圈）。</td>
      </tr>
      <tr>
        <td><tt>gp_face3</tt></td>
        <td>顶部按钮3（这与Xbox 360控制器<i>上的 &quot;X &quot;</i>和<i>PS</i>控制器上的方块对应）。</td>
      </tr>
      <tr>
        <td><tt>gp_face4</tt></td>
        <td>顶部按钮4（这相当于Xbox 360控制器<i>上的 &quot;Y &quot;</i>和<i>PS</i>控制器<i>上的</i>三角形）。</td>
      </tr>
      <tr>
        <td><tt>gp_shoulderl</tt></td>
        <td>左肩按钮</td>
      </tr>
      <tr>
        <td><tt>gp_shoulderlb</tt></td>
        <td>左肩触发器</td>
      </tr>
      <tr>
        <td><tt>gp_shoulderr</tt></td>
        <td>右肩按钮</td>
      </tr>
      <tr>
        <td><tt>gp_shoulderb</tt></td>
        <td>右肩触发器</td>
      </tr>
      <tr>
        <td><tt>gp_select</tt></td>
        <td>选择按钮（这就是DS4控制器上的<i>PS</i>按钮）。</td>
      </tr>
      <tr>
        <td><tt>启用</tt></td>
        <td>开始按钮（这是PS4控制器上的 &quot;选项 &quot;按钮）。</td>
      </tr>
      <tr>
        <td><tt>gp_stickl</tt></td>
        <td>左摇杆被按下（作为一个按钮）。</td>
      </tr>
      <tr>
        <td><tt>gp_stickr</tt></td>
        <td>按下的右摇杆（作为一个按钮）。</td>
      </tr>
      <tr>
        <td><tt>gp_padu</tt></td>
        <td>D-pad向上</td>
      </tr>
      <tr>
        <td><tt>gp_padd</tt></td>
        <td>D-pad down</td>
      </tr>
      <tr>
        <td><tt>gp_padl</tt></td>
        <td>D-pad左键</td>
      </tr>
      <tr>
        <td><tt>gp_padr</tt></td>
        <td>D-pad右键</td>
      </tr>
      <tr>
        <td><tt>gp_axislh</tt></td>
        <td>左摇杆水平轴（模拟</td>
      </tr>
      <tr>
        <td><tt>gp_axislv</tt></td>
        <td>左摇杆垂直轴（模拟</td>
      </tr>
      <tr>
        <td><tt>gp_axisrh</tt></td>
        <td>右摇杆水平轴（模拟</td>
      </tr>
      <tr>
        <td><tt>gp_axisrv</tt></td>
        <td>右摇杆垂直轴（模拟</td>
      </tr>
    </tbody>
  </table>
  <p>为了更好地理解每个常数到底代表控制器的哪一部分，你可以参考下面这张标准XInput游戏手柄的图片。</p>
  <p><img alt="Xinput gamepad illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Game_Input/GamePad.png" /></p>
  <p>以下常量可以在 <tt><a href="gamepad_axis_value.htm">gamepad_axis_value()</a></tt>函数，当在PS4或PS5上使用DualSense游戏手柄时。</p>
  <table>
    <tbody>
      <tr>
        <th>恒定</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><tt>gp_axis_acceleration_x</tt></td>
        <td>游戏手柄在X轴上的加速度</td>
      </tr>
      <tr>
        <td><tt>gp_axis_acceleration_y</tt></td>
        <td>游戏手柄在Y轴上的加速度</td>
      </tr>
      <tr>
        <td><tt>gp_axis_acceleration_z</tt></td>
        <td>游戏手柄在Z轴上的加速度</td>
      </tr>
      <tr>
        <td><tt>gp_axis_angular_velocity_x</tt></td>
        <td>游戏手柄在X轴上的角速度</td>
      </tr>
      <tr>
        <td><tt>gp_axis_angular_velocity_y</tt></td>
        <td>游戏手柄在Y轴上的角速度</td>
      </tr>
      <tr>
        <td><tt>gp_axis_angular_velocity_z</tt></td>
        <td>游戏手柄在Z轴上的角速度</td>
      </tr>
      <tr>
        <td><tt>gp_axis_orientation_x</tt></td>
        <td>游戏板的X方向</td>
      </tr>
      <tr>
        <td><tt>gp_axis_orientation_y</tt></td>
        <td>游戏板的Y方向</td>
      </tr>
      <tr>
        <td><tt>gp_axis_orientation_z</tt></td>
        <td>游戏板的Z方向</td>
      </tr>
      <tr>
        <td><tt>gp_axis_orientation_w</tt></td>
        <td>游戏板的W方向</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><strong>注意</strong>：游戏板的方向是一个四元<a href="https://en.wikipedia.org/wiki/Quaternion" title="Quaternion">数，</a>这就是为什么它有四个值（X、Y、Z和W）。</p>
  <p>这些常量目前只支持PS4和PS5，当在其他平台上使用时，输入函数将返回<tt>0</tt>，即使使用DualSense游戏手柄。</p>
  <h2>职能</h2>
  <p>下面你可以找到所有游戏手柄功能的列表。</p>
  <ul class="colour">
    <li><a href="gamepad_is_supported.htm">是否支持游戏手柄</a></li>
    <li><a href="gamepad_is_connected.htm">gamepad_is_connected</a></li>
    <li><a href="gamepad_get_guid.htm">gamepad_get_guid</a></li>
    <li><a href="gamepad_get_device_count.htm">gamepad_get_device_count</a></li>
    <li><a href="gamepad_get_description.htm">gamepad_get_description</a></li>
    <li><a href="gamepad_get_button_threshold.htm">gamepad_get_button_threshold</a></li>
    <li><a href="gamepad_get_axis_deadzone.htm">gamepad_get_axis_deadzone</a></li>
    <li><a href="gamepad_get_option.htm">gamepad_get_option</a></li>
    <li><a href="gamepad_set_button_threshold.htm">gamepad_set_button_threshold</a></li>
    <li><a href="gamepad_set_axis_deadzone.htm">gamepad_set_axis_deadzone</a></li>
    <li><a href="gamepad_set_vibration.htm">游戏手柄_设置振动</a></li>
    <li><a href="gamepad_set_colour.htm">gamepad_set_colour</a></li>
    <li><a href="gamepad_set_option.htm">gamepad_set_option</a></li>
    <li><a href="gamepad_axis_count.htm">gamepad_axis_count</a></li>
    <li><a href="gamepad_axis_value.htm">gamepad_axis_value</a></li>
    <li><a href="gamepad_button_check.htm">游戏手柄_按钮_检查</a></li>
    <li><a href="gamepad_button_check_pressed.htm">游戏手柄_按钮_检查_压制</a></li>
    <li><a href="gamepad_button_check_released.htm">游戏手柄_按钮_检查_释放</a></li>
    <li><a href="gamepad_button_count.htm">gamepad_button_count</a></li>
    <li><a href="gamepad_button_value.htm">gamepad_button_value</a></li>
    <li><a href="gamepad_hat_count.htm">游戏手柄_帽子数</a></li>
    <li><a href="gamepad_hat_value.htm">游戏手柄_帽子_值</a></li>
  </ul>
  <p> </p>
  <p>还存在以下游戏板函数，用于将内置常量重新映射到特定游戏板的直接物理输入。这些函数只适用于<span class="notranslate">Windows</span>桌面、<span class="notranslate">Ubuntu</span>、<span class="notranslate">macOS</span>和<span class="notranslate">Android</span>目标平台，在<span class="notranslate">Windows</span>上。
    它们只对直接输入设备有效。虽然<span class="notranslate">GameMaker Studio 2</span>带有基于<a href="https://github.com/gabomdq/SDL_GameControllerDB" target="_blank">SDL Gamepad Controller DB</a>的多种不同游戏板的映射，但是
    由于有大量的控制器类型和品牌，不可能将<span class="notranslate">GML</span>常量映射到每个品牌和型号的正确输入，所以通过这些功能，你有可能创建自己的自定义映射。</p>
  <p> </p>
  <ul class="colour">
    <li><a href="gamepad_get_mapping.htm">gamepad_get_mapping</a></li>
    <li><a href="gamepad_test_mapping.htm">游戏手柄_测试_映射</a></li>
    <li><a href="gamepad_remove_mapping.htm">游戏手柄_删除映射</a></li>
  </ul>
  <p> </p>
  <p>值得注意的是，直接输入的游戏板是以<i>合作模式</i>运行的，这意味着你的游戏只有在它是前台程序时才能访问它们，这反过来又会导致直接输入的控制器在游戏失去焦点时被 &quot;丢失&quot;，而当它重新回到焦点时又被 &quot;找到&quot;（这可以在系统事件中检测到）。
    这又会导致直接输入控制器在游戏失去焦点时被 &quot;丢失&quot;，当它重新成为焦点时又被 &quot;找到&quot;（这可以在系统事件中检测并处理）。同样，当游戏不在焦点上时，也不会检测到游戏手柄的输入，我们建议你
    使用功能 <a href="../../OS_And_Compiler/os_is_paused.htm"><tt>os_is_paused()</tt></a>或 <a href="../../Cameras_And_Display/The_Game_Window/window_has_focus.htm"><tt>window_has_focus()</tt></a>来检测并暂停游戏或类似的东西。
    因为在游戏失去焦点时，任何被按住的按钮都会保持被按住的状态，直到游戏重新获得焦点。</p>
  <p> </p>
  <h2>兼容性</h2>
  <p>下面的列表显示了目前各平台的兼容性（注意，这将随着未来的更新而改变）。</p>
  <ul class="colour">
    <li><strong><span class="notranslate">完全支持Windows</span> </strong>完全支持最多允许同时连接12个设备（编号从0到11，0-3是X输入设备，4-11是直接输入设备）。也允许对控制器常数进行重映射。</li>
    <li><strong><span class="notranslate">MacOS</span> </strong>支持一次最多连接4台设备，而且这些设备只能是<span class="notranslate">Playstation3</span>或Xbox360类型。请注意，Mac游戏选项中的 &quot;Build for Mac AppStore &quot;选项需要关闭，才能支持手柄。
      的 "Build for Mac AppStore "选项需要关闭，以使手柄支持工作。控制器常量的重新映射也是允许的。</li>
    <li><strong><span class="notranslate">Ubuntu</span> </strong>也支持Gamepad输入，但你可能需要从<span class="notranslate">Ubuntu</span>软件库中安装额外的库。你可以通过打开一个命令行终端并输入以下内容来轻松做到这一点（这将安装GUI支持
      以及手柄/游戏板API本身--<i>不</i>允许重新映射控制器常数）。)
     <p class="code">sudo apt-get install jstest-gtk<br> sudo apt-get install joystick.</p>
    </li>
    <li>使用游戏手柄的<strong>HTML5 </strong>游戏被大多数主要浏览器所支持，但<i>Safari</i>除外。<i>不</i>允许对控制器常量进行重映射。</li>
    <li>对游戏手柄的支持也扩展到了 <strong><span class="notranslate">iOS</span> </strong>iCade机柜。左轴映射到摇杆控制器（尽管输入是数字的，而不是模拟的），四个 &quot;面部 &quot;按钮映射到机柜前面的按钮，而四个
      肩部按钮映射到机柜背面的按钮。</li>
    <li><strong><span class="notranslate">安卓系统</span> </strong>(和 <strong><span class="notranslate">亚马逊火灾</span></strong>)导出支持NYKO控制器和普通蓝牙控制器，但只有当它们被启用时，意味着你必须在<span class="notranslate">Android</span>游戏选项的<a href="../../../../Settings/Game_Options/Android.htm">常规</a>部分勾选iCade/蓝牙选项。它们需要API级别12才能完全工作，应该注意的是，<span class="notranslate">GameMaker Studio 2</span>将把你的设备与之配对的任何蓝牙设备注册为连接，无论它是否真的
      都登记为已连接。因此，在分配和检查 &quot;插槽 &quot;时，应该考虑到这一点。请注意，控制器常数的重映射也是允许的。</li>
    <li>在<strong>PS4</strong>上，如果你想使用触摸板追踪，你需要使用 <a href="../Device_Input/Device_Input.htm"><tt>设备_mouse_*</tt></a>按钮。重新映射控制器常量是<i>不</i>允许的。</li>
    <li>关于 <strong><span class="notranslate">视窗</span> </strong><strong>UWP</strong>、<strong>XBoxOne </strong>和 <strong><span class="notranslate">任天堂</span> <span class="notranslate">转换器</span></strong>目标上，完全支持游戏手柄，但<i>不</i>允许对手柄常量进行重映射。</li>
  </ul>
  <p>理想情况下，在<i>所有</i>目标平台上，你想列举一个可用的游戏手柄 &quot;插槽 &quot;列表，然后检查它们，看看是否检测到任何设备，类似这样。</p>
  <p class="code">var _maxpads = gamepad_get_device_count（）;<br>
    <br> for (var i = 0; i &lt; _maxpads; i++)<br> {
    <br> if (gamepad_is_connected(i))<br> {
    <br> //对垫子 &quot;i &quot;做一些事情<br> }
    <br> }
  </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Game_Input.htm">游戏输入</a></div>
        <div style="float:right">下一步。<a href="../Virtual_Keys_And_Keyboards/Virtual_Keys_And_Keyboards.htm">虚拟按键和虚拟键盘</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
Gamepad Input Functions
gp_face1
gp_face2
gp_face3
gp_face4
gp_shoulderl
gp_shoulderlb
gp_shoulderr
gp_shoulderrb
gp_select
gp_start
gp_stickl
gp_stickr
gp_padu
gp_padd
gp_padl
gp_padr
gp_axislh
gp_axislv
gp_axisrh
gp_axisrv
gp_axis_acceleration_x
gp_axis_acceleration_y
gp_axis_acceleration_z
gp_axis_angular_velocity_x
gp_axis_angular_velocity_y
gp_axis_angular_velocity_z
gp_axis_orientation_x
gp_axis_orientation_y
gp_axis_orientation_z
gp_axis_orientation_w
-->
  <!-- TAGS
gamepad_functions
-->
</body>
</html>