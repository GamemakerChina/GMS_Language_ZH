<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>round</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="回合参考页"/>
  <meta name="rh-index-keywords" content="round"/>
  <meta name="search-keywords" content="round"/>
</head>

<body><!--<div class="body-scroll" style="top: 150px;">--><h1>round</h1><p>就像它说的那样 <tt>round()</tt>取一个实数并将其向上或向下舍入为最接近的整数。在特殊情况下，所提供的数字正好是半整数（1.5、17.5，-2.5等），该数字将四舍五入为最接近的<i>偶数</i>，例如，2.5将四舍五入为2，而3.5将四舍五入。舍入为4。这种舍入类型称为<i>bankers舍入</i>和大量迭代，或者使用浮点数学时，与更传统的“如果大于0.5则舍入，否则舍入”方法相比，舍入在统计上更好。</p><p>这意味着如果值的分数为0.5，则四舍五入的结果是最接近输入值<i>的偶数整数。</i>因此，例如，23.5变为24，24.5变为24，而-23.5变为-24，-24.5变为24。此方法对称地处理正值和负值，因此不会出现符号偏差，更重要的是，对于值的合理分布，四舍五入后的数字的期望（平均）值与原始数字相同。</p><p></p><h4>句法：</h4><p class="code">round(n);</p><table><tbody><tr><th>争论</th><th>描述</th></tr><tr><td><span class="notranslate">n</span></td><td>要舍入的数字。</td></tr></tbody></table><p></p><h4>返回值：</h4><p class="code">Integer</p><p></p><h4>例子：</h4><p class="code">score += round(hp / 5);</p><p>上面的代码将在得分值上添加一个四舍五入的整数。 </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">背面：<a href="Number_Functions.htm">数字函数</a></div><div style="float:right">下一个：<a href="floor.htm">floor</a></div></div></div><h5> <span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
round
-->
  <!-- TAGS
round
-->

</body></html>