<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>碰撞</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for Collision functions and variables" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="collisions,collision functions" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>碰撞</h1>
  <p>在计划动作或决定某些行动时，经常需要查看在游戏世界的某些地方是否与其他物体发生碰撞，而选择合适的碰撞是最重要的任务。
    的最重要任务。<span class="notranslate">GameMaker Studio 2</span>有许多内置功能，可以帮助你根据项目的需要正确处理碰撞问题。</p>
  <p class="note"><b>重要的是!</b>所有的碰撞函数都使用整数位置工作，不管输入值是多少。任何非整数的值都将被四舍五入为最接近的整数。</p>
  <p> </p>
  <h2><label for="one">简单的碰撞检查</label></h2>
  <p>下面的函数处理了各种方式，你可以让一个实例检查与另一个实例的碰撞。</p>
  <p> </p>
  <ul class="colour">
    <li><a href="place_empty.htm">地方_空</a></li>
    <li><a href="place_free.htm">place_free</a></li>
    <li><a href="place_meeting.htm">地点_会议</a></li>
    <li><a href="position_empty.htm">空的位置</a></li>
    <li><a href="position_meeting.htm">职位_会议</a></li>
    <li><a href="position_change.htm">位置_变化</a></li>
    <li><a href="position_destroy.htm">销毁位置</a></li>
    <li><a href="../../Asset_Management/Instances/instance_place.htm">实例_地点</a></li>
    <li><a href="../../Asset_Management/Instances/instance_place_list.htm">实例_场所_列表</a></li>
    <li><a href="../../Asset_Management/Instances/instance_position.htm">实例_位置</a></li>
    <li><a href="../../Asset_Management/Instances/instance_position_list.htm">实例_位置_列表</a></li>
  </ul>
  <p> </p>
  <h2>高级碰撞检查</h2>
  <p>以下例程可用于此（以及在有关<b>移动</b>和<b>实例</b>的章节中详述的其他函数）。这些碰撞函数的工作方式略有不同，但它们都有三个共同的参数
    我们将在这里解释。</p>
  <ul class="colour">
    <li><b>obj</b>。在这里我们指定函数必须检查碰撞的对象。它可以是一个实例ID，一个对象类型，或者特殊的GM关键字<b>all</b>。值得注意的是，如果选择的对象类型是指定的
      其他对象的<b>父</b>对象，那么该对象的所有<i>子</i>对象也将被包括在这个检查中。<b></b></li>
    <li><b>Prec</b>.这可以是<tt>真</tt>或<tt>假</tt>，与碰撞检查的精度有关。如果设置为<tt>&quot;真</tt>&quot;，那么将计算精确的碰撞（但只有当被检查的对象在其掩码属性中为其碰撞检测标记了 &quot;精确&quot;
      标记的情况下），这对CPU来说是一个稍微复杂的任务，所以应该谨慎使用。如果是<tt>false</tt>，那么碰撞将根据被检查对象的边界框来计算。
      为。<b></b></li>
    <li><b>notme</b>。你可能需要检查与运行代码的对象有相同索引的对象的碰撞，所以为了防止代码找到与自己的碰撞，你可以将此设置为<tt>真</tt>。如果你是专门寻找
      运行代码的对象的实例，或者这并不重要，可以将其设为<tt>false。</tt></li>
  </ul>
  <p>基本函数将返回被发现碰撞的实例的ID，或者在没有碰撞时返回特殊关键字<tt>noone</tt>，而<i>列表</i>函数将返回发生碰撞的实例的数量，并将它们的ID填充到一个预先制作的DS列表中。
    一个预先制作好的DS列表中的ID。请注意，如果这些函数定义的区域与给定对象的实例发生了多次碰撞，则只返回<i>一个</i>实例的ID，它可以是碰撞<i>中的任何一个实例</i>。</p>
  <p>存在以下处理高级碰撞的功能。</p>
  <p> </p>
  <ul class="colour">
    <li><a href="collision_circle.htm">碰撞_圆圈</a></li>
    <li><a href="collision_circle_list.htm">碰撞_圆圈_列表</a></li>
    <li><a href="collision_ellipse.htm">碰撞_椭圆</a></li>
    <li><a href="collision_ellipse_list.htm">碰撞_椭圆_列表</a></li>
    <li><a href="collision_line.htm">碰撞线</a></li>
    <li><a href="collision_line_list.htm">碰撞线列表</a></li>
    <li><a href="collision_point.htm">碰撞点</a></li>
    <li><a href="collision_point_list.htm">碰撞点列表</a></li>
    <li><a href="collision_rectangle.htm">相撞的矩形</a></li>
    <li><a href="collision_rectangle_list.htm">碰撞_矩形_列表</a></li>
  </ul>
  <p> </p>
  <h2>不戴面具的碰撞检查</h2>
  <p>上述所有函数都与碰撞检查<i>实例</i>有关，因此依赖于为该实例定义的碰撞屏蔽。然而，在很多时候，你需要检查与一个点或一个区域的 &quot;碰撞&quot;。
    或一个区域，特别是当你的实例没有分配精灵时，或者当你用鼠标工作时等等。因此，<span class="notranslate">GameMaker Studio 2</span>还提供了以下功能来帮助你处理这些情况。</p>
  <p> </p>
  <ul class="colour">
    <li><a href="point_in_rectangle.htm">点_直角形</a></li>
    <li><a href="point_in_triangle.htm">三角形中的点</a></li>
    <li><a href="point_in_circle.htm">点_圆</a></li>
    <li><a href="rectangle_in_rectangle.htm">矩形_in_rectangle</a></li>
    <li><a href="rectangle_in_triangle.htm">矩形_in_triangle</a></li>
    <li><a href="rectangle_in_circle.htm">矩形_in_circle</a></li>
  </ul>
  <p> </p>
  <h2>物理学碰撞</h2>
  <p>当使用内置物理时，上述碰撞函数不能保证对启用物理的实例起作用。这主要是由于这些实例不再使用大多数常规的内置变量（相反，物理
    启用的实例有他们<a href="../../Physics/Physics_Variables/Physics_Variables.htm">自己的变量集</a>），他们也不使用碰撞掩码或边界框，因为他们使用<a href="../../Physics/Fixtures/Fixtures.htm">固定装置</a>。然而，在启用物理的情况下，有一个测试碰撞的特殊功能，可以检查重叠的固定装置。</p>
  <p> </p>
  <ul class="colour">
    <li><a href="../../Physics/physics_test_overlap.htm">物理学_测试_重叠</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">背面。<a href="../Movement_And_Collisions.htm">运动和碰撞</a></div>
        <div style="float:right">下一步。<a href="../Movement/Movement.htm">运动</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
Collision Functions
-->
  <!-- TAGS
collision_functions
-->
</body>
</html>