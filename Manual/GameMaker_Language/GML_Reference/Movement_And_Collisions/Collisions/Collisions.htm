<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>碰撞</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="碰撞函数和变量的参考部分" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="碰撞,碰撞功能" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>碰撞</h1><p>在计划动作或决定某些动作时，通常很重要的一点是要查看游戏世界中某些位置是否与其他对象发生了碰撞，并且经常为工作选择正确的碰撞是最重要的任务。 <span class="notranslate">GameMaker Studio 2</span>具有许多内置功能，可帮助您根据项目需求正确处理碰撞。</p><p class="note"><b>重要的！</b>无论输入值如何，所有碰撞函数都使用整数位置工作。任何非整数值都将四舍五入到最接近的整数。</p><p></p><h2><label for="one">简单的碰撞检查</label></h2><p>下列功能处理了各种方法，可以让您通过实例检查与另一个实例的冲突： </p><p></p><ul class="colour"><li><a href="place_empty.htm">place_empty</a></li><li><a href="place_free.htm">place_free</a></li><li><a href="place_meeting.htm">place_meeting</a></li><li><a href="position_empty.htm">position_empty</a></li><li><a href="position_meeting.htm">position_meeting</a></li><li><a href="position_change.htm">position_change</a></li><li><a href="position_destroy.htm">position_destroy</a></li><li><a href="../../Asset_Management/Instances/instance_place.htm">instance_place</a></li><li><a href="../../Asset_Management/Instances/instance_place_list.htm">instance_place_list</a></li><li><a href="../../Asset_Management/Instances/instance_position.htm">instance_position</a></li><li><a href="../../Asset_Management/Instances/instance_position_list.htm">instance_position_list</a></li></ul><p></p><h2>先进的碰撞检查</h2><p>下列例程可以用于此目的（以及有关<b>移动</b>和<b>实例</b>的部分中详细介绍的其他功能）。这些碰撞函数的工作原理略有不同，但是它们保留三个共同的论点，我们将在此处进行解释：</p><ul class="colour"><li> <b>obj</b> 。在此处，我们指定函数必须检查与之冲突的对象。它可以是实例ID，对象类型或特殊的GM关键字<b>all</b> 。还值得注意的是，如果选择的对象类型是<b>其他对象的指定父</b>对象，则<i>该对象的所有子</i>对象也将包括在此检查中。<b></b></li><li><b>精确的</b>这可以是 <tt>true</tt>或者 <tt>false</tt>并与碰撞检查的精度有关。如果设置为 <tt>true</tt>，则要计算精确的冲突（但仅当要检查的对象的遮罩属性中的冲突检测标记有“精确”标记时），这对于CPU来说是一项稍微复杂的任务，因此应谨慎使用。如果 <tt>false</tt>然后将根据要检查的对象的边界框计算碰撞。<b></b></li><li><b>通知</b>。您可能需要检查与索引与运行代码的对象具有相同索引的对象是否发生冲突，因此，为了防止代码发现与自身的冲突，可以将其设置为 <tt>true</tt>。如果您是专门寻找运行代码的对象的实例，或者这并不重要，则可以将其保留为 <tt>false</tt>。</li></ul><p>基本功能将返回发现正在冲突的实例的ID或special关键字 <tt>noone</tt>当没有冲突时，<i>列表</i>函数将返回发生冲突的实例数，并使用其ID填充预制的DS列表。请注意，如果这些功能和给定对象实例定义的区域发生多次冲突，则仅<i>返回一个</i>实例ID，并且它可以是<i>冲撞中的任何实例</i>。</p><p>存在以下处理高级冲突的功能。 </p><p></p><ul class="colour"><li><a href="collision_circle.htm">collision_circle</a></li><li><a href="collision_circle_list.htm">collision_circle_list</a></li><li><a href="collision_ellipse.htm">collision_ellipse</a></li><li><a href="collision_ellipse_list.htm">collision_ellipse_list</a></li><li><a href="collision_line.htm">collision_line</a></li><li><a href="collision_line_list.htm">collision_line_list</a></li><li><a href="collision_point.htm">collision_point</a></li><li><a href="collision_point_list.htm">collision_point_list</a></li><li><a href="collision_rectangle.htm">collision_rectangle</a></li><li><a href="collision_rectangle_list.htm">collision_rectangle_list</a></li></ul><p></p><h2>不戴口罩进行碰撞检查</h2><p>以上所有功能均与冲突检查<i>实例</i>相关，因此依赖于为该实例定义的冲突掩码。但是，在很多时候，您需要检查与点或区域的“碰撞”，尤其是当您的实例未分配精灵时，或者当您使用鼠标等时。因此， <span class="notranslate">GameMaker Studio 2</span>也提供以下功能来在这些情况下为您提供帮助： </p><p></p><ul class="colour"><li><a href="point_in_rectangle.htm">point_in_rectangle</a></li><li><a href="point_in_triangle.htm">point_in_triangle</a></li><li><a href="point_in_circle.htm">point_in_circle</a></li><li><a href="rectangle_in_rectangle.htm">rectangle_in_rectangle</a></li><li><a href="rectangle_in_triangle.htm">rectangle_in_triangle</a></li><li><a href="rectangle_in_circle.htm">rectangle_in_circle</a></li></ul><p></p><h2>物理碰撞</h2><p>当使用物理内建时，不能保证上述碰撞函数对启用了物理的实例起作用。这主要是由于以下事实：这些实例不再使用大多数常规内置变量（而是启用了物理的实例具有其<a href="../../Physics/Physics_Variables/Physics_Variables.htm">自己的一组变量</a>），并且它们都不使用碰撞蒙版或边界框，因为它们使用<a href="../../Physics/Fixtures/Fixtures.htm">夹具</a>反而。但是，有一个特殊的功能可以在启用了物理的情况下测试碰撞，以检查重叠的夹具：</p><p></p><ul class="colour"><li><a href="../../Physics/physics_test_overlap.htm">physics_test_overlap</a></li></ul><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">背部：<a href="../Movement_And_Collisions.htm">运动与碰撞</a></div><div style="float:right">下一篇：<a href="../Movement/Movement.htm">运动</a></div></div></div><h5><span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
Collision Functions
-->
  <!-- TAGS
collision_functions
-->
</body>
</html>