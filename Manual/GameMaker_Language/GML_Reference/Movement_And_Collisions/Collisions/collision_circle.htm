<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>collision_circle</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="概述功能碰撞页面的页面" />
  <meta name="rh-index-keywords" content="collision_circle" />
  <meta name="search-keywords" content="collision_circle" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>collision_circle</h1><p><span class="inline">Collision_circle</span>在点x1，y1周围创建用户给定半径的圆形区域，然后检查该区域是否与参数“ obj”指定的对象的<b>任何实例发生碰撞。</b>这种检查可以是准确与否，而是启用精确的碰撞，对象或实例您检查也<i>必须</i>对他们的精灵启用精确的碰撞。如果不是，则默认检查基于边界框。下图说明了它是如何工作的：</p><p><img alt="Collision circle example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/collision_circle_illustration.png" />在这里，中间的实例使用碰撞圆检查球对象。现在，蓝色的<i>框没有</i>精确的边界框，如您所见，即使精灵实际上没有接触圆，碰撞仍会发生（即使您将函数中的精确选项设置为true）该小精灵的边界框重叠了冲撞圆定义的圆形区域。另一方面，只有当实际的子画面与定义的圆重叠时，才会将绿色球视为碰撞。请记住，精确的碰撞被认为是<i>两个</i>物体精灵和碰撞功能必须有精确的标记为上。还应注意，函数的返回值可以是被认为发生冲突<i>的任何实例的id。</i></p><p>请注意，您可以提供实例来代替对象索引 <a href="../../Asset_Management/Instances/Instance_Variables/id.htm"><tt>id</tt></a>检查特定实例或<a href="../../../GML_Overview/Instance_Keywords.htm">实例关键字</a> <span class="inline">all</span>， 或者 <span class="inline">other</span>（取决于事件和当前代码范围）。</p><p></p><h4>句法：</h4><p class="code">collision_circle(x1, y1, rad, obj, prec, notme);</p><p></p><table><tbody><tr><th>争论</th><th>描述</th></tr><tr><td><span class="notranslate">x1</span></td><td>要检查的圆心的x坐标。</td></tr><tr><td> <span class="notranslate">y1</span></td><td>要检查的圆心的y坐标。</td></tr><tr><td> <span class="notranslate">rad</span></td><td>半径（从像素中心到边缘的距离，以像素为单位）。</td></tr><tr><td> <span class="notranslate">obj</span></td><td>检查实例冲突的对象。</td></tr><tr><td> <span class="notranslate">prec</span></td><td>该检查是基于像素完美碰撞（true =慢）还是通常基于其边界框（false =快速）。</td></tr><tr><td> <span class="notranslate">notme</span></td><td>是否应排除调用实例（如果相关）（<tt>true</tt> ） 或不 （<tt>false</tt> ）。</td></tr></tbody></table><p></p><h4>返回值：</h4><p class="code">Instance id or noone</p><p></p><h4>例子：</h4><p class="code">if collision_circle(x, y, 20, obj_Cursor, false, true)<br/>    {
    <br/>    image_index = 1;<br/>    }
    <br/> else image_index = 0;</p><p>上面的代码将检查一个半径为20像素的圆是否与“ obj_Cursor”发生冲突，如果存在，则会将运行代码的对象的image_index设置为1，但如果不存在，则会将其代码的image_index设置为设为0。 </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">背部：<a href="Collisions.htm">碰撞</a></div><div style="float:right">下一个：<a href="collision_circle_list.htm">collision_circle_list</a></div></div></div><h5> <span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
collision_circle
-->
  <!-- TAGS
collision_circle
-->
</body>
</html>