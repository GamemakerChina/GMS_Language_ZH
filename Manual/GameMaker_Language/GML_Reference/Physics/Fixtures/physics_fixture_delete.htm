<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_fixture_delete</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="physics_fixture_delete的参考页" />
  <meta name="rh-index-keywords" content="physics_fixture_delete" />
  <meta name="search-keywords" content="physics_fixture_delete" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>physics_fixture_delete</h1><p>由于一旦将灯具绑定到实例后，该实例便会保留其灯具属性，因此我们可以使用此功能将其从内存中删除，尤其是当我们不再打算再次使用它时。请注意，在不再需要固定装置后仍无法移除它们可能会导致内存泄漏，这会减慢速度并最终导致游戏崩溃，因此在定义和绑定固定装置后，请务必小心清理。</p><p></p><h4>句法：</h4><p class="code">physics_fixture_delete(fixture)</p><table><tbody><tr><th>争论</th><th>描述</th></tr><tr><td><span class="notranslate">fixture</span></td><td>要从内存中删除的灯具</td></tr></tbody></table><p></p><h4>返回值：</h4><p class="code">N/A</p><p></p><h4>例子：</h4><p class="code">var fix, inst;<br/> fix = physics_fixture_create();<br/> physics_fixture_set_circle_shape(fix, 16);<br/> physics_fixture_set_density(fix, 1.0);<br/> inst = instance_create_layer(x, y, &quot;Instances&quot;, genericBodyObject);<br/> physics_fixture_bind(fix,
    inst);<br/> physics_fixture_delete(fix);
  </p><p>上面的代码将创建一个固定装置，并将其索引分配给变量“ fix”。然后，在将夹具绑定到使用存储在变量“ inst”中的索引创建的实例之前，先定义夹具的形状和密度。最后，删除固定装置以防止内存泄漏，因为不再需要它。 </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">返回：<a href="Fixtures.htm">照明灯</a></div><div style="float:right">下一个：<a href="physics_remove_fixture.htm">physics_remove_fixture</a></div></div></div><h5> <span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
physics_fixture_delete
-->
  <!-- TAGS
physics_fixture_delete
-->
</body>
</html>