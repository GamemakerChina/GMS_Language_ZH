<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>物理学_关节_距离_创建</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_distance_create" />
  <meta name="rh-index-keywords" content="physics_joint_distance_create" />
  <meta name="search-keywords" content="physics_joint_distance_create" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>物理学_关节_距离_创建</h1>
  <p>最简单的一个连接是距离连接，即两个实例上的两点之间的距离必须是恒定的。当你指定一个距离连接时，两个实例应该已经被创建并分配了一个夹具，然后你定义
    房间坐标中的两个锚点。第一个锚点连接到实例1，第二个锚点连接到实例2，这些点之间的距离意味着距离约束的长度。下面的图片显示了
    如何工作的。</p>
  <p><img alt="Distance joint illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/direction_joint_image.png">正如你所看到的，锚点被指定为房间坐标，所以在定义锚点时必须小心。
    所以在定义它们的时候必须小心，特别是如果实例是和关节同时创建的，而不是通过房间编辑器放在房间里的。你也应该意识到，关节的创建与实例的精灵大小或它们的固定装置的大小无关。
    实例或它们所连接的固定装置的大小无关。所以，如果你在实例的原点以外的地方创建了一个距离关节，它仍然有效，并且会相对于它被创建的位置约束两个实例。如果你将
    col &quot;值为 &quot;true&quot;，那么<tt>这</tt>两个实例就可以相互作用和碰撞，但前提是<i>它们</i>有碰撞事件，然而如果它被设置为 &quot;false&quot;，<tt>它们</tt>无论如何都不会碰撞。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">physics_joint_distance_create(inst1, inst2, w_anchor1_x, w_anchor1_y, w_anchor2_x, w_anchor2_y, col)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>inst1</td>
        <td>第一个例子是与联合的连接</td>
      </tr>
      <tr>
        <td>仪表盘2</td>
        <td>第二种情况是与联合体连接</td>
      </tr>
      <tr>
        <td>w_anchor1_x</td>
        <td>在游戏世界中，关节的第一个X坐标。</td>
      </tr>
      <tr>
        <td>w_anchor1_y</td>
        <td>在游戏世界中，关节的第一个Y坐标。</td>
      </tr>
      <tr>
        <td>w_anchor2_x</td>
        <td>关节的第二个X坐标，在游戏世界中。</td>
      </tr>
      <tr>
        <td>w_anchor2_y</td>
        <td>该关节的第二个Y坐标，在游戏世界中。</td>
      </tr>
      <tr>
        <td>殖民地</td>
        <td>两个实例是否可以碰撞（真）或不（假）。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">整数（关节的索引）。</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var mainFixture, o_id;<br> mainFixture = physics_fixture_create();<br> physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);<br> o_id=instance_create_layer(x+300, y, &quot;instances&quot;, obj_Rudder);<br> physics_fixture_bind(mainFixture,
    id);<br> physics_fixture_bind(mainFixture, o_id);<br> physics_joint_distance_create(id, o_id, x + 50, y, o_id.x - 50, o_id.y, 0);<br> physics_fixture_delete(mainFixture) 。
  </p>
  <p>上面的代码创建并定义了一个新的夹具，然后创建了一个 &quot;obj_Rudder &quot;的实例。然后，该夹具被分配给正在运行代码的实例以及新创建的实例，并在它们之间创建一个连接。最后
    该夹具被删除，因为它不再需要了。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">背部。<a href="Joints.htm">关节</a></div>
        <div style="float:right">下一页:<a href="physics_joint_revolute_create.htm">物理学_关节_回旋_创建</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_distance_create
-->
  <!-- TAGS
physics_joint_distance_create
-->
</body>
</html>