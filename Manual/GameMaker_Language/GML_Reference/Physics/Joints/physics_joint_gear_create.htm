<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>物理学_关节_gear_create</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_gear_create" />
  <meta name="rh-index-keywords" content="physics_joint_gear_create" />
  <meta name="search-keywords" content="physics_joint_gear_create" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>物理学_关节_gear_create</h1>
  <p>如果你想创建一个复杂的机械装置，你可能想使用齿轮。原则上，你可以在<span class="notranslate">GameMaker Studio 2</span>中通过使用复合实例来创建齿轮模型，但这不是很有效，而且可能是
    乏味的作者!值得庆幸的是，有一个更简单的方法，那就是使用一个<i>齿轮接头</i>。要制作一个齿轮，你需要事先定义你的夹具，并创建两个基本的关节来组成你的齿轮--这些<b>必须</b>是由一个<a href="physics_joint_revolute_create.htm">渐进式关节</a>和一个<a href="physics_joint_prismatic_create.htm">棱形关节</a>或另一个渐进式<i>关节</i>组成的。下面的图片显示了一个齿轮通常是如何被创建的
    在游戏中的典型创建方式。</p>
  <p><img alt="Gear joint illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/gear_joint_image.png">那么会发生什么呢？好吧，一旦这两个关节被添加到齿轮中，与一个关节的互动将对另一个关节产生影响。
    的影响，所以在上面的例子中，如果你旋转inst2，inst3会上下移动，或者如果你上下移动inst3，那么inst2会旋转。你还可以改变齿轮比，也就是说，你需要多移动一个实例（或
    少）来获得所需的效果。底部例子中的代码显示了如何创建类似上述图片的东西。</p>
  <p class="note"><b>注意</b>：如果你需要删除涉及齿轮接头的两个实例中的任何一个（或只是删除它们的接头），那么你<b>必须</b>先用以下方法删除齿轮接头 <span style="font-size:1px;"><a href="physics_joint_delete.htm"><tt style="font-size: 14px">physics_joint_delete()</tt></a></span>    来删除齿轮连接，否则你会得到一个错误。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">physics_joint_gear_create(inst1, inst2, joint_1, joint_2, ratio)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>inst1</td>
        <td>第一个例子是与联合的连接</td>
      </tr>
      <tr>
        <td>仪表盘2</td>
        <td>第二种情况是与联合体连接</td>
      </tr>
      <tr>
        <td>联合_1</td>
        <td>一个先前定义的<b>渐进式</b>关节</td>
      </tr>
      <tr>
        <td>联席会议_2</td>
        <td>一个先前定义的渐开线<i>或</i>棱柱形关节</td>
      </tr>
      <tr>
        <td>比例</td>
        <td>设置两个关节之间的速度比</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">整数（关节的索引）。</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var t_fix, g_fix, inst1, inst2, inst3, r_joint, p_joint;<br> g_fix = physics_fixture_create();<br> physics_fixture_set_box_shape(g_fix, 40, 10);<br> t_fix = physics_fixture_create();<br> physics_fixture_set_circle_shape(t_fix, 10);<br> physics_fixture_set_density(t_fix,
    0.5);<br> inst1 = instance_create_layer(60, room_height - 30, &quot;Background&quot;, obj_Ground);<br> inst2 = instance_create_layer(40, room_height - 300, &quot;Instances&quot;, obj_Cog);<br> inst3 = inst_create_layer(150, room_height - 300,
    &quot;Instances&quot;, obj_Barrel);<br> physics_fixture_bind(g_fix, inst1);<br> physics_fixture_bind(t_fix, inst2);<br> physics_fixture_bind(t_fix, inst3);<br> r_joint = physics_create_revolute_joint(inst1, inst2, 40, room_height - 300, -80, 80,
    1, 10, 0.5, 1, 0);<br> p_joint = physics_create_prismatic_joint(inst1, inst3, 150, room_height - 300, 0, 1, -10, 10, true, 0, 0, 0);<br> physics_create_gear_joint(inst2, inst3, r_joint, p_joint, 0.5);</p>
  <p>上面的代码创建并定义了两个夹具，然后创建了三个实例，一个是 &quot;obj_Ground&quot;，另外两个是 &quot;obj_Cog &quot;和 &quot;obj_Barrel&quot;。然后，夹具被绑定到这些实例上，两个关节被创建。A
    地面和齿轮之间的渐进式关节，以及地面和桶之间的棱柱式关节。最后，使用之前定义的渐开线和棱镜接头在齿轮和桶的实例之间创建一个齿轮接头。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">背部。<a href="Joints.htm">关节</a></div>
        <div style="float:right">下一页:<a href="physics_joint_rope_create.htm">物理学_接头_绳索_创建</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_gear_create
-->
  <!-- TAGS
physics_joint_gear_create
-->
</body>
</html>