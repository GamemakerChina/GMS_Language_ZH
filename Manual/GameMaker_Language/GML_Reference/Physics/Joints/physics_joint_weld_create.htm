<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>物理学_接头_焊接_创建</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_weld_create" />
  <meta name="rh-index-keywords" content="physics_joint_weld_create" />
  <meta name="search-keywords" content="physics_joint_weld_create" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>物理学_接头_焊接_创建</h1>
  <p>焊点的设计是为了将两个夹具连接在一起，使其牢固而又灵活。焊接点将允许两个连接的夹具之间的弯曲，但没有与距离连接相关的拉伸，并且在受到任何压力或负荷时，总是试图 "弹回 "参考角度。
    当受到任何压力或负载时，它总是试图 &quot;弹 &quot;回参考角度。你定义房间里应该创建接头的点，以及你希望接头在任何时候都尝试和保持的角度，如下图所示
    下面的图片。</p>
  <p><img alt="Weld joint illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/weld_joint_image.png">正如你所看到的，锚点被指定为房间坐标，所以在定义锚点的时候必须小心。
    它们，特别是如果实例是和关节同时创建的，而不是通过房间编辑器放在房间里的。你也应该意识到，关节的创建与实例的精灵的大小无关
    或它们所连接的固定装置的大小无关。因此，如果你在实例的原点以外的地方创建了一个焊接点，它仍然有效，并且会相对于创建它的位置约束两个实例。</p>
  <p>由于焊接接头是灵活的，在任何压力下都会弯曲，你可以设置振荡频率（Hz）以及接头的阻尼比以获得不同的效果--你可能需要玩弄这些数值来微调它们
    建议你从较小的数值开始，然后递增，直到你得到你想要的效果。</p>
  <p>如果你把 &quot;col &quot;值设置为 &quot;true&quot;，那么<tt>这</tt>两个实例可以相互作用，相互碰撞，但前提是<i>它们</i>有碰撞事件，然而如果设置为 &quot;false&quot;，<tt>它们</tt>无论如何都不会碰撞。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">physics_joint_weld_create(inst1, inst2, anchor_x, anchor_y, ref_angle, freq_hz, damping_ratio, col)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>inst1</td>
        <td>第一个例子是与联合的连接</td>
      </tr>
      <tr>
        <td>仪表盘2</td>
        <td>第二种情况是与联合体连接</td>
      </tr>
      <tr>
        <td>anchor_x</td>
        <td>关节的X坐标，在游戏世界中。</td>
      </tr>
      <tr>
        <td>anchor_y</td>
        <td>在游戏世界中，关节的Y坐标。</td>
      </tr>
      <tr>
        <td>角度</td>
        <td>要保持的关节角度</td>
      </tr>
      <tr>
        <td>freq_hz</td>
        <td>这是关节的振荡频率，单位是赫兹。</td>
      </tr>
      <tr>
        <td>阻尼比</td>
        <td>这个阻尼比对于关节</td>
      </tr>
      <tr>
        <td>殖民地</td>
        <td>两个实例是否可以碰撞（真）或不（假）。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">整数（关节的索引）。</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var i, fix, o_id, p_id;<br> p_id = noone;<br> o_id = noone;<br> fix = physics_fixture_create();<br> physics_fixture_set_box_shape(fix, 64, 32);<br> for (i = 0; i &lt; 5; i++;)<br> {
    <br> o_id = instance_create_layer(x + (128 * i), y, &quot;Instances&quot;, obj_BridgePart);<br> physics_fixture_bind(fix, o_id);<br> if i &gt; 0 &amp; &amp; i &lt; 4<br> {
    <br> physics_joint_weld_create(p_id, o_id, x + (128 * i) - 64, y, 0, 10, 12, true);<br> }
    <br> p_id = o_id;<br> }
    <br> physics-fixture_delete(fix)。
  </p>
  <p>上面的代码将创建一个夹具，然后使用一个循环来创建一些实例，将夹具绑定到每个新的实例上，然后使用焊接接头将它们连接在一起。最后从内存中删除该夹具。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">背部。<a href="Joints.htm">关节</a></div>
        <div style="float:right">下一页:<a href="physics_joint_friction_create.htm">物理学_关节_摩擦力_创建</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_weld_create
-->
  <!-- TAGS
physics_joint_weld_create
-->
</body>
</html>