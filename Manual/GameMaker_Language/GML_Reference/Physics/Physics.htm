<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>物理</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="物理功能参考部分" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="物理" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>物理</h1><p>专用物理库与<span class="notranslate">GameMaker Studio 2</span>的集成意味着您现在可以控制游戏世界中对象物理行为的各个方面，尤其是碰撞和对象交互。 “传统”碰撞系统（ <span class="notranslate">GameMaker Studio 2</span>默认为该系统）是一个“反应性”系统，您可以在其中检查碰撞，<i>然后</i>使用放置在各个对象中的代码对碰撞做出反应。这对于简单的游戏来说很好，但是当您有大量对象并且必须编写代码来对它们在游戏世界中不同情况下的反应进行编码时，很快就会发现该系统还远远不够。到那时，您必须转向<span class="notranslate">GameMaker Studio 2</span>物理系统。</p><p>物理系统的工作方式与普通碰撞完全不同。它更像是一个“被动”系统，您可以在发生任何碰撞或交互之前为游戏世界中的对象定义一系列属性，以及游戏世界本身的属性。这些编码的“规则”将控制游戏世界中所有事物的交互方式。这样，通过一些简单的代码和正确的房间设置，您就可以在对象和世界之间创建非常复杂的交互，这种交互将发生并解决，<i>而无需</i>为每个可能的结果编写代码。</p><p> <span class="notranslate">GameMaker Studio 2</span>物理世界时，需要注意以下几点：</p><ul class="colour"><li> <span class="notranslate">GameMaker Studio 2</span>的基本房间和实例结构“分开”存在，这意味着它的时间和功能不一定像其他所有东西一样与房间速度和步阶紧密相关。</li><li>物理系统取代了许多普通的实例函数……例如，与其为实例设置速度和方向，如果它被声明为完全模拟的物理物体，则可以使用<i>力</i>或<i>冲量</i>来获取要在游戏世界中移动，或者如果未启用物理功能，则需要自己设置x和y位置。这需要一点时间来适应，因此在尝试将其集成到您的项目中之前，请尝试一下物理功能并了解所有工作原理。</li><li>您应该限制创建的实例的数量，以及物理世界必须处理的碰撞和碰撞组的数量。您<i>不能</i>拥有成千上万个具有物理属性和碰撞的实例，并且由于物理需要进行一些非常密集的计算，因此不能指望一切都能正常工作，因此请限制自己并在可能的情况下进行优化。</li><li>设置碰撞时，请尽可能使用父级，因为碰撞系统<i>只能将有限数量的碰撞位</i>分配给Box2D实例以检测碰撞。例如，如果您有五个不同的墙对象，则不要检查五个碰撞，而是创建一个父对象并将其分配给这五个墙，然后与父对象进行一次碰撞检查。对象的物理属性<i>不仅仅继承</i>碰撞。通过这种方式，您可以使游戏保持最佳状态并且没有错误。</li><li>除了使用物理功能外，不要以任何其他方式将实例从房间的一个点移到另一点（即：不要设置x / y坐标手册）。尽管可以做到这一点，并且在某些情况下可能有必要，但由于物理引擎可能会产生不可预测的结果，尤其是在尝试解决冲突时，通常应避免这样做。</li><li>绑定固定装置时应格外小心，因为它们可以独立地绑定到对象和实例。这意味着，如果将灯具绑定到（例如）“ o_Wall”，则<b>该对象的所有</b>实例都将获得灯具。如果您只想将一个灯具绑定到一个实例，请在适当的函数中使用该实例的ID。</li><li>请注意，由于浮点精度的差异，您可能会发现针对不同目标平台的游戏版本与标准<span class="notranslate">Windows</span>版本的行为可能会有些微不同，尽管每个版本在以后的执行过程中都是自洽的。</li><li>为了防止物理模拟中的不稳定性，Box2D将上限限制为在单个更新内人体可以旋转和平移的量。根据物理模拟的准确性，物理世界的更新次数和更新速度，以及物理世界的缩放比例，明显的限制将有所不同。这意味着（例如）如果世界更新速度为60，则最大移动速度将为20。</li></ul><p>有关物理功能的信息，请参见以下页面：</p><p></p><ul class="colour"><li><a href="The_Physics_World/The_Physics_World.htm">物理世界</a></li><li><a href="Forces/Forces.htm">势力</a></li><li><a href="Fixtures/Fixtures.htm">治具</a></li><li><a href="Joints/Joints.htm">关节</a></li><li><a href="Soft_Body_Particles/Soft_Body_Particles.htm">软体微粒</a></li><li><a href="Physics_Variables/Physics_Variables.htm">物理变量</a></li></ul><p></p><p>最后，有几个特殊的物理功能对于更高级的物理模拟可能有用。第一个用于测试房间中特定点可能发生的碰撞，第二个用于在实例内生成自定义质量和惯性属性：</p><p></p><ul class="colour"><li><a href="physics_test_overlap.htm">physics_test_overlap</a></li><li><a href="physics_mass_properties.htm">physics_mass_properties</a></li></ul><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">背面： <a href="../GML_Reference.htm"><span class="notranslate">GML</span>参考</a></div><div style="float:right">下一步：<a href="../In_App_Purchases/In_App_Purchases.htm">应用内购买</a></div></div></div><h5><span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
Physics
Physics Functions
-->
  <!-- TAGS
physics_functions
-->
</body>
</html>