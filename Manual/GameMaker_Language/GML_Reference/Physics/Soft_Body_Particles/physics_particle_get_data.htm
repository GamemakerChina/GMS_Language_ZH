<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_particle_get_data</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="physics_particle_get_data参考页" />
  <meta name="rh-index-keywords" content="physics_particle_get_data,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
  <meta name="search-keywords" content="physics_particle_get_data,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>physics_particle_get_data</h1><p>此函数使用已检查的给定标志返回物理模拟中有关每个粒子的各种信息。使用的缓冲区必须已经使用函数预先创建 <a href="../../Buffers/buffer_create.htm"><tt>buffer_create()</tt></a>，并且应为“增长”类型，其大小应近似于预期返回数据的大小。使用下面给出的任何常量设置标志，并且您将使用<a href="../../../../Additional_Information/Bitwise_Operators.htm">按位<i>或</i></a>“ |”创建单个标志值以获得所需的信息。</p><p></p><table><tbody><tr><th>持续的</th><th>描述</th><th>数据类型</th></tr><tr><td><span class="notranslate">phy_particle_data_flag_typeflags</span></td><td>粒子的标志值。</td><td> <span class="notranslate">buffer_u32</span></td></tr><tr><td> <span class="notranslate">phy_particle_data_flag_position</span></td><td>粒子的x和y位置。</td><td> <span class="notranslate">2 x buffer_f32</span></td></tr><tr><td> <span class="notranslate">phy_particle_data_flag_velocity</span></td><td>水平和垂直速度。</td><td> <span class="notranslate">2 x buffer_f32</span></td></tr><tr><td> <span class="notranslate">phy_particle_data_flag_colour</span></td><td>颜色和Alpha值（十六进制）。</td><td> <span class="notranslate">buffer_f32</span></td></tr><tr><td> <span class="notranslate">phy_particle_data_flag_category</span></td><td>粒子类别（在创建其所属的粒子或组时定义）。</td><td> <span class="notranslate">buffer_u32</span></td></tr></tbody></table><p></p><h4>句法：</h4><p class="code">physics_particle_get_data(buffer, flags)</p><table><tbody><tr><th>争论</th><th>描述</th></tr><tr><td><span class="notranslate">buffer</span></td><td>用于存储数据的（先前创建的）缓冲区。</td></tr><tr><td> <span class="notranslate">flags</span></td><td>用于提取有关特定粒子类型的数据的标志。</td></tr></tbody></table><p></p><h4>返回值：</h4><p class="code">Buffer data</p><p></p><h4>例子：</h4><p class="code">var count = physics_particle_count();<br/> var flags = phy_particle_data_flag_position | phy_particle_data_flag_colour;<br/> if (count &gt; 0)<br/>     {
    <br/>     var buffer = buffer_create(count * 12, buffer_grow, 4);<br/>     physics_particle_get_data(buffer, flags);<br/>     for (var n = 0; n &lt; count; n++;)<br/>         {
    <br/>         var xx = buffer_read(buffer, buffer_f32);<br/>         var yy = buffer_read(buffer, buffer_f32);<br/>         var argb = buffer_read(buffer, buffer_u32);<br/>         var alpha = (argb &gt;&gt; 24) &amp; 255;<br/>         draw_sprite_ext(sprBlob,
    0, xx, yy, 1, 1, 0, c_green, alpha);<br/>         }
    <br/>     buffer_delete(buffer);
    <br/>     }
  </p><p>上面的代码获取粒子的数量，并创建一个带有数据标志的变量以进行检查，然后检查房间中是否有粒子。如果存在，将创建一个缓冲区，然后用粒子数据填充该数据，检查该数据并将其用于在粒子位置绘制精灵。 </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">背面：<a href="Soft_Body_Particles.htm">软体微粒</a></div><div style="float:right">下一个：<a href="physics_particle_get_data_particle.htm">physics_particle_get_data_particle</a></div></div></div><h5> <span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
physics_particle_get_data
phy_particle_data_flag_typeflags
phy_particle_data_flag_position
phy_particle_data_flag_velocity
phy_particle_data_flag_colour
phy_particle_data_flag_category
-->
  <!-- TAGS
physics_particle_get_data
-->
</body>
</html>