<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>steam_upload_score</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="为参考页steam _upload_score" />
  <meta name="rh-index-keywords" content="steam_upload_score" />
  <meta name="search-keywords" content="steam_upload_score" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> <span class="notranslate">steam</span> _upload_score</h1><p>此功能会将分数发送到给定的排行榜。要上传的分数是实数，排行榜名称是使用该功能创建排行榜时定义的字符串 <a href="steam_create_leaderboard.htm"><tt>steam_create_leaderboard()</tt></a>。如果函数失败，它将返回值-1，而成功的发布将返回上传的唯一ID，并触发异步<a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Steam.htm"><span class="notranslate">Steam</span>事件</a>。此事件将创建一个 <tt>DS Map</tt>在内置变量中 <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a>具有以下键/值对：</p><ul class="colour"><li> “ <b>event_type</b> ”-当此函数触发时，此键将保留值“ <b>leaderboard_upload”</b></li><li> “ <b>lb_name</b> ”-此键保存发布到的排行榜的名称</li><li>“<b>成功</b>”-如果发布成功，则为1，失败为0</li><li> “ <b>updated</b> ”（更新）-如果排行榜得分实际上已更新（即：新得分更好），则为1；否则为0</li><li> “ <b>post_id</b> ”-此密钥应与上载调用返回的ID值匹配</li><li>“ <b>score</b> ”-此键保存已发布的分数</li></ul><p></p><h4>句法：</h4><p class="code">steam_upload_score(lb_name, score);</p><table><tbody><tr><th>争论</th><th>描述</th></tr><tr><td><span class="notranslate">lb_name</span></td><td>您要将分数上传到的排行榜的名称（一个字符串）。</td></tr><tr><td> <span class="notranslate">score</span></td><td>要上传的分数（实数）。</td></tr></tbody></table><p></p><h4>返回值：</h4><p class="code">Real</p><p></p><h4>扩展示例：</h4><p>在此示例中，我们首先上传分数，然后解析 <tt>async_load</tt>成功返回地图。以下代码显示了一个典型的上传示例：</p><p class="code">if (hp &lt;= 0)<br/>     {
    <br/>     upload_ID = steam_upload_score(&quot;Game Scores&quot;, score);<br/>     if (!upload_ID)<br/>         {
    <br/>         alarm[0] = room_speed;<br/>         }
    <br/>     }
  </p><p>请注意，如果呼叫失败，我们将设置警报。这将用于稍后再次尝试上载，您可以在此处添加额外的代码以重试上载，或者在乐谱继续失败时将乐谱保存到文本文件中，依此类推...现在，我们将以下内容添加到控制分数的实例的<b><span class="notranslate">Steam</span>异步事件：</b></p><p class="code">var type = ds_map_find_value(async_load, &quot;event_type&quot;);<br/> if (type == &quot;leaderboard_upload&quot;)<br/>     {
    <br/>     var lb_ID = ds_map_find_value(async_load, &quot;post_id&quot;);<br/>     if lb_ID == upload_ID<br/>         {
    <br/>         var lb_name = ds_map_find_value(async_load, &quot;lb_name&quot;);<br/>         var lb_done = ds_map_find_value(async_load, &quot;success&quot;);<br/>         var lb_score = ds_map_find_value(async_load, &quot;score&quot;);<br/>         var
    lb_updated = ds_map_find_value(async_load, &quot;updated&quot;);<br/>         show_debug_message(&quot;leaderboard post id:&quot; + string(lb_ID) + &quot; to lb:&quot; + string(lb_name) + &quot; with score:&quot; + string(lb_score) + &quot; updated=&quot;
    + string(lb_updated));<br/>         if (lb_done)<br/>             {
    <br/>             show_debug_message(&quot;- Succeeded&quot;);<br/>             }
    <br/>         else
    <br/>             {
    <br/>             show_debug_message(&quot;- Failed&quot;);<br/>             }
    <br/>         }
    <br/>     }
  </p><p>在示例中，我们只是将返回值作为调试消息输出到编译器窗口，但是您可以使用此事件以任何选择的方式处理信息。 </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">背面：<a href="Steam_Leaderboards.htm">排行榜</a></div><div style="float:right">下一个： <a href="steam_upload_score_buffer.htm"><span class="notranslate">steam</span> _upload_score_buffer</a></div></div></div><h5> <span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
steam_upload_score
-->
  <!-- TAGS
steam_upload_score
-->
</body>
</html>