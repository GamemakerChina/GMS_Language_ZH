<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>typeof</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="解释函数类型的页面" />
  <meta name="rh-index-keywords" content="typeof" />
  <meta name="search-keywords" content="typeof" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>typeof</h1><p>此函数以字符串形式返回任何给定变量的数据类型。下表列出了可能的返回值：</p><table><tbody><tr><th>细绳</th><th>描述</th></tr><tr><td><span class="notranslate">number</span></td><td>该变量包含一个实数（浮点数）-这可以包括 <tt>NaN</tt>和 <tt>infinity</tt></td></tr><tr><td><span class="notranslate">string</span></td><td>变量包含一个字符串</td></tr><tr><td><span class="notranslate">array</span></td><td>变量引用数组</td></tr><tr><td><span class="notranslate">bool</span></td><td>变量包含一个布尔值（<tt>true</tt> /<tt>false</tt> ）</td></tr><tr><td> <span class="notranslate">int32</span></td><td>该变量包含一个32位整数</td></tr><tr><td><span class="notranslate">int64</span></td><td>该变量保存一个64位整数</td></tr><tr><td><span class="notranslate">ptr</span></td><td>该变量保存一个指针</td></tr><tr><td><span class="notranslate">undefined</span></td><td>变量未定义</td></tr><tr><td><span class="notranslate">null</span></td><td>变量包含一个空值（通常不应看到此值）</td></tr><tr><td> <span class="notranslate">vec3</span></td><td>变量包含一个3值向量</td></tr><tr><td><span class="notranslate">vec4</span></td><td>该变量包含一个4值向量</td></tr><tr><td><span class="notranslate">method</span></td><td>该变量包含一个函数引用</td></tr><tr><td><span class="notranslate">struct</span></td><td>该变量具有结构引用</td></tr><tr><td><span class="notranslate">unknown</span></td><td>价值未知。这<i>永远</i>都不会被看到，并表示在最基本的层面上出现了问题，例如内存覆盖</td></tr></tbody></table><p></p><p>请注意，在某些情况下，此函数可能无法为<strong>方法</strong>返回正确的值。请考虑以下两个函数定义：</p><p class="code">a = function()<br/>     {<br/>     // something<br/>     }<br/>
    <br/> function b()<br/>     {<br/>     // Something<br/>     }</p><p>从技术上讲，它们都被视为方法，因为它们将函数绑定到实例范围变量，但是调用 <span class="inline">typeof()</span>功能上 <span class="inline">b</span>调用时将返回“数字”而<em>不是</em>“方法” <span class="inline">a</span>将返回“方法”。这是由于以下事实：创建的方法类似于 <span class="inline">b</span>被分配了脚本索引（它们是整数值），因为这是编译器识别脚本函数的方式，即使该函数未在脚本中定义。</p><p></p><h4>句法：</h4><p class="code">typeof(variable);</p><table><tbody><tr><th>争论</th><th>描述</th></tr><tr><td><span class="notranslate">variable</span></td><td>要获取其数据类型的变量。</td></tr></tbody></table><p></p><h4>返回值：</h4><p class="code">String (see table, above)</p><p></p><h4><b>例子：</b></h4><p class="code">var _str = typeof(global.ExtensionInput);<br/> show_debug_message(&quot; <strong>global.ExtensionInput is a &quot; + _str);</strong></p><p>上面的代码获取给定全局变量保存的数据类型，并将字符串返回到局部变量，然后该局部变量用于将消息输出到控制台。 </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">返回：<a href="Variable_Functions.htm">变量函数</a></div><div style="float:right">下一个：<a href="bool.htm">bool</a></div></div></div><h5> <span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
typeof
-->
  <!-- TAGS
typeof
-->
</body>
</html>