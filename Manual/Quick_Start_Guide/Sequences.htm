<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>序列</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Overview of Sequences in games." />
  <meta name="rh-index-keywords" content="Quick Start - Sequences" />
  <meta name="search-keywords" content="sequences,dope sheet,track panel,tracks,parameters" />
  <meta name="robots" content="NOODP" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>序列</h1>
  <p>在本指南中，我们将讨论的最后一项资产<strong>是</strong>"序列<strong>"</strong>资产，然后再讨论如何在房间<strong>编辑器</strong>中实现这一切。一个序列本质上是其他资产的集合，这些资产被收集在一个地方，然后一起做动画。
    在一个地方，然后一起做动画。最终的动画（序列）可以像实例一样被添加到你的游戏中的房间。</p>
  <p>序列的创建是通过 <a href="../The_Asset_Editors/Sequences.htm"><strong>序列编辑</strong></a>创建，每当你在<a href="../Introduction/The_Asset_Browser.htm">资产浏览器</a>中创建一个新的序列资产时，就会打开这个编辑器。</p>
  <p><img alt="The Sequences Editor" class="center" src="../assets/Images/QS_Guide/QS_Sequences_Editor.png">要创建一个基本的序列，你可以在序列<em>画布</em>上添加一个声音、一个精灵或一个实例，然后把它定位到你想要的地方
    它在序列开始时的位置。这将创建一个 <strong><a class="glossterm" data-glossterm="Asset Track" href="#">资产追踪</a></strong>在<a class="glossterm" data-glossterm="轨道板" href="#">轨道面板</a> <em></em> ，还可以
    添加<strong></strong>a <strong><a class="glossterm" data-glossterm="关键帧" href="#"><span class="notranslate">关键帧</span></a></strong>到 <a class="glossterm" data-glossterm="涂料表" href="#"><span class="notranslate">Dope Sheet</span></a>来显示该资产的可见时间。</p>
  <p>序列的时间是以帧为单位的（这与实例的步骤相同，即：一帧等于一个游戏步骤），你可以通过移动序列看到在任何给定的帧将发生什么 <strong><a class="glossterm" data-glossterm="弹头" href="#">弹头</a></strong>在
   <span class="notranslate">涂料表中</span>的序列，就可以看到任何一帧会发生什么。播放头的位置也被用来添加到 <strong><span class="notranslate">关键帧</span> </strong>这是你想要改变某些状态的开始或结束的帧。参数键被存储在 <strong><a class="glossterm" data-glossterm="参数轨道" href="#">参数轨道</a></strong>为
    给定的资产。</p>
  <p>因此，你可以在序列的第0帧定位资产并设置其比例、颜色和其他属性。然后，你将记录资产的参数键，并将播放头移动到你想设置下一个资产状态（位置、颜色等）的那一帧。
    颜色，等等....）。)在这一帧上，你将再次改变不同的参数，并为它们记录按键，然后根据序列的长度要求重复这一过程。当你在序列上按下播放键时，资产将被动画化，序列将在不同的参数之间插值。
    序列在不同的参数状态之间<a class="glossterm" data-glossterm="线性内插" href="#">进行插值</a>，最终的结果是这样的。 </p>
  <p><img alt="Sequence Example Image" class="center" src="../assets/Images/QS_Guide/QS_Sequence_Example.gif">我们不会在这里讨论更多关于序列如何工作的细节，但只需说它们是一个非常强大的工具，可以做任何事情
    从剪接场景到菜单，再到角色状态等等。</p>
  <p>下面链接的页面为你提供了如何在你的游戏中使用序列的所有细节。</p>
  <ul class="colour">
    <li><a href="../The_Asset_Editors/Sequences.htm">序列编辑器</a></li>
  </ul>
  <p>现在我们可以继续讨论<strong>房间编辑器</strong>，这是你的游戏的所有这些部分汇集在一起的地方...。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回:<a href="../Content.htm">索引</a></div>
        <div style="float:right">下一步。<a href="Rooms.htm">房间</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
Quick Start: Sequences
Sequences
-->
  <!-- TAGS
qs_sequences
-->
</body>
</html>