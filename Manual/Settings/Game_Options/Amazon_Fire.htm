<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Amazon Fire</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="详细介绍Amazon Fire Game选项的页面" />
  <meta name="rh-index-keywords" content="游戏选项Amazon Fire （旧版）" />
  <meta name="search-keywords" content="Amazon Fire游戏选项" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> <span class="notranslate">Amazon Fire</span>游戏选项（旧版）</h1><h3><strong>重要的！</strong> <span class="notranslate">Amazon Fire</span>作为单独目标平台的旧许可证的用户有效。新的许可证通过<a href="Android.htm"><span class="notranslate">Android</span>游戏选项</a>支持Fire设备。</h3><p>本节概述了可用于控制如何<span class="notranslate">Amazon Fire</span>游戏项目的不同选项。不同的部分是：</p><p></p><h2>一般的</h2><p><img alt="Amazon Fire General Options Part 1" class="center" src="../../assets/Images/Settings/AmazonFire_General1_Options.png" /><strong>“常规”</strong>部分的第一部分专门介绍“<strong>产品信息”</strong>和“<strong>构建设置”</strong> 。您应该填写产品信息，其中包括项目的<strong>显示名称</strong>，其包信息，该信息由<strong>Domain</strong> ， <strong>Company</strong>和<strong>Product组成</strong>。包信息只能由AZ字母和数字0-9组成，完全没有符号或其他特殊字符，也不能包含大写字符。然后，这些详细信息将用于生成格式为“<span class="inline">com.company.myappname</span> ”。</p><p class="note"><strong>注意</strong>：如果您已经设置了<a href="Android.htm"><span class="notranslate">Android</span></a>目标游戏选项，则可以单击<strong>顶部的“从<span class="notranslate">Android</span></strong>同步”按钮，将相关信息从<span class="notranslate">Android</span>目标传输到<span class="notranslate">Amazon Fire</span> 。</p><p>然后，您需要设置<strong>构建工具</strong>以及<strong>Target</strong> ， <strong>Minimum</strong>和<strong>Compile SDK</strong>版本。</p><p class="note"><strong>注意</strong>：还可以使用“<strong>支持库</strong>”版本的选项。从<span class="notranslate">GameMaker Studio</span> v2.2.4及更高版本开始，不再需要此功能，此处使用的任何值都将被忽略。保留该设置，以用于需要<span class="notranslate">runtime</span>早于2.2.4的旧项目。</p><p> <span class="notranslate">GameMaker Studio 2</span> <span class="notranslate">Android</span> / <span class="notranslate">Amazon Fire</span>目标构建游戏时，将使用构建工具（和支持库（如果需要））， <span class="notranslate">Android</span> Studio安装的工具将其设置为适当的值。</p><ul class="colour"><li> <strong>Target SDK</strong>表示您已经在（此处包括）您指定的版本上测试了您的应用程序。这仅仅是为了让<span class="notranslate">Android</span> OS从操作系统功能的角度了解如何处理您的应用。出于所有实际目的，大多数应用程序都希望将Target SDK设置为API的最新发行版（由Compile SDK设置使用）。这将确保您的应用在最新的<span class="notranslate">Android</span>设备上看起来尽可能好。请注意，自2019年11月起，Google已将API级别28设为必需的目标。</li><li><strong>最低SDK</strong>版本是将运行您的项目的最低API级别。从2019年11月开始，Google已将API级别16设置为绝对最低要求，但是如果您添加扩展名，则它们可能需要更高的最低API级别。</li><li> <strong>Compile SDK</strong>版本是针对项目进行编译的API版本。这意味着您可以使用该版本API中包含的<span class="notranslate">Android</span>例如，如果尝试使用API 16功能（但设置了Compile SDK 15），则会出现编译错误。但是，如果将Compile SDK设置为28，则仍可以在API 26设备（以及所有其他先前版本）上运行该应用程序。</li></ul><p><strong>您可以通过单击“将SDK值预填充</strong>到选定的API级别”按钮从一种预定义的目标设置中进行选择，这将打开一个可供选择的不同API的列表。选择其中任何一个将使用适当的值填充所有SDK文件，然后您可以根据需要使用或编辑它们。</p><p class="note"><strong>注意</strong><span class="notranslate">Android</span> SDK Manager中或通过<span class="notranslate">Android</span> Studio安装适当的API，项目才能正确编译。</p><p><img alt="Amazon Fire General Options Part 2" class="center" src="../../assets/Images/Settings/AmazonFire_General2_Options.png" /> “常规”部分的第二部分介绍了可以为获得最佳用户体验而运行游戏<strong>的不同方向。</strong>可用的选项有：</p><ul class="Disc"><li>肖像</li><li>人像翻转</li><li>风景</li><li>横向翻转</li></ul><p>最后，您可以使用以下其他选项：</p><ul class="colour"><li><strong>启用蓝牙/ iCade支持</strong>：这将在您的游戏项目中添加对蓝牙或iCade游戏手柄的支持。默认情况下处于启用状态。</li><li><strong>运行Lint代码分析</strong>：选中此选项时，构建工具将在构建项目时在项目上运行lint代码分析，从而提供更深入的错误检查，并在项目编译时在输出窗口中显示更多信息（LOG<a href="../../Introduction/The_Output_Window.htm">也会创建文件，并在“输出窗口”</a>中在编译结束时显示该文件的路径。请注意，并非所有由lint分析标记为错误的内容都一定会对您的游戏造成问题，并且启用此功能可能意味着您的游戏不再编译，即使关闭该游戏也可以正常运行。本质上，这仅用于调试，默认情况下该选项为关闭。</li><li><strong>安装位置</strong>：您可以在此处设置游戏的默认安装位置。可以将其设置为“<strong>自动”</strong> ，在这种情况下，游戏将被安装到用户在其设备上选择的位置，或者可以将其设置为“<strong>首选外部”</strong> ，它将始终尝试将游戏安装到设备的外部存储中。 。</li></ul><p>您还可以在此处<span class="notranslate">Amazon Fire</span> <strong>Sleep Margin。</strong>此选项与减少在特定系统上运行游戏时的卡顿有关。基本上，如果您的游戏运行速度快于您的房间速度， <span class="notranslate">GameMaker Studio 2</span>将在剩余时间内“休眠”，但是这种休眠可能会非常不准确，并且您通常可能会结束不必要的长时间睡眠，从而导致帧花费更长的时间。导致口吃。为了解决这个问题，我们可以睡更少的时间，然后在剩下的时间里紧紧地坐一圈，以使其更加准确-尽管坐在一个循环中的问题是会导致CPU使用率增加，这反过来又可以导致您的CPU温度升高，并且设备使用更多的电池。默认情况下，此值设置为4，在99.99％的情况下，您可以使用此值，但对于低端设备或运行大量后台进程的设备，此值可能不是理想的解决方案可能需要5到10。请注意，尽管这很大程度上是特定于设备的配置，并且您的构建设备上有效的配置可能不适用于其他用户，因此如有疑问，请将其设置为4。</p><p></p><h2>图形</h2><p><img alt="Amazon Fire Graphics Options" class="center" src="../../assets/Images/Settings/AmazonFire_Graphics_Options.png" />您可以在此处更改以下有关游戏显示方式的详细信息，并提供以下选项：</p><ul class="colour"><li><strong>在像素之间插值颜色</strong>：打开<a class="glossterm" data-glossterm="线性插值" href="Ubuntu.htm#">线性插值</a>，基本上可以“平滑”像素。对于清晰的像素图形，应该将其关闭，但是如果您具有不错的alpha混合和平滑的边缘图形，则最好保留它。默认情况下处于启用状态。</li><li><strong>屏幕颜色深度</strong>：可用于将渲染的颜色深度设置为16位或24位。如果将其设置为24bit，这将影响与某些较旧设备的兼容性，并且还将增加<em>所需的ashmem</em> <span class="notranslate">Amazon</span> Fire设备上的共享内存）。</li><li><strong>缩放</strong>：在这里，您可以选择缩放绘图画布，以在设备屏幕上保持宽高比-在边缘周围添加“填充”以适合屏幕-或者您可以选择拉伸画布以适合设备屏幕。</li></ul><p>最后，可以选择设置<a class="glossterm" data-glossterm="纹理页面" href="macOS.htm#">纹理页面</a>的大小。默认（也是最兼容）大小是2048x2048，但是您可以选择256x256到8192x8192之间的任意值。还有一个标记为“<strong><strong>预览”</strong></strong>的按钮，它将为该平台生成纹理页面，然后打开一个窗口，以便您查看它们的外观。如果希望查看纹理页面的结构并防止纹理页面大于（或小于）所需的页面，这将非常有用。有关纹理页面的更多信息，请参见<a href="../Texture_Information/Texture_Pages.htm">此处</a>。</p><p class="note"><strong>注意</strong>：请注意，纹理页面的大小越大，游戏与不同浏览器和设备的兼容性越差。</p><p></p><h2>图示</h2><p><img alt="Amazon Fire Icons Options" class="center" src="../../assets/Images/Settings/AmazonFire_Icons_Options.png" />本部分允许您添加项目对于不同商店页面和设备所需<strong>的各种Icon图像。</strong>所有图标图像应创建为24位 <span class="inline">*.png</span>给定适当大小的文件。</p><p>值得注意的是， <span class="notranslate">GameMaker Studio 2</span>具有<a href="../../IDE_Tools/Project_Image_Generator.htm">项目图像生成器</a>工具，该工具可用于自动创建将游戏编译到的所有不同目标平台所需的所有图像。如果使用此工具，则应修改创建的图像，以确保它们是您所需要的。该工具将生成图标以及图像（请参阅以下部分）。</p><p></p><h2>图片</h2><p><img alt="Amazon Fire Images Options" class="center" src="../../assets/Images/Settings/AmazonFire_Images_Options.png" />在这里，您可以设置<strong>边框颜色</strong>，将其用作未设置为填充全屏的初始屏幕的背景。您还可以将<em>横向</em>屏幕和<em>纵向</em><strong>模式的“启动画面”</strong>添加到最终游戏文件中，并在游戏加载到设备上时显示。该屏幕应为24位 <span class="inline">*.png</span>文件，建议与游戏的第一个房间（或视图）大小相同。如果您需要在特定时间显示启动屏幕，则还可以在此处将其设置为0到10秒（默认时间为0表示仅在加载资产期间显示）。您还可以通过以下选项设置初始屏幕的显示方式：</p><ul class="colour"><li><strong>保持纵横比</strong>：与设备屏幕相比，这将保持图像的纵横比，并在需要时在边缘周围添加“填充”。</li><li><strong>裁剪以适合</strong>：这将使图像在设备屏幕上保持1：1，并根据需要裁剪（或填充）边缘。</li><li><strong>拉伸</strong>：这将拉伸图像以填满设备屏幕（并可能使显示的图像变形）。</li></ul><p>最后，您可以设置<strong>横幅图像</strong>，它也是一个24位<span class="inline">*.png</span>。</p><p></p><h2>权限</h2><p><img alt="Amazon Fire Permissions Options" class="center" src="../../assets/Images/Settings/AmazonFire_Permissions_Options.png" />在此选项卡中，您可以更改游戏可能在<span class="notranslate">Amazon Fire</span> Manifest中请求的某些权限。 <span class="notranslate">GameMaker</span> Studio 2会根据游戏使用的功能自动根据需要分配权限，但是您可能会发现您需要为未正确分配游戏的权限（例如，使用自定义扩展名），在这种情况下，请勾选必要的权限框。</p><p>下面的列表概述了可用的那些权限：</p><ul class="colour"><li><span class="inline">WRITE_EXTERNAL_STORAGE</span> ：将允许您的游戏写入外部存储。</li><li><span class="inline">READ_PHONE_STATE</span> ：允许以只读方式访问电话状态。</li><li><span class="inline">ACCESS_NETWORK_STATE</span> ：允许您的游戏访问有关网络的信息。</li><li><span class="inline">INTERNET</span> ：允许您的游戏打开网络套接字。</li><li><span class="inline">BLUETOOTH</span> ：将允许您的游戏连接到配对的蓝牙设备。</li><li><span class="inline">RECORD_AUDIO</span> ：将允许您的游戏录制来自麦克风的音频输入。</li></ul><p class="note"><strong>注意</strong>：如果不确定您是否需要这些，则可能应默认情况下不对其进行检查，并让<span class="notranslate">GameMaker Studio 2</span>处理您的游戏权限。</p><p> <span class="notranslate">Amazon Fire</span> Permissions部分还具有一个区域，您可以在其中将权限注入<strong><span class="notranslate">Android</span>应用程序标签</strong>中的 <span class="inline"><span class="notranslate">Android</span>manifest.xml。 <span class="notranslate">Android</span>文档中找到可用标签的完整列表：</p><ul class="colour"><li> <a href="https://developer.android.com/guide/topics/manifest/application-element"><span class="notranslate">Android</span>开发人员：应用程序标签</a></li></ul><p>值得注意的是，对于目标API 28及更高版本，您将不再被允许使用“<span class="inline">http</span> “-”<span class="inline">https</span>则需要添加“”-除非添加以下标签： </p><p class="code">android:usesCleartextTraffic = &quot;true&quot;</p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">返回：<a href="../Game_Options.htm">游戏选项</a></div></div></div><h5><span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
Amazon Fire Game Options (Legacy)
-->
  <!-- TAGS
amazon_options
-->
</body>
</html>