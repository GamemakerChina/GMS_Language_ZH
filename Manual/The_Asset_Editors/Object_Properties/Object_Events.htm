<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>对象事件</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="详细说明事件系统和对象中不同事件的页面" />
  <meta name="rh-index-keywords" content="对象-事件" />
  <meta name="search-keywords" content="events,对象事件,事件清单" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>对象事件</h1><p>那么，什么是对象<strong>事件</strong>？基本上，这些是游戏循环中谨慎的时刻，根据您为它们编写的内容使事情发生。 <span class="notranslate">GameMaker Studio 2</span>处理这些事件的周期-从房间开始到完成为止，都有一个游戏循环正在运行，在该循环中，运行或检查一系列事件的<strong>每一步</strong><span class="notranslate">DnD</span>对象中对这些事件做出响应的™动作（一步是游戏时间，由房间速度设置决定，也可以称为<strong>帧</strong>）。</p><p>让我们看一下带有事件和代码的典型对象设置：</p><p><img alt="Object Editor Events View" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Events.png" />如您在示例对象中看到的，列出了许多事件，它们应该响应，但是最初在创建对象时，该列表为空，您必须确定所需的事件以及在发生这些事件时该对象的实例事件被触发。要将事件添加到对象中，请按<em>事件列表底部的添加事件</em>按钮，这将打开以下窗口：</p><p><img alt="Object Editor Events List" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_EventList.png" />这是对象可以响应的所有基本事件和事件类别的列表，并且在每个类别内都是子事件，以进一步完善行为。例如，如果你点击在<strong>K</strong> <strong>EY新闻</strong><img alt="Key Press Icon" height="16" src="../../assets/Images/Icons/Icon_KeyboardPress.png" width="16" />事件类别然后你会得到进一步的窗口弹出所有让你选择<em>哪个</em>键的对象应响应的事件。选择事件后，代码窗口（或<span class="notranslate">DnD</span>™工作区窗口）将被链接到该窗口并在右侧打开。现在，您可以编辑代码以使对象具有对该事件的特定行为或反应。</p><p>您可以单击鼠标右键<img alt="RMB Icon" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" style="" />在已添加到对象的任何事件上以获取以下菜单选项时：</p><p><img alt="Object Editor Events Menu" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_RMBMenu.png" />这些选项是：</p><ul class="colour"><li><strong>添加事件</strong>-从事件列表中添加新事件。</li><li><strong>剪切</strong>/<strong>复制</strong>/<strong>粘贴事件</strong>-剪切，复制或粘贴所选事件。您也可以使用标准键盘快捷键：<img alt="CTRL Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Ctrl.png"
        width="55" /> /<img alt="CMD Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Cmd.png" width="55" /> + <span class="inline">X</span> ，<img alt="CTRL Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Ctrl.png"
        width="55" /> /<img alt="CMD Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Cmd.png" width="55" /> + <span class="inline">C</span> ， 和<img alt="CTRL Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Ctrl.png"
        width="55" />/<img alt="CMD Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Cmd.png" width="55" /> + <span class="inline">V</span> 。</li><li><strong>复制事件</strong>-复制所选事件。这将获取所选事件的内容，并在您指定的另一个事件中复制它们。</li><li><strong>更改事件</strong>-更改事件。这将提示您选择另一个事件类别，一旦选择，当前事件的内容将更改为新事件（在此过程中删除原始事件）。</li><li><strong>转换为<span class="notranslate">Drag and Drop</span> /代码</strong>-将使用创建项目时选择的方法（使用代码或使用<span class="notranslate">Drag and Drop</span>™操作）创建对象事件。使用此选项，无论项目类型如何，都可以从一个转换为另一个。</li><li><strong>删除事件</strong>-删除事件。</li></ul><p>删除事件时，您可以使用<img alt="Shift Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Shift.png" width="55" />+<img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" />选择多个事件然后全部删除。创建的每个对象都有自己谨慎的事件列表，可从<strong>对象编辑器</strong>中添加到其中。这些事件分为两类：</p><ul class="colour"><li>那些运行每个游戏步骤的游戏</li><li>由游戏事件“触发”的事件，例如到达房间边缘的实例或键盘或鼠标的按下。</li></ul><p>事件的完整列表如下：</p><p></p><p><img alt="Create Event Icon" src="../../assets/Images/Icons/Icon_Create.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#">创建</a></p><div class="droptext" data-targetname="drop-down8"><p class="dropspot">此事件在首次创建对象的实例时发生，并且是进入房间时通过“房间编辑器”放置在房间中的实例中发生的第一件事。这意味着该事件是初始化<a class="glossterm" data-glossterm="多变的" href="#">变量</a><span class="glossextra">s</span> ，启动<a href="../Timelines.htm">时间轴</a>，设置<a href="../Paths.htm">路径</a>等...以及执行通常仅需要执行一次或仅在首次在房间中创建实例时执行的其他所有操作的理想场所。如果您的对象在对象编辑器或房间编辑器中添加了<strong>任何对象变量</strong>或<strong>实例变量</strong>，则将首先初始化这些变量，然后运行<strong>创建事件。</strong></p><p class="dropspot"><a href="../Room_Properties/Layer_Properties.htm">请记住，您可以在“房间编辑器”中的“实例创建代码”</a>中修改您在“创建事件”中设置的任何内容，因为该操作在实例的创建事件之后直接运行，可用于创建<strong>实例变量</strong>或覆盖添加为对象变量或实际的创建事件中。</p><p class="dropspot"></p></div><p><img alt="Destroy Event Icon" src="../../assets/Images/Icons/Icon_Destroy.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#">破坏</a></p><div class="droptext" data-targetname="drop-down9"><p class="dropspot">此事件是销毁实例时要执行的事件。在向对象添加行为时，通常会忽略它，但是它可能非常有用，例如，在杀死敌人时创建爆炸或粒子效果，或者在房间的另一部分重新生成对象的新实例，或者甚至将分数添加到分数上。</p><p class="dropspot"></p></div><p><img alt="Clean Up Event Icon" src="../../assets/Images/Icons/Icon_Destroy.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#">清理</a></p><div class="droptext" data-targetname="drop-down10"><p class="dropspot"><span>在从房间中删除对象实例的任何事件之后，将调用此事件。因此，它将在以下情况下触发：</span></p><ul class="dropspotlist"><li class="dropspot"><span>实例被销毁</span></li><li class="dropspot"><span>房间结束</span></li><li class="dropspot"><span>游戏结束</span></li></ul><p class="dropspot"><span>它是专为你使用“清理”的任何动态的资源，你可能在你的游戏（如面，数据结构等），或者你需要时，例如从取出进行<em>一次</em>执行任何任务游戏的任何方式。</span></p><p class="dropspot"><span>请注意，此事件将在<em>触发该事件的事件后立即</em><strong>调用，但是直到当前事件结束时该</strong>实例才真正从游戏中删除。例如，如果您致电 <span class="inline">instance_destroy()</span>在“ Step事件”中，将调用“销毁事件”，然后是“清理事件”，然后<em>其余“ Step事件”将完成运行</em>。这意味着您在调用后拥有的任何代码 <span class="inline">instance_destroy()</span>如果您清理了代码所需的数据结构或其他资源，它将仍然运行，并且有可能导致错误，因此在使用此事件时必须格外小心。</span></p><p></p></div><p><img alt="Alarm Event Icon" src="../../assets/Images/Icons/Icon_Alarm.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#">警报</a></p><div class="droptext" data-targetname="drop-down11"><p class="dropspot">警报类别分为12个事件，每个事件可以在一个实例中设置一个。因此，当您单击“<em>添加警报”</em>类别时，将显示以下窗口：</p><p class="dropspot"><img alt="Object Editor Alarm Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_AlarmEvents.png" />在这里，您选择要创建的警报，完成后，您将看到该警报已添加到事件窗口，允许您正常添加代码。但是什么是警报？嗯，这是一个特殊事件，除非事先设置了警报，否则它什么也不做，然后它将等待直到该警报倒数至0为止，然后再运行添加到其中的操作或代码。</p><p class="dropspot">警报到达0并运行代码后，它将倒计时到-1，在该位置将一直保留直到再次设置（这意味着您可以检查警报的值以查看它是否大于-1，这将告诉您您是否正在运行）。所以，说你定了 <span class="inline">alarm[0]</span>在将对象的create事件设置为30时，这意味着<span class="notranslate">GameMaker Studio 2</span>将倒数30个游戏步骤，然后再运行放置在游戏中的操作或代码 <span class="inline">alarm[0]</span>事件。请注意，将警报设置为0<em>不会</em>运行警报代码，因为会触发事件，但是会立即将警报设置为-1，因此会跳过该代码。如果需要警报才能继续执行下一步，则应将其设置为1。</p><p class="dropspot">这非常有用，因为它允许您在精确的时刻使事物运动，甚至可以重复它们，因为没有任何事情可以阻止您在自己的事件中设置警报。假设您有一个怪物，并且希望它每三秒钟右转...好吧，您可以在它的create事件中将警报设置为房间速度* 3（如果房间速度为30，则表示每秒30步，因此将其乘以3，您将得到3秒！），然后在发生警报事件时，您将具有设置其方向的代码或操作，以及再次将其警报设置为房间速度* 3的操作（或代码）。这样，您可以设置简单的游戏循环，使事情仅在特定的时间间隔发生。</p><p class="dropspot">值得注意的是，其中没有任何动作或代码的警报<em>不会</em>倒计时。但是，即使只是注释而没有代码或操作，警报仍将继续递减计数，并且可以像通常一样设置和检查。</p><p class="dropspot"></p></div><p><img alt="Step Event Icon" src="../../assets/Images/Icons/Icon_Step.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#">步</a></p><div class="droptext" data-targetname="drop-down12"><p class="dropspot"><span class="notranslate">GameMaker Studio 2</span>将时间分为<strong>几步</strong>，房间速度定义了每秒应该执行的步骤数（一个步骤也可以称为<strong>frame</strong> ）。一步基本上就是一个循环，不断循环运行，并在游戏运行时根据需要检查并触发所有事件，因此，可以想象到， <strong>Step Event</strong>是一个事件，在实例执行时游戏的每一步都会被检查存在。</p><p class="dropspot">步骤事件实际上由以下概述的三个子事件组成：</p><p class="dropspot"><img alt="Object Editor Step Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Step.png" />在大多数情况下，标准步骤事件可以很好地使用，但是有时您希望对什么代码运行以及在什么时间进行更多控制，因此可以为您提供<strong>Begin</strong>和<strong>End</strong>步骤事件。所有这三个步骤都经过检查，但是即使以后对<span class="notranslate">GameMaker Studio 2</span>引擎的更新更改了其他事件，它们的顺序也不会改变，这意味着这是确保某些事情总是先于其他事情发生的唯一可靠方法。</p><p class="dropspot">步进事件可以用作什么？好吧，它可以用于需要连续执行的动作或代码。例如，如果一个物体应跟随另一个物体，则可以在此处使运动方向朝向我们要跟随的物体，以使其顺畅地向后移动。但是，请谨慎对待此事件，并且不要在对象的step事件中进行许多复杂的操作，尤其是如果您计划在游戏室中拥有很多对象的实例，因为这可能会减慢游戏速度。许多事情可以放入警报中，也可以设置为使用<strong>其他</strong>事件来触发，而不是一直发生。</p><p class="dropspot"></p><p class="dropspot"></p></div><p><img alt="Collision Event Icon" src="../../assets/Images/Icons/Icon_Collision.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down13" href="#">碰撞</a></p><div class="droptext" data-targetname="drop-down13"><p class="dropspot">显然，制作游戏时，知道对象的两个（或更多）实例何时发生碰撞非常重要，为此，我们拥有<strong>Collision Event</strong> 。这是一个事件，您将其放置在一个对象中，然后指定应针对哪个其他对象进行碰撞检查。</p><p class="dropspot">如果未启用物理，则将基于两个对象的蒙版（蒙版在sprite属性中定义，或可以在对象属性中单独分配）以及它们是否重叠来计算这些碰撞。请注意，如果碰撞中的一个或其他实例未分配遮罩（或将精灵蒙版设置为空），<em>即使它正在绘制某些东西，</em>也不会检测到碰撞。</p><p class="dropspot">如果<strong>启用了Physics</strong> ，则碰撞将基于您在对象的物理属性中为对象定义<strong>的碰撞形状</strong>（ <em>Fixture）的类型，以及它对碰撞的反应。</em>这意味着您可能不需要任何代码来处理冲突，但是此事件仍将<em>需要至少包含注释</em>以检测到冲突。</p><p class="dropspot">最后，应该注意的是，在触发碰撞事件之前，每个游戏步骤将计算一次所有碰撞，因此，当碰撞事件运行时，所有碰撞将已经被计算并预先分配。这意味着，如果您在此事件中创建一个实例，然后尝试检查与之的碰撞，则直到游戏循环<a class="glossterm" data-glossterm="迭代" href="#">的下一次迭代，该碰撞才会被检测到或解决。</a></p><p class="dropspot"></p><p class="dropspot"></p></div><p><img alt="Keyboard Icon" src="../../assets/Images/Icons/Icon_Keyboard.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#">键盘，</a><img alt="Keyboard Press Icon" src="../../assets/Images/Icons/Icon_KeyboardPress.png"
    /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#">键盘按键</a><img alt="Keyboard Release Icon" height="16" src="../../assets/Images/Icons/Icon_KeyboardRelease.png" style="cursor: nwse-resize;" width="15" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#">键盘释放</a></p><div class="droptext" data-targetname="drop-down14"><p class="dropspot">让玩家控制游戏的各个方面非常重要，为此， <span class="notranslate">GameMaker Studio 2</span>为您提供了非常全面的键盘事件列表，可以在三个主要键盘类别中的任何一个中使用。对于常规键盘类别，只要按下所选键，它就会连续触发每一步，而按下和释放类别事件仅在最初按下或释放键时才触发一次。</p><p class="dropspot">应该注意的是，每当使用一个键时，键盘事件实际上都会在一个房间中的所有活动实例中触发，但是只有那些为该特定键定义了事件的事件才会响应，并且您可以在任何对象和实例中创建多个键盘事件。游戏运行时，该对象的所有对象都会做出响应。</p><p class="dropspot">将任何键盘事件添加到对象时，将显示键盘子事件菜单，您可以在其中指定要检查的键：</p><p class="dropspot"><img alt="Object Editor Keyboard Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Keyboard.png" />它们中的大多数是相当明显的，但让我们简要地介绍一下这些部分-在顶部，我们有箭头键，接着是最常用的修饰键，然后是键盘的其余部分（分为其他小节，因此您可以所需的确切密钥，例如<img alt="Escape Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Escape.png" width="55"
      />或者<img alt="Insert Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Insert.png" width="55" />），最后是两个非常特殊的子事件： <strong>No Key</strong>和<strong>Any Key</strong> 。正如其名称所暗示的，这些都是子事件检查时<em>没有</em>键被按下或按<em>任意</em>键。请注意，数字键盘上的按键仅在启用<strong>数字锁定时才产生相应的事件。</strong></p><p class="dropspot">键盘的“<strong>按下”</strong>和“<strong>释放”</strong>事件与常规键盘事件几乎完全相同，除了它们不是连续触发，而是仅触发一次。当键盘首次注册已按下某个键时，它将生成一个<strong>Keyboard Pressed</strong>事件（以及常规的Keyboard事件），此后第一次不再检测到某个键被按下时，它将触发一个<strong>键盘发布</strong>事件。</p><p class="dropspot"></p><p class="dropspot"></p></div><p><img alt=" Mouse Icon" height="16" src="../../assets/Images/Icons/Icon_MouseEvent.png" width="16" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down16" href="#">老鼠</a></p><div class="droptext" data-targetname="drop-down16"><p class="dropspot">鼠标类别分为一系列事件，可以选择这些事件以使您更精确地控制游戏中发生的事情。在这里，您可以确切地看到这些事件是什么：</p><p class="dropspot"><img alt="Object Editor Mouse Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Mouse.png" />左边<img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" />， 正确的<img alt="RMB Icon" class="icon"
        src="../../assets/Images/Icons/Icon_RMB.png" />和中间<img alt="MMB Icon" class="icon" src="../../assets/Images/Icons/Icon_MMB.png" />按钮事件（<strong>正常</strong>，<strong>按下</strong>还是<strong>释放</strong>）都在具有该事件的实例的遮罩上起作用。这意味着当将这些按钮用于具有鼠标事件的实例的碰撞蒙版时<span class="notranslate">GameMaker Studio 2</span><a class="glossterm" data-glossterm="边框" href="#">如果实例边界框</a>发生“碰撞”，则将触发该事件，因此请确保具有这些事件的任何实例都具有带有有效碰撞蒙版的精灵，或者该对象具有在对象属性中选择的蒙版精灵。顾名思义，这些事件将在第一次按下或释放选定的鼠标按钮时触发一次，或者在保持按钮时连续地触发每个事件。</p><p class="dropspot">鼠标的进入和离开事件也与按钮事件类似，因为它们也完全依赖实例的遮罩才能工作，但是这一次，它们是在鼠标首次“进入”（触摸）实例或当鼠标“进入”时触发的。离开”（停止触摸）实例。但是，这些事件不是连续的，并且每次鼠标进入或离开对象时仅触发一次-因此，它们是一种理想的创建方法，例如，当鼠标悬停在它们上之前需要更改按钮，然后再返回到删除鼠标时正常。</p><p class="dropspot">最后，还有关于鼠标事件的另一部分，称为“<strong>全局鼠标”</strong> 。在此子菜单中，您将找到一些事件选择，这些事件用于记录实例中的鼠标事件，即使鼠标不在它们上方或附近时也是如此。<em>这些是为所有</em>实例生成的事件，如果为指定事件定义了动作或代码，则无论鼠标在游戏室内的位置如何，都将运行该事件或代码。</p><p class="dropspot">请注意，在移动或触摸屏设备上，鼠标左键<img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" />也可以用于检查触摸屏上的手指选项卡和鼠标右键<img
        alt="人民币图标" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" />通过在屏幕上双击来触发（可以使用代码更改此行为）。</p><p class="dropspot"></p><p class="dropspot"></p></div><p><img alt="Gestures Icon" src="../../assets/Images/Icons/Icon_Gesture.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down18" href="#">手势</a></p><div class="droptext" data-targetname="drop-down18"><p class="dropspot">此事件是由用户触摸屏幕（在移动设备上）或单击并移动鼠标（在所有其他平台上）触发的事件。这些事件与鼠标事件类似，因为您具有常规版本和<em>全局</em>版本。只有在具有精灵（或蒙版）的实例上发生触摸并且其<a class="glossterm" data-glossterm="边框" href="#">边界框内</a>发生触摸时，才会触发这些事件的常规版本。但是，这些事件的全局版本将由用户触摸屏幕上的<em>任意位置触发。</em></p><p class="dropspot">手势事件检测以下内容：</p><ul class="dropspotlist"><li class="dropspot"><img alt="Tap Icon" class="icon" src="../../assets/Images/Icons/Icon_Tap.png" /><strong>点击</strong>-用户单击/触摸并快速释放时</li><li class="dropspot"><img alt="Drag Icon" class="icon" src="../../assets/Images/Icons/Icon_Drag.png" /><strong>拖动</strong>-用户触摸/单击并保持它时，然后移动其手指/光标</li><li class="dropspot"><img alt="Flick Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Flick.png" width="20" /><strong>轻弹</strong>-当用户移动并释放一个动作中的触摸/单击时</li><li class="dropspot"><img alt="Pinch Icon" class="icon" src="../../assets/Images/Icons/Icon_Pinch.png" /><strong>捏</strong>-用户在屏幕上有两个手指然后将它们一起移动/分开时</li><li class="dropspot"><img alt="Rotate Icon" class="icon" src="../../assets/Images/Icons/Icon_Rotate.png" /><strong>旋转</strong>-当用户在屏幕上有两个手指，然后围绕一个点旋转它们时</li></ul><p class="dropspot"><img alt="Object Editor Gesture Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Gesture.png" />不同的事件将始终包含一个称为“<span class="inline">event_data</span> ”地图，其中将包含许多键/值对以及有关触摸/点击位置和移动的数据。有关所有可用子事件及其工作方式的完整详细信息，请参见以下部分：</p><ul class="dropspotlist"><li class="dropspot"><a href="Gesture_Events.htm">手势事件</a></li></ul><p class="dropspot"></p><p class="dropspot"></p></div><p><img alt="Other Icon" height="16" src="../../assets/Images/Icons/Icon_Other.png" width="16" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down19" href="#">其他</a></p><div class="droptext" data-targetname="drop-down19"><p class="dropspot"><span class="notranslate">GameMaker Studio 2</span>制作游戏时，有许多特殊事件可供使用，它们大多组合在“其他”事件下，可以从选择该事件的子事件的弹出菜单中进行选择。这是所有其他事件的图像：</p><p class="dropspot"><img alt="Object Editor Other Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_OtherEvents.png" />有关上图中列出的每个事件的更多信息，请参见以下部分：</p><ul class="dropspotlist"><li class="dropspot"><a href="Other_Events.htm">其他活动</a></li></ul><p class="dropspot"></p></div><p><img alt="Draw Event" src="../../assets/Images/Icons/Icon_Draw.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down20" href="#">画</a></p><div class="droptext" data-targetname="drop-down20"><p class="dropspot">此事件类别是控制您在运行游戏时在屏幕上看到的内容的类别，并且分为各种谨慎的事件：</p><p class="dropspot"><img alt="Draw Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Draw.png" />如您所见，绘制事件类别具有多种不同的事件类型。 <strong>Draw Begin</strong> ， <strong>Draw</strong>和<strong>Draw End</strong>是您可能最常使用的“标准”绘制事件。默认情况下，始终为每个实例调用主Draw事件，而不管它是否具有sprite，尽管如果将实例标记为不可见，则不会触发该事件（因此，如果您有任何游戏逻辑，请记住这一点在不可见对象的绘制事件中，因为它不会运行）。主绘制事件也是<span class="notranslate">GameMaker Studio 2</span>在事件中没有代码或动作时默认绘制实例精灵的地方（即：您尚未将其添加到对象的事件列表中）。默认图形使用与实例关联的精灵，并将在代码或应用的操作中设置的任何变换下进行绘制。</p><p class="dropspot">标准Draw事件在<strong>Draw GUI</strong><em>事件之前</em><strong>，Pre Draw</strong>和<strong>Post Draw</strong><em>事件之间</em>进行绘制，这意味着在此事件中绘制的所有内容均绘制在<strong>Draw GUI</strong>事件的下方，而与图层无关（即： Draw GUI事件将始终在普通draw事件中绘制的所有对象之上绘制，而不管层顺序如何）。</p><p class="dropspot">请注意，以上内容只是“绘制事件”工作原理的概述，但是有关所有可用子事件的完整详细信息，请参见以下部分：</p><ul class="dropspotlist"><li class="dropspot"><a href="Draw_Events.htm">抽奖活动</a></li></ul><p></p><p></p><p class="dropspot"></p></div><p><img alt="Async Event" src="../../assets/Images/Icons/Icon_Async.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down21" href="#">异步</a></p><div class="droptext" data-targetname="drop-down21"><p class="dropspot">此事件类别的特殊之处在于，它所包含的事件不是由<span class="notranslate">GameMaker Studio 2</span>默认触发的，而是由某些其他操作（例如，文件的加载或来自Web服务器的答复）的结尾触发的。类别分为以下事件：</p><p class="dropspot"><img alt="Object Editor Asynchronous Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Async.png" /></p><p class="dropspot">因此，假设您要将图像文件添加到<span class="notranslate">GameMaker Studio 2</span> 。好吧，您可以在对象的另一个事件（可能是Create Event）中对此进行编码，然后让该对象在等待时（例如）绘制一个加载条，轮询适当的异步事件，直到告诉<span class="notranslate">GameMaker Studio 2</span>该文件<a class="glossterm" data-glossterm="打回来" href="#">的回调</a>已加载。然后，您可以使用此事件中返回的数据执行其他操作，例如更衣室或购买物品。</p><p class="dropspot">请注意，以上只是异步事件的工作原理的概述，但是有关所有可用子事件的完整详细信息，请参见以下部分：</p><ul class="dropspotlist"><li class="dropspot"><a href="Async_Events.htm">异步事件列表</a></li></ul><p class="dropspot"></p></div><p></p><p>您还应该注意，您可以为事件命名，或者至少给它们一个简短的描述性文本，这些文本将在事件编辑器中显示在事件旁边。为此，只需在事件的代码编辑器的第一行中添加以下内容：</p><p class="code">/// @description Your text here</p><p>因此，您可能在-例如-<strong>警报</strong>事件中有类似的内容</p><p class="code">/// @description This is the AI Fight alarm</p><p>现在，在事件编辑器中，您将看到：</p><p><img alt="Object Editor Named Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_NamedEvents.png" /></p><p>对于<span class="notranslate">DnD</span>™用户，添加注释要求使用<strong>执行代码</strong>操作，该操作应放在事件操作的最顶部，然后再进行其他操作。添加此操作时，然后为其提供与上面显示的相同的代码行以命名该事件，例如：</p><p><img alt="Naming An Event In DnD" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_DnD_NamedEvents.png" />有关上述某些事件和常规事件运行顺序的其他信息，请参见以下部分：</p><ul class="colour"><li><a href="Event_Order.htm">活动顺序</a></li><li><a href="Other_Events.htm">其他活动</a></li><li><a href="Draw_Events.htm">抽奖活动</a></li><li><a href="Async_Events.htm">异步事件</a></li><li><a href="Gesture_Events.htm">手势事件</a></li></ul><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">返回：<a href="../Objects.htm">对象编辑器</a></div><div style="float:right">下一页：父对象</div></div></div><h5><span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
Object Events
Named Events
-->
  <!-- TAGS
object_events
-->
</body>
</html>