<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>物理对象</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="页面详细对象物理" />
  <meta name="rh-index-keywords" content="对象-物理" />
  <meta name="search-keywords" content="对象物理,物理,固定装置,捆绑,物理形状编辑器,形状编辑器,物理性质" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>物理对象</h1><p>首次创建新对象资源时，会有一个标记为<strong>Uses Physics的</strong>复选框，默认情况下<em>不会</em>选中该复选框。选择此选项将在对象的实例放置在房间中时从根本上改变对象的行为，因为这会切换对象的物理属性，并意味着其“传统”运动和碰撞功能不再有效（但仅当它所放置的房间也被标记为物理房间。请参见“<a href="../Room_Properties/Room_Properties.htm">房间编辑器属性</a>”部分。选中此选项后，“对象资源”窗口将为物理编辑器打开一个新的链接窗口：</p><p><img alt="Object Editor Physics" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Physics.png" />在开始编辑物理行为的值之前，最好先设置<strong>碰撞形状</strong>。使用“正常”碰撞系统，您的碰撞基于分配给对象的精灵的蒙版，但是启用了物理后<strong>，情况就不再如此</strong>。我们需要自己为对象<strong>分配一个碰撞形状</strong><strong>（通常称为夹具</strong>，有关更多信息，请参见<a href="../../GameMaker_Language/GML_Reference/Physics/Physics.htm">物理功能</a>），可以是您自己定义的圆形，矩形或多边形。单击“<strong>修改碰撞形状”</strong>按钮，将打开以下链接的窗口以编辑形状：</p><p><img alt="Object Editor Physics Shape Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_PhysicsShape.png" />这看起来类似于“<a href="../Paths.htm">路径编辑器”</a> ，并且功能大致相同。但是，根据您选择的遮罩，它可能会更具限制性：</p><ul class="colour"><li>如果有<strong>圆形</strong>蒙版，则只能拉出任何路径点以使圆直径更大或更小</li><li>如果您有<strong>矩形</strong>遮罩，则可以移动四个角中的任何一个，但是相应的四个角将自动调整位置以始终保持矩形</li><li>如果具有<strong>自定义</strong>（多边形）蒙版，则该蒙版必须具有最少3个，最多8个点，并且必须是凸形的（请参见下图）。</li></ul><p><img alt="Object Editor Physics Shape Type" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_PhysicsShape.png" />设置好形状后，您需要定义对象要具有的基本物理属性。通过更改以下参数进行配置：</p><p></p><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">密度</a></p><div class="droptext" data-targetname="drop-down"><p class="dropspot">事物的密度定义为每单位体积的质量，这基本上意味着有多少质量塞满了它所占据的空间。因此，球囊由于其质量小而占据较大的空间而具有低密度，而铅条由于其质量大而具有较高的密度而又仅占据很小的空间。在<span class="notranslate">GameMaker Studio 2</span> 2D物理世界中，将根据您输入的密度值以及为灯具定义的形状的表面积自动为您计算质量。这将直接影响固定装置的惯性以及其对碰撞和力的反应方式，因此，如果您制作的小形状具有高密度，它将具有非常大的质量（如铅条），但是如果您定义一个低密度的大形状，它将具有较小的质量（如气球）。</p><p class="dropspot">请注意，将密度设置为0将创建一个“静态”灯具，该灯具实质上是无限密集的，并且不受外力或碰撞的影响，除非在特殊情况下已将实例创建为<strong>运动学</strong>实例（请参见下文以获取更多详细信息）。</p><p class="dropspot"></p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">归还</a></p><div class="droptext" data-targetname="drop-down1"><p class="dropspot">在物理学中，恢复被定义为“物体或系统在弹性变形后返回其原始状态”，但是由于<span class="notranslate">GameMaker Studio 2</span>中的固定装置实际上是刚性物体并且不能变形，恢复实际上是一种表示如何进行恢复的方式。固定装置的“弹性”。此设置将影响对象与其他对象碰撞时“反弹”的程度，并且共同依赖于其他作用在实例上的力，例如重力和摩擦力。</p><p class="dropspot"></p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">碰撞组</a></p><div class="droptext" data-targetname="drop-down2"><p class="dropspot">默认情况下，所有物理对象的碰撞组均为0，这意味着它们将正常交互，这意味着它们<strong>必须具有碰撞事件才能进行交互</strong>（简单的注释将触发碰撞），否则不会发生碰撞被注册。但是，您也可以指定一个对象应该属于一个特定的，编号的<strong>碰撞组</strong>。通过将对象分配给<em>正</em>碰撞组（即，三个对象都在组“ <strong>2</strong> ”中），您就是在告诉<span class="notranslate">GameMaker Studio 2</span> ，这些对象的实例应<em>始终</em>发生碰撞，即使它们在碰撞事件中没有任何作用，也要遵守物理属性相反，如果您的对象具有<em>负的</em>碰撞组（即，四个对象分配了“ <strong>-1</strong> ”），则您要告诉<span class="notranslate">GameMaker Studio 2</span> ，这些对象<em>永不</em>应该碰撞，并且任何碰撞它们之间的事件将被忽略。</p><p class="note"><strong>注意</strong>：使用碰撞组会极大地增加物理系统所需的处理，并且仅在绝对必要时才使用碰撞组，并且应尽可能少地使用碰撞组。</p><p class="dropspot"></p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">线性阻尼</a></p><div class="droptext" data-targetname="drop-down3"><p class="dropspot">阻尼用于降低实例在房间中移动时的物理世界速度。原则上，这就像“真实”世界中与表面的摩擦，但是在<span class="notranslate">GameMaker Studio 2</span>物理系统中，摩擦实际上仅在两个具有碰撞形状（夹具）的实例接触时才应用。因此，您可以认为线性阻尼更像是“空气摩擦”，它会随着时间的推移逐渐减慢任何移动的物理实例，而无需与任何其他物理实例接触。</p><p class="dropspot"></p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">角阻尼</a></p><div class="droptext" data-targetname="drop-down4"><p class="dropspot">如果您考虑“现实世界”中的任何旋转物体，除非它具有电动机或在太空中，否则其旋转会由于外力的影响（例如机械摩擦或与周围空气或水的摩擦）而随着时间的流逝而减速它）。我们可以使用角度阻尼选项来模拟此效果并降低物理世界中实例的旋转速度，因为没有它，任何旋转的实例将继续无限旋转。</p><p class="dropspot"></p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">摩擦</a></p><div class="droptext" data-targetname="drop-down5"><p class="dropspot">摩擦力是抵抗材料元素彼此相对滑动的力，在<span class="notranslate">GameMaker Studio 2</span>物理世界中，摩擦力是由两个实例与物理夹具碰撞引起的动量损失。因此，当两个实例发生碰撞时，它们的运动会受到该值的影响，而高摩擦将导致动量损失大于低值。</p><p class="dropspot"></p></div><p></p><p>最后，还有三个可以标记为灯具开或关的额外选项： <strong>Sensor</strong> ， <strong>Start Awake</strong>和<strong>Kinematic</strong> 。这些标志中的每一个都将通过以下方式更改灯具的行为：</p><p></p><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#">传感器</a></p><div class="droptext" data-targetname="drop-down6"><p class="dropspot">通过选中此框，您可以告诉<span class="notranslate">GameMaker Studio 2</span>基本“忽略”对象的物理属性，但仍返回与周围对象的碰撞事件。这样，您可以拥有一个在房间中没有物理存在的实例，但是它可以对另一个实例（例如玩家）的碰撞做出反应，并依次执行某些操作（例如打开一扇门）或在另一个实例中触发某种动作放在房间里。</p><p class="note"><strong>注意</strong><strong>：仅在首次发生</strong>碰撞时，传感器固定装置才会触发碰撞事件，这意味着当两个物体继续重叠时（传统情况下会发生这种情况），您不会收到碰撞事件流。如果它们停止重叠并随后重叠，则将触发另一个碰撞事件。</p><p class="dropspot"></p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">开始清醒</a></p><div class="droptext" data-targetname="drop-down7"><p class="dropspot">默认情况下会对此进行检查，并表示它在放置房间的开始时的初始“状态”。通常，您希望它从一开始就处于唤醒状态（即：参与物理世界），但是有时由于物理模拟的突然开始，这可能导致某些不稳定性和不良影响。为了避免这些影响，您可以取消选中此标志，并且实例将在灯具处于睡眠状态时创建，并且除非有任何作用，否则它将不参与物理仿真。</p><p class="dropspot">请注意，当物理实例不再处于任何运动状态或与任何其他物理实例发生交互时，它们将被标记为“睡眠”，并且“睡眠”实例只是物理仿真当前尚未完全处理的实例（节省<a class="glossterm" data-glossterm="CPU开销" href="#">CPU开销</a>）。</p><p class="dropspot"></p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#">运动学</a></p><div class="droptext" data-targetname="drop-down8"><p class="dropspot">在基于物理的游戏中，某些情况下您想四处走动，但又不想受到重力等力的作用，也不想与动态物体碰撞而产生的力（例如，在平台游戏中移动平台） ）。对于此类对象，只需将固定装置的密度设置为0，就意味着物理学将假定该对象是<strong>静态的，</strong>并且对任何事物都不会产生任何反应。但是，选中此框将使静态对象<strong>运动</strong>，尽管它仍然不受碰撞和重力等影响，但现在可以使用适当的变量来移动或旋转它（请参见<a href="../../GameMaker_Language/GML_Reference/Physics/Physics_Variables/phy_position_x.htm"><span class="inline">phy_position_x</span></a>和<a href="../../GameMaker_Language/GML_Reference/Physics/Physics_Variables/phy_position_y.htm"><span class="inline">phy_position_y</span></a> ， 例如）。 </p><p></p></div><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">返回：<a href="../Objects.htm">对象编辑器</a></div><div style="float:right">下一页：<a href="Object_Variables.htm">对象变量</a></div></div></div><h5><span data-keyref="Copyright Notice">©版权所有<span class="notranslate">YoYo Games Ltd.</span> 2021保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
Physics Objects
-->
  <!-- TAGS
objects_physics
-->
</body>
</html>