<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>继续</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the continue function" />
  <meta name="rh-index-keywords" content="continue" />
  <meta name="search-keywords" content="continue" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>继续</h1>
  <p> <tt>继续</tt>语句的基本语法如下。</p>
  <p class="code">继续。</p>
  <p>如果在一个形成循环的语句中使用(<a href="for.htm"><tt>为</tt></a>, <a href="repeat.htm"><tt>重复</tt></a>, <a href="while.htm"><tt>while</tt></a>或 <a href="do___until.htm"><tt>do / until</tt></a>)，它将立即结束当前的
    它将立即结束当前的<a class="glossterm" data-glossterm="迭代" href="#">迭代</a>，并跳回到循环的起点，开始新的迭代，并省略循环中 <span class="inline">continue</span> 之后的任何代码。它也可以
    也可以用在 <a href="with.htm"><tt>与</tt></a>语句中使用，它将导致代码跳到下一个实例并再次运行。请注意，如果在这些情况之外使用<tt>continue</tt>，就会出现错误。</p>
  <p>下面是一个在<tt>for</tt>循环中使用的例子。</p>
  <p class="code">var _val = 0;<br> for (var i = 0; i &lt; 10; i += 1)<br> {
    <br> if (val_array[i] &lt;= 0)<br> {<br> continue;<br> }<br> _val += val_array[i];<br> }
    <br> draw_text(32, 32, &quot;正值总数=&quot; + string(_val))。</p>
  <p>下面是一个在 <span class="inline">while</span> 循环中使用的例子。</p>
  <p class="code">var file = file_text_open_read(&quot;Game_Data.txt&quot;);<br> var _num = 0;<br> while (!file_text_eof(file))<br> {<br> var _s = file_text_readln(file);<br> if (_s ==&quot; &quot;)<br> {<br> continue;<br> }<br> str[num++] = _s;<br> }<br> file_text_close(file)。
  </p>
  <p>下面是一个在 <span class="inline">do / until</span> 循环中使用的例子。</p>
  <p class="code">做<br> {
    <br> var _x = random(room_width);<br> var _y = random(room_height);<br> if (instance_position(_x, y, obj_Enemy)<br> {
    <br> 继续。
    <br> }
    <br> instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br> }
    <br> 直到（instance_count(obj_Enemy) &gt;= 10）。</p>
  <p>下面你可以找到一个在 <span class="inline">repeat</span> 循环中使用的例子。</p>
  <p class="code">repeat(10)<br> {<br> var _x = random(room_width);<br> var _y = random(room_height);<br> if (instance_position(_x, y, obj_Enemy)<br> {
    <br> 继续。
    <br> }
    <br> instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br> }</p>
  <p>最后，在 <span class="inline">with</span> 声明中使用的一个例子。</p>
  <p class="code">with (obj_Enemy_Parent)<br> {<br> if (object_index == obj_Enemy_InDestructible)<br> {<br> continue;<br> }<br> hp -= 100;<br> if (hp &lt;= 0)<br> {<br> instance_destroy();<br> }<br> }</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Language_Features.htm">语言特点</a></div>
        <div style="float:right">下一页:<a href="exit.htm">退出</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
continue
-->
  <!-- TAGS
continue
-->
</body>
</html>