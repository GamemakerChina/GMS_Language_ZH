<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>对象_是股东</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function object_is_ancestor" />
  <meta name="rh-index-keywords" content="object_is_ancestor" />
  <meta name="search-keywords" content="object_is_ancestor" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>对象_是股东</h1>
  <p>这个函数可以用来检查一个对象，看它是否是另一个对象的祖先。所以，两个参数都需要是对象的索引，而<i>不是</i>实例的id，并且第一个参数总是你想找出的对象的
    第一个参数总是你想找出它是否是第二个参数的孩子，第二个参数总是你想检查的对象的祖先（父）。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">object_is_ancestor(obj, par)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>obj</td>
        <td>被检查的对象作为子对象。</td>
      </tr>
      <tr>
        <td>杆数</td>
        <td>被检查的对象作为祖先（父）。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">布尔型</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">如果 object_is_ancestor(object_index, obj_Enemy)<br> {
    <br> instance_destroy()。
    <br> }
  </p>
  <p>上面的代码检查运行代码的实例是否是对象 &quot;obj_Enemy &quot;的子代，如果是，它就被销毁。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Objects.htm">物体</a></div>
        <div style="float:right">下一页:<a href="object_set_mask.htm">object_set_mask</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
object_is_ancestor
-->
  <!-- TAGS
object_is_ancestor
-->
</body>
</html>