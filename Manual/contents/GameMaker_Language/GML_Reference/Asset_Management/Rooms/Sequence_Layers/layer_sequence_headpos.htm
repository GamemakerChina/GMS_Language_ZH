<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>层_序列_头部位置</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function layer_sequence_headpos" />
  <meta name="rh-index-keywords" content="layer_sequence_headpos" />
  <meta name="search-keywords" content="layer_sequence_headpos" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>层_序列_头部位置</h1>
  <p>通过这个函数，你可以将一个序列元素的<a class="glossterm" data-glossterm="弹头" href="#">播放头</a>的位置设置为一个特定的帧。你提供序列元素的ID，如由 <a href="layer_sequence_create.htm"><tt>layer_sequence_create()</tt></a>    返回的序列元素ID，或由一个<a href="../General_Layer_Functions/General_Layer_Functions.htm">层元素函数</a>返回的序列元素ID，以及要设置的新位置。注意，这个位置是以<i>帧</i>为单位的，如果你设置的值大于总的帧数
    (或小于0)，那么实际的最终播放头的位置将取决于已经选择的序列播放的类型，遵循这些规则。</p>
  <ul class="colour">
    <li><strong>没有循环</strong>。播放头将夹在循环的末端（如果给定的值是负的，则夹在开头）。</li>
    <li><strong>循环播放</strong>。播放头将回到序列的开头，再加上额外的帧，例如：如果你在一个30帧的序列上将播放头设置为第45帧的位置，实际播放头的位置最终将是15。如果你给
      负值，那么序列的播放头将以相反的方向绕行。</li>
    <li>乒乓式<strong>循环</strong>。播放头将前进到最后，然后返回超过总帧长的额外帧数，反转播放方向，例如。如果序列是30帧，你把播放头设置为
      到40，最终播放头的位置将是20，方向将是相反的（向下到0）。注意，你<i>永远不</i>应该给一个负值用于序列的乒乓播放，因为它可能会产生未定义的结果。</li>
  </ul>
  <p>以这种方式设置磁头位置不会停止播放，除非暂停，否则序列将从新的播放磁头位置继续。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">layer_sequence_headpos(sequence_element_id, position)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>sequence_element_id</td>
        <td>目标序列元素的唯一ID值</td>
      </tr>
      <tr>
        <td>位置</td>
        <td>在序列中的位置（以帧为单位），以设置播放头的位置（可以是一个十进制的值）。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">不适用</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var a = layer_get_all_elements(layer);<br> for (var i = 0; i &lt; array_length(a); i++; )<br> {
    <br> if layer_get_element_type(a[i]) == layerelementtype_sequence<br> {
    <br> layer_sequence_headpos(a[i], 0)<br> }
    <br> }
  </p>
  <p>上面的代码得到了分配给运行该代码的实例层的所有元素的ID。然后，该代码检查是否有返回的元素是序列资产，如果是，则其播放头的位置被设置为0。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Sequence_Layers.htm">序列层数</a></div>
        <div style="float:right">下一页:<a href="layer_sequence_headdir.htm">层_序列_头</a>目录</div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
layer_sequence_headpos
-->
  <!-- TAGS
layer_sequence_headpos
-->
</body>
</html>