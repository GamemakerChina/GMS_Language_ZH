<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>序列实例结构</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining The Sequence Instance Struct" />
  <meta name="rh-index-keywords" content="Sequence Instance Struct" />
  <meta name="search-keywords" content="The Sequence Instance Struct,seqdir_right,seqdir_left,sequence,headPosition,headDirection,speedScale,paused,finished,elementID,activeTracks,matrix,posx,posy,scalex,scaley,xorigin,yorigin,width,height,imageindex,imagespeed,colourMultiply,gain,pitch,track,parent" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>序列实例结构</h1>
  <p>一个序列，当放置在一个房间时，被作为一个<strong>元素</strong>放置在该层上，这个元素包含一个<strong>序列实例</strong>。这个序列实例在其<a href="../../../../GML_Overview/Structs.htm">结构</a>中会有以下属性。</p>
  <ul class="colour">
    <li><tt>序列</tt>。这是<b>序列对象</b>结构的ID，序列实例是从该结构中创建的（更多细节见<a href="The_Sequence_Object_Struct.htm">这里</a>）。你可以获取或设置这个结构，从而改变实例引用的基
      实例所引用的基础序列。</li>
    <li><tt>headPosition</tt>。这是该序列实例的当前<a class="glossterm" data-glossterm="弹头" href="#">播放头</a>的位置（以帧为单位）。你可以获得或设置这个值，但要注意，把它设置成一个大于或小于
      大于或小于当前定义的播放区域将产生不同的效果，这取决于为序列设置的播放类型。参见 <a href="../../Rooms/Sequence_Layers/layer_sequence_headpos.htm"><tt>layer_sequence_headpos()</tt></a>获取更多信息。</li>
    <li><tt>headDirection</tt>。这是该序列实例的当前播放方向。你可以使用以下常量来获取或设置这个值（注意，你可以使用层函数 <a href="../../Rooms/Sequence_Layers/layer_sequence_get_headdir.htm"><tt>layer_sequence_get_headdir()</tt></a>和
      <a href="../../Rooms/Sequence_Layers/layer_sequence_headdir.htm"><tt>layer_sequence_headdir()</tt></a>来获取或设置这个值，而不需要直接访问该结构）。)</li>
  </ul>
  <table>
    <tbody>
      <tr>
        <th>恒定</th>
        <th>描述</th>
        <th>价值</th>
      </tr>
      <tr>
        <td>顺序排列_右</td>
        <td>该序列将按照从左到右的增量顺序播放帧数</td>
        <td>1</td>
      </tr>
      <tr>
        <td>顺序排列_左</td>
        <td>该序列将按照从右到左的递减顺序播放帧数</td>
        <td>-1</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <ul class="colour">
    <li><tt>speedScale</tt>。此属性可用于获取或设置播放速度比例。速度刻度是一个<i>乘数</i>，其中1是默认的回放速度，小于1的值会减慢回放速度，大于1的值会加速回放。
      大于1的值将加快播放速度，例如：0.5的值将是一半的播放速度，而2的值将是两倍的播放速度。注意，你可以使用层函数 <a href="../../Rooms/Sequence_Layers/layer_sequence_get_speedscale.htm"><tt>layer_sequence_get_speedscale()</tt></a>和
      <a href="../../Rooms/Sequence_Layers/layer_sequence_speedscale.htm"><tt>layer_sequence_speedscale()</tt></a>来获取或设置这个值，而不需要直接访问该结构。</li>
    <li><tt>暂停了</tt>。你可以检查这个属性，看看一个序列是否已经暂停，如果已经暂停，它将为<tt>真</tt>，否则为<tt>假</tt>。这是一个<b>只读</b>的属性，但是你可以使用层函数 <a href="../../Rooms/Sequence_Layers/layer_sequence_pause.htm"><tt>layer_sequence_pause()</tt></a>来
      暂停播放，并且 <a href="../../Rooms/Sequence_Layers/layer_sequence_play.htm"><tt>layer_sequence_play()</tt></a>如果需要的话，可以再次恢复播放。你也可以使用layer函数检查这个属性 <a href="../../Rooms/Sequence_Layers/layer_sequence_is_paused.htm"><tt>layer_sequence_is_paused()</tt></a>检查这个属性，而不是
      而不是直接检查该结构中的属性。</li>
    <li><tt>完成</tt>。你可以检查这个属性来查看一个序列是否已经完成了播放，如果它已经完成了播放，则返回<tt>true</tt>，否则返回<tt>false</tt>。这是一个<b>只读</b>属性，只有那些没有被设置为循环或乒乓的轨道才会返回<tt>真</tt>。你也可以使用layer函数来检查这个属性 <a href="../../Rooms/Sequence_Layers/layer_sequence_is_finished.htm"><tt>layer_sequence_is_finished()</tt></a>来检查该属性，而不是直接在结构中检查该属性
      而不是直接检查结构中的属性。</li>
    <li><tt>elementID</tt>：这个属性持有序列<i>元素</i>的ID。这个iD是一个简单的识别值，与房间编辑器中的层相关联，然后它可以与适当的<a href="../../Rooms/General_Layer_Functions/General_Layer_Functions.htm">层函数</a>一起使用，以便
      找到序列被分配到的层，或改变某些序列属性，而不必处理结构。</li>
    <li><tt>activeTracks</tt>。此属性将持有一个 &quot;评估 &quot;结构数组，包含序列<b>中</b>每个资产<b>轨道</b>（图形、序列、音频等）的当前状态信息。这些只是顶层的轨道。
      并且返回的数组是<b>只读</b>的。关于每个数组条目中返回的资产轨道结构的内容，请参见下面的章节。</li>
  </ul>
  <p>下面的列表包含了访问轨道结构（如上文所解释的父序列结构的<tt>activeTracks</tt>属性所返回）时可能可用的属性。每个资产轨道结构都可能具有以下部分或全部属性
    以下属性，具体取决于该轨道所引用的资产类型（注意，您可以获取或设置所有这些属性，指定为只读的除外），返回的所有值均为<i>当前播放头的位置</i>。</p>
  <ul class="colour">
    <li><tt>矩阵</tt>。这是用于绘制轨迹（精灵、实例和序列轨迹）的变换矩阵。</li>
    <li><tt>posx</tt>。资产在序列中沿X轴的位置，用于当前播放头位置的轨道（所有资产）。</li>
    <li><tt>posy</tt>：资产在序列中沿Y轴的位置，用于当前播放头位置的轨道（所有资产）。</li>
    <li><tt>scalex</tt>：序列中资产在当前播放头位置的轨道上沿X轴的比例（精灵、实例和序列轨道）。</li>
    <li><tt>scaley</tt>：序列中资产在当前播放头位置的轨道沿Y轴的比例（精灵、实例和序列轨道）。</li>
    <li><tt>xorigin</tt>。轨道资产的X原点（所有资产）。</li>
    <li><tt>yorigin</tt>。轨迹中资产的Y原点（所有资产）。</li>
    <li><tt>width</tt>: 轨道（精灵、实例和序列轨道）的资产宽度（像素）。</li>
    <li><tt>高度</tt>。轨道（精灵、实例和序列轨道）的资产高度（像素）。</li>
    <li><tt>imageindex</tt>。在当前播放头的位置上，序列中轨道上资产的图像索引（精灵和实例轨道）。</li>
    <li><tt>imagespeed</tt>：序列中资产在当前播放头位置（精灵和实例轨道）的图像速度。</li>
    <li><tt>colorMultiply</tt>。在当前播放头的位置（精灵、实例和序列轨道），序列中轨道上的资产的颜色倍增值。这个值将是一个<a href="../../../../GML_Overview/Arrays.htm">数组</a>，包含
      格式为[A, R, G, B]的四个<a class="glossterm" data-glossterm="ARGB" href="#">ARGB</a>值。请注意，每个组件的值都在0和1之间，其中0对应的是HEX值#00，1对应的是HEX
      值#FF（0-255，如序列编辑器中的颜色乘法轨道的颜色选择器中所示）。</li>
    <li><tt>增益</tt>。当前播放头位置的轨道的增益（音量）（音频轨道）。</li>
    <li><tt>pitch</tt>（音高）。当前播放头位置的音轨的音高（音频轨道）。</li>
    <li><tt>轨迹</tt>。该轨道所基于的轨道数据结构（所有资产，为<b>只读</b>值）。</li>
    <li><tt>parent</tt>：轨道的父序列实例ID（所有资产，<b>只读</b>值）。</li>
    <li><tt>activeTracks</tt>。这是资产轨道包含的每个参数轨道的评估结构数组（所有资产，<b>只读</b>值）。数组中每个结构的内容都列在参数<a href="The_Track_Struct.htm">轨道结构</a>部分。</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Sequences.htm">序列</a></div>
        <div style="float:right">下一步。<a href="The_Track_Struct.htm">轨道结构</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
The Sequence Instance Struct
seqdir_right
seqdir_left
sequence
headPosition
headDirection
speedScale
paused
finished
elementID
activeTracks
matrix
posx
posy
scalex
scaley
xorigin
yorigin
width
height
imageindex
imagespeed
colourMultiply
gain
pitch
track
parent
-->
  <!-- TAGS
sequence_instance
-->

</body></html>