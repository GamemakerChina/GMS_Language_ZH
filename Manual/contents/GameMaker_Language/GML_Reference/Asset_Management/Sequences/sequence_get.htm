<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>序列_获取</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining function sequence_get" />
  <meta name="rh-index-keywords" content="sequence_get" />
  <meta name="search-keywords" content="sequence_get" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>序列_获取</h1>
  <p>通过这个函数，你可以从一个序列资产索引中检索序列对象<a href="../../../GML_Overview/Structs.htm">结构</a>。你提供在资产浏览器中定义的序列的资产索引，并且该
    函数将返回可以被访问的序列对象结构，如果序列不存在或给定的资产索引不是一个序列，则返回-1。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">sequence_get(sequence_index)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>序列_索引</td>
        <td>资产浏览器中定义的序列索引。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">结构或-1</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var _seq = sequence_get(seq_Logo);<br> seq.loopmode = seqplay_pingpong;</p>
  <p>上述代码从序列对象 &quot;seq_Loop &quot;中检索序列对象结构，然后为序列设置循环模式（所有随后创建的序列实例现在将使用该循环模式）。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Sequences.htm">序列</a></div>
        <div style="float:right">下一篇:<a href="sequence_track_new.htm">sequence_track_new</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
sequence_get
-->
  <!-- TAGS
sequence_get
-->
</body>
</html>