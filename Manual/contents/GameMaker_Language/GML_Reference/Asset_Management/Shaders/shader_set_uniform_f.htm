<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>shader_set_uniform_f</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function shader_set_uniform_f" />
  <meta name="rh-index-keywords" content="shader_set_uniform_f" />
  <meta name="search-keywords" content="shader_set_uniform_f" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span class="notranslate">shader</span>_set_uniform_f</h1>
  <p>通过这个函数，你可以设置一个<span class="notranslate">着色器</span>常量的值（或数值）。你必须在之前通过函数获得常量的 &quot;句柄&quot;，并在此基础上设置常量。 <a href="shader_get_uniform.htm"><tt><span class="notranslate">shader</span>_get_uniform()</tt></a>得到常量的 "句柄"，并且
    你必须知道它是什么类型的常量，以便向它传递正确数量的浮点值，即：如果你有一个<tt>vec2</tt>，你需要向该函数传递两个值。</p>
  <p>上述规则的一个例外是在处理32bit颜色值的时候。你可以向<span class="notranslate">着色器</span>传递多达8个32位的颜色值，它们会自动为你转换为0-1的vec4值。
   <span class="notranslate">shader</span>常量名称<tt>in_Colour</tt>，用于单个颜色，或者<tt>in_Colour0</tt>,<tt>in_Colour1</tt>, 等等...直到<tt>in_Colour7</tt>用于多个输入值。下面的
    例子显示了在<span class="notranslate">着色器</span>本身中的效果。</p>
  <p class="code">    //单色<br> 属性 vec2 in_Position;<br> 属性 vec4 in_Colour;<br> 属性 vec2 in_TextureCoord;<br>
    <br> //多色<br> 属性 vec2 in_Position;<br> 属性 vec4 in_Colour0;<br> 属性 vec4 in_Colour1;<br> 属性 vec2 in_TextureCoord;</p>
  <p>还要注意的是，如果你想使用4字节的颜色格式做压缩法线等，那么你也必须使用上述相同的 &quot;in_Colour &quot;格式。</p>
  <p class="note"><b></b><b>注意</b>：所有制服必须<b>在</b>调用函数<b>后</b>设置 <span style="font-size:1px;"><a href="shader_set.htm"><tt style="font-size: 14px"><span class="notranslate">shader</span>_set()</tt></a></span>之后，并在调用 
    <span style="font-size:1px;"><a href="shader_reset.htm"><tt style="font-size: 14px"><span class="notranslate">shader</span>_reset()</tt></a></span>.</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code"><span class="notranslate">shader</span>_set_uniform_f(handle, value1 [, value2, value3, value4])。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>处理</td>
        <td>要设置的<span class="notranslate">着色器</span>常量的句柄。</td>
      </tr>
      <tr>
        <td>价值1 ... 价值4</td>
        <td>将<span class="notranslate">着色器</span>常量设置为的浮点值（或数值）。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">不适用</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code"><span class="notranslate">shader</span>_set<span class="notranslate">(shader</span>_Glass);<br> <span class="notranslate">shader</span>_params =<span class="notranslate">shader</span>_get_uniform<span class="notranslate">(shader</span>_glass, &quot;u_vParams&quot;);<br> shader_set<span class="notranslate">_uniform</span>_f(shader_<span class="notranslate">params, 0</span>.1, 0.8, 0.25);<br> draw_self() 。
    <br> <span class="notranslate">shader</span>_reset()。
  </p>
  <p>上面的代码将获得<span class="notranslate">着色器</span>常量 &quot;u_vParams&quot;（一个vec3）的句柄，<tt>然后</tt>将该常量设置为给定值。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">背面。 <a href="Shaders.htm"><span class="notranslate">着色器</span></a></div>
        <div style="float:right">下一页:<a href="shader_set_uniform_f_array.htm"><span class="notranslate">shader</span></a>_set_uniform_f_array</div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">shader</span>_set_uniform_f
-->
  <!-- TAGS
<span class="notranslate">shader</span>_set_uniform_f
-->
</body>
</html>