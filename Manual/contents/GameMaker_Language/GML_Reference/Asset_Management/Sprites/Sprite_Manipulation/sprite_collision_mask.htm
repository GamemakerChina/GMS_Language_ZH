<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>精灵碰撞掩码</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function sprite_collision_mask" />
  <meta name="rh-index-keywords" content="sprite_collision_mask" />
  <meta name="search-keywords" content="sprite_collision_mask" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>精灵碰撞掩码</h1>
  <p>通过这个函数，你可以设置一个精灵应该有的碰撞遮罩的属性。如果你选择自动（0）或全图像（1）作为边界框模式，那么单个边界框的值可以设置为0。
    你将不得不设置这些值。不同的边框值总是相对于精灵的左上角（不管x和y原点是什么），这被认为是位置（0，0）。</p>
  <p>设置掩码的种类可以设置掩码本身的一般形状，但请注意，除了矩形掩码以外的任何东西在解决碰撞时都需要更多的处理能力，性能也会随之下降。一般来说，你应该只在
    使用矩形以外的掩码类型，除非是绝对必要。</p>
  <p class="note"><b>注意</b>：这个函数不允许<b>旋转的矩形</b>碰撞掩码种类。</p>
  <p>可以设置的掩码种类将是以下常数之一。</p>
  <table>
    <tbody>
      <tr>
        <th>恒定</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><tt>bboxkind_rectangular</tt></td>
        <td>一个长方形（非旋转）的矩形碰撞面具形状</td>
      </tr>
      <tr>
        <td><tt>bboxkind_ellipse</tt></td>
        <td>一个椭圆的碰撞掩码形状</td>
      </tr>
      <tr>
        <td><tt>bboxkind_diamond</tt></td>
        <td>一个钻石碰撞的面具形状</td>
      </tr>
      <tr>
        <td><tt>bboxkind_precise</tt></td>
        <td>一个精确的碰撞掩码，该掩码将符合精灵的非透明像素，基于给出的公差值（见下文）。</td>
      </tr>
    </tbody>
  </table>
  <p><br> 最后，公差用于定义遮罩的精确程度（当与 &quot;全图 &quot;遮罩一起使用时，这将没有影响），公差为0意味着遮罩将跟随透明度超过0的每一个像素。
    而其他值将根据像素的透明度来改变碰撞遮罩的周长。</p>
  <p class="note"><b>注意</b>：这个函数只<b>对位图</b>精灵有用，对SWF或JSON（Spine）精灵不起作用。</p>
  <p class="note"><b>注意</b>：这个函数只对添加的精灵或重复的精灵起作用，而<b>不是</b>直接对预制资源起作用。你可以用以下函数来复制精灵 <span style="font-size:1px;"><a href="sprite_duplicate.htm"><tt style="font-size: 14px">sprite_duplicate()</tt></a></span>.</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">sprite_collision_mask(ind, sepmasks, bboxmode, bbleft, bbtop, bbright, bbbottom, kind, tolerance) 。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>ind</td>
        <td>要设置边界框的精灵的索引。</td>
      </tr>
      <tr>
        <td>隔离罩</td>
        <td>是否为精灵的每个子图像创建碰撞掩码<tt>（true</tt>），或为所有图像创建一个掩码<tt>（false</tt>）。</td>
      </tr>
      <tr>
        <td>bboxmode</td>
        <td>使用什么类型的边界框。0=自动，1=全图像，2=用户定义。</td>
      </tr>
      <tr>
        <td>bbleft</td>
        <td>包围盒的最大左侧位置。</td>
      </tr>
      <tr>
        <td>bbtop</td>
        <td>包围盒的最大顶部位置。</td>
      </tr>
      <tr>
        <td>bbright</td>
        <td>包围盒的最大右边位置。</td>
      </tr>
      <tr>
        <td>bbbottom</td>
        <td>包围盒的最大底部位置。</td>
      </tr>
      <tr>
        <td>种类</td>
        <td>掩码的种类，一个常数（见描述中的表格）。</td>
      </tr>
      <tr>
        <td>容忍</td>
        <td>表示透明度值的公差（0=无公差，255=全公差）。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回</h4>
  <p class="code">不适用</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">spr = sprite_add(&quot;player_5.png&quot;, 16, true, true, 0, 0);<br> sprite_collision_mask( spr, true, 1, 0, 0, 0, 0, 0);</p>
  <p>上述代码从外部来源加载一个精灵，并在变量 &quot;spr &quot;中存储新的索引。然后，该代码将新的精灵设定为对其每个子图像都有一个精确的碰撞掩码。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">回来了。<a href="Sprite_Manipulation.htm">雪碧操纵</a></div>
        <div style="float:right">下一页:<a href="sprite_nineslice_create.htm">幽灵_nineslice_create</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
sprite_collision_mask
-->
  <!-- TAGS
sprite_collision_mask
-->
</body>
</html>