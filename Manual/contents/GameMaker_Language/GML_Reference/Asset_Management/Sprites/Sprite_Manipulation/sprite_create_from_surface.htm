<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>从表面创建精灵</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function sprite_create_from_surface" />
  <meta name="rh-index-keywords" content="sprite_create_from_surface" />
  <meta name="search-keywords" content="sprite_create_from_surface" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>从表面创建精灵</h1>
  <p>通过这个函数，你可以从先前初始化的曲面中创建一个精灵（曲面索引ID值会在你用 <a href="../../../Drawing/Surfaces/surface_create.htm"><tt>surface_create()</tt></a>).你在函数中输入的x和
    y坐标应该是相对于<i>曲面</i>的(0,0)位置（左上角），而不是游戏窗口（如果你有一个激活的视图）。宽度和高度参数的单位是像素。
    定义要使用的曲面部分的宽度和高度。</p>
  <p>将 &quot;removeback &quot;参数设置为 &quot;true &quot;将从精灵中删除一个颜色，方法是检查精灵<i>左下角像素</i>的颜色，然后将其作为要删除的颜色。</p>
  <p>如果你选择了 &quot;removeback &quot;选项，你可能还希望GameMaker<span class="notranslate">Studio 2</span>通过将 &quot;smooth &quot;参数设置为true来<span class="notranslate">平滑</span>精灵的边缘。这样做的目的是在精灵的边缘创建一个半透明的边框。
    的边缘创建一个半透明的边框，然后把它的背景去掉。</p>
  <p>最后，你还可以指定精灵的X和Y<i>原点</i>。这是精灵 &quot;固定 &quot;在使用它的实例上的点，并且总是相对于一个精灵子图像的左上角0,0计算。所以。
    例如，一个32×32像素的精灵，这些值设置为(16,16)，它的原点将在中心。</p>
  <p>默认情况下，所有新的精灵都会自动计算其边界框（确切的边界框取决于精灵的大小和透明度），但你可能希望对此进行自定义，在这种情况下，你也应该使用函数 <a href="sprite_collision_mask.htm"><tt>sprite_collision_mask()</tt></a>.</p>
  <p class="note"><b>注意：</b>当你在<span class="notranslate">GameMaker Studio 2</span>中用这个方法创建一个精灵时，你必须记得在不再需要它时再次删除它（用 <a href="sprite_delete.htm"><tt>sprite_delete()</tt></a>)，否则会有内存泄漏的风险，这将使你的游戏变慢并最终崩溃。
    减慢速度并最终使你的游戏崩溃。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">sprite_create_from_surface（index, x, y, w, h, removeback, smooth, xorig, yorig）。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>指数</td>
        <td>要创建的表面的索引。</td>
      </tr>
      <tr>
        <td>x</td>
        <td>要复制的X位置。</td>
      </tr>
      <tr>
        <td>y</td>
        <td>要复制的y位置。</td>
      </tr>
      <tr>
        <td>w</td>
        <td>要复制的区域的宽度（从x位置开始）。</td>
      </tr>
      <tr>
        <td>h</td>
        <td>要复制的区域的高度（从y位置开始）。</td>
      </tr>
      <tr>
        <td>撤回</td>
        <td>表示是否使所有具有背景颜色的像素（左下角的像素）透明。</td>
      </tr>
      <tr>
        <td>顺利</td>
        <td>表示是否要平滑边缘。</td>
      </tr>
      <tr>
        <td>原产地</td>
        <td>指明原点在精灵中的X位置。</td>
      </tr>
      <tr>
        <td>原住民</td>
        <td>表示原点在精灵中的y位置。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回</h4>
  <p class="code">实数（唯一的精灵ID值</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var surf;<br> surf = surface_create(32, 32);<br> surface_set_target(surface);
    <br> draw_clear_alpha(c_black, 0);<br> draw_sprite(spr_Body, 0, 0, 0);<br> draw_sprite(spr_Clothes, 0, 0, 0);<br> draw_sprite(spr_Hair, 0, 0, 0);<br> spr_custom = sprite_create_from_surface(surface, 0, 0, 32, 32, true, true, 16, 16);<br> surface_reset_target() 。
    <br> surface_free(surface)。
  </p>
  <p>上面的代码创建了一个表面，并将其索引存储在本地变量 &quot;surf &quot;中。然后，它以该表面为目标，将其清除，并在其上绘制几个精灵。最后，它从绘制在表面上的复合图像中创建一个新的精灵，并将其索引分配给 "spr_C"。
    创建一个新的精灵，并将其索引分配给 &quot;spr_Custom&quot;，然后释放该表面所使用的内存。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">回来了。<a href="Sprite_Manipulation.htm">雪碧操纵</a></div>
        <div style="float:right">下一页:<a href="sprite_add_from_surface.htm">从表面添加精灵</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
sprite_create_from_surface
-->
  <!-- TAGS
sprite_create_from_surface
-->
</body>
</html>