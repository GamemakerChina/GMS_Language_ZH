<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_get</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for http_get" />
  <meta name="rh-index-keywords" content="http_get" />
  <meta name="search-keywords" content="http_get" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>http_get</h1>
  <p>通过这个函数，你连接到指定的URL，以便检索信息。由于这是一个异步函数，<span class="notranslate">GameMaker Studio 2</span>在等待回复时不会阻塞，但会继续运行，除非它得到回调信息。这个
    信息将以字符串的形式出现，并将在任何实例中触发一个在其对象属性中定义的<b>异步事件</b>。你还应该注意，HTTP请求参数（当你提交一个URL时，有时会 &quot;附加 &quot;到URL的末尾）。
    当你在网页上提交一个表单时，有时会 "附加 "到URL的末尾）在使用这个函数时是完全可以接受的，例如：。</p>
  <p class="code">http_get(&quot;http://www.<span class="notranslate">YoYoGames</span>.com/logon?username=&quot;+name)。</p>
  <p>将把变量 &quot;name &quot;中的字符串传递给服务器，并从该URL中获取数据。因此，从本质上讲，任何时候需要从客户端向服务器传递一个简单、简短的数据，这将是合理的选择
    作为使用的函数。</p>
  <p class="note"><b>注意</b>：你应该知道，由于浏览器的XSS保护，从跨域加载资源的请求和尝试会被阻止，并可能出现返回空白结果。请参阅<a href="HTTP.htm">跨域问题</a>一节，了解更多细节。</p>
  <p>这个函数将产生多个 &quot;回调&quot;，这些回调被任何HTTP<a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">事件</a>所接收。这些将产生一个 <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><tt>DS地图</tt></a>    (更常见的是 &quot;字典&quot;)，它是这个事件独有的，并被存储在特殊变量 <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a>.这个DS地图将包含
    不同的值，取决于是否有数据被返回。例如，如果你请求了一个文件，事件将在每个数据包被接收时多次触发，这样你就可以显示一个进度条，比如说。一般的
    DS地图的一般结构如下。</p>
  <ul class="colour">
    <li><b>id:从 </b>命令中返回的ID。如果你发出了一系列的<tt>http_</tt>请求，那么你需要知道你得到的是哪一个回复，因此你将使用这个值与你最初发送请求时存储的值进行比较，以找到正确的答案。
      的值进行比较，以找到正确的那一个。</li>
    <li><b>status:错 </b>误时返回一个小于0的值，完成时返回0，接收数据包时返回1（详见下文）。</li>
    <li><b>结果。 </b>收到的数据（只有字符串）。</li>
    <li><b>url。 </b>你要求的完整的URL。</li>
    <li><b>http_status。 </b>原始的http状态代码（如果有的话）。这将返回大多数浏览器的标准网络状态代码，例如：304表示 &quot;未修改 &quot;或204表示 &quot;无内容&quot;，等等。</li>
  </ul>
  <p>如果有多个数据包被返回给你的游戏，回调 &quot;状态 &quot;键将返回1，在这种情况下，DS地图将有以下额外的键。</p>
  <ul class="colour">
    <li><b>&quot;contentLength&quot;。 </b>这是网络服务器说你应该期望收到的文件的大小（如果服务器不返回这个数据，可能是-1）。</li>
    <li><b>&quot;sizeDownloaded&quot;。 </b>已经下载的数据的大小。</li>
  </ul>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">http_get(url)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>网址</td>
        <td>你希望获得信息的服务器的网络地址</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">真实的</p>
  <p> </p>
  <h4>扩展实例。</h4>
  <p> <tt>http_get()</tt>函数可以从任何事件中调用，由于它是异步的，所以回调可以是即时的，也可以是几秒钟的。调用该函数很简单，看起来就像这样。</p>
  <p class="code">get = http_get(&quot;http://www.MacSweeneyGames.com/logon?username=&quot; + name);</p>
  <p>上面的代码将把变量 &quot;name &quot;中的字符串传递给给定的服务器，并从该URL中获取数据，触发一个包含async_load DS地图的Async事件（async_load地图的索引将被存储在
    变量 &quot;get &quot;中，这样你就可以检查出正确的回调）。)触发的Async事件将是<b>HTTP</b>子事件，在该事件中，你会有以下内容。</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == get<br> {
    <br> if ds_map_find_value(async_load, &quot;status&quot;) == 0<br> {
    <br> r_str = ds_map_find_value(async_load, &quot;result&quot;);<br> }
    <br> else
    <br> {
    <br> r_str = &quot;null&quot;;<br> }
    <br> }
  </p>
  <p>上面的代码将首先检查已经创建的DS地图的ID，然后检查回调的 &quot;状态&quot;。如果该值等于0（表示成功），那么回调的结果将被存储在一个变量中供将来使用。
    否则，该变量将被设置为一个默认值（在这里是 &quot;null&quot;）。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back:<a href="HTTP.htm">HTTP</a></div>
        <div style="float:right">下一篇:<a href="http_get.htm">http_get_file</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
http_get
-->
  <!-- TAGS
http_get
-->
</body>
</html>