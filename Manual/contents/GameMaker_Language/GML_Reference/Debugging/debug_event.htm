<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>debug_event</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for debug_event" />
  <meta name="rh-index-keywords" content="debug_event" />
  <meta name="search-keywords" content="debug_event" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>debug_event</h1>
  <p>这个函数生成一个自定义的调试事件，当游戏在<a href="../../../Introduction/Debugging.htm">调试模式</a>下运行时，该事件将显示在调试器的图形视图中。如果你要求在<i>非</i>调试模式下显示信息，那么你应该使用
    模式时显示信息，那么你应该使用 <a href="show_debug_message.htm"><tt>show_debug_message()</tt></a>.值得注意的是，该函数还将接受两个保留字符串，以帮助使用外部应用程序如<span class="notranslate">Visual Studio</span>进行调试。这两个
    字符串是。</p>
  <ul class="colour">
    <li><tt>&quot;OutputDebugOn&quot; -</tt> 这将启用对目标<tt>的OutputDebugString的</tt>调用。 <b><span class="notranslate">窗口</span></b>目标，这意味着所有的调试输出--你在输出窗口看到的一切--都可以被<span class="notranslate">Visual Studio</span>或第三方应用程序查看。</li>
    <li>&quot;<tt>BreakOnError&quot; -</tt> 这个选项只适用于Windows<b><span class="notranslate">YYC构建</span></b>，意味着如果运行时<span class="notranslate">检测到</span>错误，项目将不<i>显示</i>通常的代码错误屏幕，而只是继续进行并崩溃。这允许你
      在<span class="notranslate">Visual Studio</span>中看到堆栈跟踪，如果进行调试的话。</li>
  </ul>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">debug_event(string)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>绳子</td>
        <td>要使用的自定义调试事件字符串。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">不适用</p>
  <p> </p>
  <h4><b>例子。</b></h4>
  <p class="code">if !surface_exists(global.EffectsSurface)<br> {
    <br> debug_event(&quot;重新创建效果表面&quot;);<br> global.EffectsSurface = surface_create(room_width, room_height);<br> }</p>
  <p>上面的代码检查表面是否存在，如果不存在，就会在调试器的图形视图中触发一个调试事件（游戏必须在调试模式下运行才可以看到），然后重新创建表面。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Debugging.htm">调试</a></div>
        <div style="float:right">下一页:<a href="debug_get_callstack.htm">debug_get_callstack</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
debug_event
-->
  <!-- TAGS
debug_event
-->
</body>
</html>