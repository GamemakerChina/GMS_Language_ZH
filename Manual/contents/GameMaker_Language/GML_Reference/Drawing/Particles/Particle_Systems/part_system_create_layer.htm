<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>部分系统_创建层</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for part_system_create_layer" />
  <meta name="rh-index-keywords" content="part_system_create_layer" />
  <meta name="search-keywords" content="part_system_create_layer" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>部分系统_创建层</h1>
  <p>这个函数将在一个给定的层上创建一个新的粒子系统。你需要提供函数所返回的唯一的层ID <a href="../../../Asset_Management/Rooms/General_Layer_Functions/layer_create.htm"><tt>layer_create()</tt></a>或
    你可以给出函数返回的唯一的图层ID，或者作为字符串使用的图层名称--例如 &quot;instance_layer&quot;--然后将系统标记为持久性或非持久性。如果该系统没有被标记为持久性，那么它将在它所创建的房间结束时被自动销毁。
    (这与你调用函数 <a href="part_system_destroy.htm"><tt>part_system_destroy()</tt></a>而且也会销毁与该系统相关的任何发射器）。)然而，当标记为持久性时，该系统将被带到
    到下一个房间，如果下一个房间<i>没有</i>与指定的层相同的名称或深度，那么将为该系统创建一个新的层，它将在各个房间中持续存在，并且它的名称与原层相同。
    命名与原图层相同。当更换房间时，如果下面的房间有另一个同名的图层，那么持久化的实例将被分配给具有该名称的图层，<i>而不管该图层的深度</i>如何。最后。
    如果一个持久化的系统移动到一个房间，其层的深度与系统创建的层相同，那么它将<i>不会</i>被分配到这个层，而是在相同的深度创建一个新的层（与原层的名称相同）。
    层同名）。)</p>
  <p>该函数将为粒子系统返回一个唯一的ID值，在所有需要给出系统ID的后续函数调用中应该使用该ID值。</p>
  <p class="note"><b>重要的是!</b>如果你将粒子系统标记为持久性，那么它（以及分配给它的任何发射器）将需要在不使用时使用适当的销毁功能进行手动清理，否则你将面临内存泄漏的风险，这将对你的最终游戏产生负面影响。
    影响你的最终游戏。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">part_system_create_layer(layer_id, persistent)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>层</td>
        <td>要分配给粒子系统的图层ID值或字符串（可以是任何图层类型）。</td>
      </tr>
      <tr>
        <td>持久性</td>
        <td>标记粒子系统为持久性（设置为<tt>真</tt>）或非持久性（设置为<tt>假</tt>）。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">实数（唯一的粒子系统ID值）。</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">global.p_sys = part_system_create_layer(&quot;effect_layer&quot;, true)。</p>
  <p>上面的代码将在给定的层上创建一个新的粒子系统，并将其标记为持续存在于后续的房间。粒子系统的ID被存储在一个全局范围的变量中，以供将来参考。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">回来了。<a href="Particle_Systems.htm">粒子系统</a></div>
        <div style="float:right">下一页:<a href="part_system_get_layer.htm">部分系统_获取图层</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
part_system_create_layer
-->
  <!-- TAGS
part_system_create_layer
-->
</body>
</html>