<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>绘画_斯普利特</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for draw_sprite" />
  <meta name="rh-index-keywords" content="draw_sprite" />
  <meta name="search-keywords" content="draw_sprite" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>绘画_斯普利特</h1>
  <p>这个函数在游戏室的某个位置绘制给定的精灵和子图像。对于精灵，你可以使用实例变量 <a href="../../Asset_Management/Sprites/Sprite_Instance_Variables/sprite_index.htm"><tt>魉_指数</tt></a>来
    获取分配给运行代码的实例的当前精灵，或者你可以使用任何其他精灵资产。子图像也是如此，因为它也可以被设置为实例变量 <a href="../../Asset_Management/Sprites/Sprite_Instance_Variables/image_index.htm"><tt>图像_指数</tt></a>    这将把子图像设置为当前实例精灵所选择的图像（注意，你可以绘制一个不同的精灵，但仍然使用当前实例的子图像值），或者你可以为此使用任何其他值来绘制一个特定的子图像
    的特定子图像。如果该值大于子图像的数量，那么<span class="notranslate">GameMaker Studio 2</span>将自动循环选择相应的图像（例如，如果正在绘制的精灵有5个子图像，编号为0到
    4，而我们将索引值设置为7，那么该函数将绘制子图像3，编号为0）。)最后，x和y位置是精灵将被绘制在房间内的位置，它以精灵的<a href="../../Asset_Management/Sprites/Sprite_Instance_Variables/sprite_xoffset.htm">x偏移</a>和<a href="../../Asset_Management/Sprites/Sprite_Instance_Variables/sprite_yoffset.htm">y偏移</a>为中心。</p>
  <p class="note"><b>注意</b>：当使用骨架动画精灵时，这个函数可能不会像预期的那样工作，你可能会发现这个函数只画了默认姿势的第一帧。你应该使用<tt>draw_skeleton_*</tt>函数来代替。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">draw_sprite(sprite, subimg, x, y);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>精灵</td>
        <td>要绘制的精灵的索引。</td>
      </tr>
      <tr>
        <td>亚img</td>
        <td>要绘制的精灵的子图像（帧）（image_index或-1与对象中的当前动画帧相关）。</td>
      </tr>
      <tr>
        <td>x</td>
        <td>绘制精灵的X坐标。</td>
      </tr>
      <tr>
        <td>y</td>
        <td>绘制精灵位置的y坐标。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">不适用</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">draw_sprite(sprite_index, image_index, x, y);<br> draw_sprite(spr_Halo, 0, x, y-32);</p>
  <p>这将在房间内实例的x和y位置上绘制实例指定的精灵（sprite_index）与当前的子图像。然后，它将在相同的x和y位置上绘制由 &quot;spr_Halo &quot;索引的精灵的第一帧图像
    但 "高于 "32像素。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Sprites_And_Tiles.htm">精灵和瓷砖</a></div>
        <div style="float:right">下一页:<a href="draw_sprite_ext.htm">draw_sprite_ext</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
draw_sprite
-->
  <!-- TAGS
draw_sprite
-->
</body>
</html>