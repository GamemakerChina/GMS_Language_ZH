<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>文件_文本_关闭</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for file_text_close" />
  <meta name="rh-index-keywords" content="file_text_close" />
  <meta name="search-keywords" content="file_text_close" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>文件_文本_关闭</h1>
  <p>一旦你完成了对一个给定文件的处理（无论是从中读取还是写入），你必须再次关闭该文件，否则你有可能丢失其中包含的信息。这也是为了防止内存泄漏，并确保你不会因为打开超过32个文件而超过了
    文件超过32个的限制。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">file_text_close(fileid)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>文件名</td>
        <td>要关闭的文件的ID。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">不适用</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var file = file_text_open_write(working_directory + &quot;Game_Data.txt&quot;);<br> while (!file_text_eof(file) )<br> {
    <br> file_text_readln(file)。
    <br> }
    <br> file_text_write_string(file, level_data);<br> file_text_close(file);
  </p>
  <p>上面的代码打开了一个文件进行书写，然后循环浏览已经写到文件中的文本行，直到它到达终点。在这一点上，它写了一个字符串，然后再次关闭了该文件。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Text_Files.htm">文本文件</a></div>
        <div style="float:right">下一页:<a href="file_text_open_read.htm">file_text_open_read</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
file_text_close
-->
  <!-- TAGS
file_text_close
-->
</body>
</html>