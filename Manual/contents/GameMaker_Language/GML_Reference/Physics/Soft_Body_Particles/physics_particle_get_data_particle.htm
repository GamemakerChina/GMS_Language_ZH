<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>物理学_粒子_get_data_particle</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_particle_get_data_particle" />
  <meta name="rh-index-keywords" content="physics_particle_get_data_particle,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
  <meta name="search-keywords" content="physics_particle_get_data_particle,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>物理学_粒子_get_data_particle</h1>
  <p>这个函数使用给定的标志检查返回物理学模拟中单个粒子的各种信息。粒子的索引（它的ID）是由函数返回的。 <a href="physics_particle_create.htm"><tt>physics_particle_create()</tt></a>,
    所使用的缓冲区必须是在之前用函数 <a href="../../Buffers/buffer_create.htm"><tt>buffer_create()</tt></a>.它应该是 &quot;增长 &quot;类型的，其大小大约是预期返回的
    数据。标志本身是使用下面给出的常数来设置的，你将使用位法<i>或</i>&quot;|&quot;来创建一个单一的标志值来获得所需的信息。</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>恒定</th>
        <th>描述</th>
        <th>数据类型</th>
      </tr>
      <tr>
        <td>phy_particle_data_flag_typeflags</td>
        <td>粒子的标志值。</td>
        <td>buffer_u32</td>
      </tr>
      <tr>
        <td>phy_particle_data_flag_position</td>
        <td>粒子的X和Y位置。</td>
        <td>2 x buffer_f32</td>
      </tr>
      <tr>
        <td>phy_particle_data_flag_velocity</td>
        <td>水平和垂直速度。</td>
        <td>2 x buffer_f32</td>
      </tr>
      <tr>
        <td>phy_particle_data_flag_colour</td>
        <td>颜色和阿尔法值（十六进制）。</td>
        <td>buffer_f32</td>
      </tr>
      <tr>
        <td>phy_particle_data_flag_category</td>
        <td>粒子的类别（如你创建粒子时定义的）。</td>
        <td>buffer_u32</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">physics_particle_get_data_particle(ind, buffer, flags)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>ind</td>
        <td>要获取数据的粒子的索引（ID）。</td>
      </tr>
      <tr>
        <td>缓冲区</td>
        <td>用来存储数据的（先前创建的）缓冲区。</td>
      </tr>
      <tr>
        <td>旗帜</td>
        <td>用来提取特定粒子类型数据的标志。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">缓冲数据</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var part = physics_particle_create(flags, x, y, x_vel, y_vel, c_white, 1, 1)<br> var flags = phy_particle_data_flag_position | phy_particle_data_flag_velocity;<br> var buffer = buffer_create(16, buffer_grow, 4);<br> physics_particle_get_data_particle(part,
    buffer, flags);<br> px = buffer_read(buffer, buffer_f32);<br> py = buffer_read(buffer, buffer_f32);<br> pvelx = buffer_read(buffer, buffer_f32);<br> pvely = buffer_read(buffer, buffer_f32);<br> buffer_delete(buffer) 。
  </p>
  <p>上述代码获得了由变量 &quot;part &quot;索引的粒子的位置和速度，并将数据存储在一些变量中。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">背面。<a href="Soft_Body_Particles.htm">软体颗粒</a></div>
        <div style="float:right">下一页：<a href="physics_particle_group_get_data.htm">物理学_粒子组_获取数据</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
physics_particle_get_data_particle
phy_particle_data_flag_typeflags
phy_particle_data_flag_position
phy_particle_data_flag_velocity
phy_particle_data_flag_colour
phy_particle_data_flag_category
-->
  <!-- TAGS
physics_particle_get_data_particle
-->
</body>
</html>