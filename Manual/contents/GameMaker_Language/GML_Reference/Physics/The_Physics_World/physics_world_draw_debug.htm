<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>物理学_世界_绘图_调试</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_world_draw_debug" />
  <meta name="rh-index-keywords" content="physics_world_draw_debug,phy_debug_render_aabb,phy_debug_render_collision_pairs,phy_debug_render_coms,phy_debug_render_core_shapes,phy_debug_render_joints,phy_debug_render_obb,phy_debug_render_shapes" />
  <meta name="search-keywords" content="physics_world_draw_debug,phy_debug_render_aabb,phy_debug_render_collision_pairs,phy_debug_render_coms,phy_debug_render_core_shapes,phy_debug_render_joints,phy_debug_render_obb,phy_debug_render_shapes" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>物理学_世界_绘图_调试</h1>
  <p>这个函数将画出一个房间的物理世界系统的表示，当你在物理场景的工作中遇到问题时，可以帮助你进行调试。有时问题可能出现在游戏的渲染部分，例如
    一个精灵可能在错误的位置或旋转中被画出来，从而产生了不正确的物理现象，或者可能是你的计算不正确。无论哪种情况，这个函数都能帮助你找到并解决这个问题。
    在你的物理系统中发生了什么。要做到这一点，你需要告诉它要画出系统的哪一部分，这是通过传递一个由存储在各种 &quot;标志 &quot;常量中的比特创建的值来实现的。</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>phy_debug_render_aabb</td>
        <td>这显示了每个灯具与房间轴线有关的绝对边界盒。</td>
      </tr>
      <tr>
        <td>phy_debug_render_collision_pairs</td>
        <td>这将显示当前处于碰撞状态的任何灯具</td>
      </tr>
      <tr>
        <td>phy_debug_render_coms</td>
        <td>这标志着房间里每个灯具的质量中心。</td>
      </tr>
      <tr>
        <td>phy_debug_render_core_shapes</td>
        <td>显示出构成房间里的装置的基本形状</td>
      </tr>
      <tr>
        <td>phy_debug_render_joints</td>
        <td>这将画出房间里所有灯具的每一个连接点</td>
      </tr>
      <tr>
        <td>phy_debug_render_obb</td>
        <td>这显示了房间里的灯具的相对边界框。</td>
      </tr>
      <tr>
        <td>phy_debug_render_shapes</td>
        <td>这显示了构成房间内固定装置的实际形状。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>因此，要画出这些选项中的任何两个，我们需要对这两个选项做一个<a href="../../../../Additional_Information/Bitwise_Operators.htm">位法的 &quot;或&quot;（在GameMaker</a> <span class="notranslate">Studio 2</span> <a href="../../../../Additional_Information/Bitwise_Operators.htm">中</a> <span class="notranslate">，这用</span>|表示），并将产生的
    变量供函数使用。下面是一个例子，说明你如何设置一个变量，以便与函数一起使用，该函数将只绘制质量中心和一个房间中所有固定装置的连接点。</p>
  <p class="code">flag = phy_debug_render_coms | phy_debug_render_shapes;</p>
  <p>这将给你带来这样的东西。</p>
  <p><img alt="Physics debug draw example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/physics_draw_debug_image.png">正如你所看到的，在上述代码中，只有形状和质心被画在屏幕上
    以及代表其状态的颜色--更多信息请查看Box 2D在线文档）。以同样的方式，您可以显示更多甚至所有您希望调试的常数......。只要把它们 &quot;或 &quot;在一起就可以了
    还有一点需要注意的是--这个函数<i>只能</i>在一个深度低于你想调试的实例的绘制事件中调用，否则你将无法看到调试信息。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">physics_world_draw_debug(flag)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>旗帜</td>
        <td>显示不同调试功能的标志值</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">不适用</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">flag = phy_debug_render_aabb | phy_debug_render_collision_pairs | phy_debug_render_obb;<br> physics_world_draw_debug（flag）。
  </p>
  <p>上面的代码将绘制所有的绝对边界框、相对边界框以及在当前物理系统内碰撞的固定装置。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">回来了。<a href="The_Physics_World.htm">物理世界</a></div>
        <div style="float:right">下一页:<a href="physics_draw_debug.htm">物理学_绘图_</a>调试</div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
physics_world_draw_debug
phy_debug_render_aabb
phy_debug_render_collision_pairs
phy_debug_render_coms
phy_debug_render_core_shapes
phy_debug_render_joints
phy_debug_render_obb
phy_debug_render_shapes
-->
  <!-- TAGS
physics_world_draw_debug
-->
</body>
</html>