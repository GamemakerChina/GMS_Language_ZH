<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>蒸汽_upload_score</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for steam_upload_score" />
  <meta name="rh-index-keywords" content="steam_upload_score" />
  <meta name="search-keywords" content="steam_upload_score" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span class="notranslate">蒸汽</span>_upload_score</h1>
  <p>这个函数将发送一个分数到给定的排行榜上。要上传的分数是一个实数，而排行榜的名称是一个字符串，是在你使用函数创建排行榜时定义的。 <a href="steam_create_leaderboard.htm"><tt><span class="notranslate">steam</span>_create_leaderboard()</tt></a>.
    如果函数失败，它将返回一个值-1，而成功的发布将返回一个唯一的上传ID并触发一个异步的<a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Steam.htm"><span class="notranslate">Steam</span></a>事件。这个
    事件将在内置变量中创建一个<tt>DS地图</tt> <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>异步_加载</tt></a>中创建一个DS地图，其中包含以下键/值对。</p>
  <ul class="colour">
    <li>&quot;event<b>_type&quot; -</b> 这个键在被这个函数<b>触发时</b>将保持 &quot;leaderboard_<b>upload &quot;</b>的值。</li>
    <li>&quot; lb_<b>name&quot; -</b> 这个键持有被发布到的排行榜的名称。</li>
    <li><b>&quot;成功&quot; -</b> 如果帖子成功，则为1，失败为0</li>
    <li><b>&quot;更新&quot; -</b> 如果排行榜上的分数确实被更新了（即：新的分数更好），则为1，否则为0。</li>
    <li>&quot;post_<b>id&quot; -</b> 这个键应该与上传调用返回的ID值相匹配。</li>
    <li>&quot;score<b>&quot;--</b>这个键保存了被张贴的分数。</li>
  </ul>
  <p> </p>
  <h4>语法。</h4>
  <p class="code"><span class="notranslate">steam</span>_upload_score(lb_name, score)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>命名为lb_name</td>
        <td>你要上传分数的排行榜的名称（一个字符串）。</td>
      </tr>
      <tr>
        <td>得分</td>
        <td>要上传的分数（一个真实的数字）。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">真实的</p>
  <p> </p>
  <h4>扩展实例。</h4>
  <p>在这个例子中，我们首先上传一个分数，然后解析成功后返回的<tt>async_load</tt>地图。下面的代码显示了一个上传的典型例子。</p>
  <p class="code">if (hp &lt;= 0)<br> {
    <br> upload_ID =<span class="notranslate">steam</span>_upload_score(&quot;Game Scores&quot;, score);<br> if (!upload_ID)<br> {
    <br> alarm[0] = room_speed;<br> }
    <br> }
  </p>
  <p>请注意，如果调用失败，我们已经设置了一个警报。这将被用来在以后的时间里再次尝试上传，你可以在那里添加额外的代码来重新尝试上传，或者在继续失败时将分数保存到文本文件中，等等。我们现在添加以下内容
    添加到控制分数的实例的<b><span class="notranslate">Steam</span></b>async事件中。</p>
  <p class="code">var type = ds_map_find_value(async_load, &quot;event_type&quot;);<br> if (type == &quot;leaderboard_upload&quot;)<br> {
    <br> var lb_ID = ds_map_find_value(async_load, &quot;post_id&quot;);<br> if lb_ID == upload_ID<br> {
    <br> var lb_name = ds_map_find_value(async_load, &quot;lb_name&quot;);<br> var lb_done = ds_map_find_value(async_load, &quot;success&quot;);<br> var lb_score = ds_map_find_value(async_load, &quot;score&quot;);<br> var
    lb_updated = ds_map_find_value(async_load, &quot;uped&quot;);<br> show_debug_message(&quot;排行榜帖子ID：&quot; + string(lb_ID) + &quot; to lb:&quot; + string(lb_name) + &quot; with score:&quot; + string(lb_score) + &quot; updated=&quot;
    + string(lb_updated));<br> if (lb_done)<br> {
    <br> show_debug_message(&quot;- Succeeded&quot;);<br> }
    <br> else
    <br> {
    <br> show_debug_message(&quot;- Failed&quot;);<br> }
    <br> }
    <br> }
  </p>
  <p>在这个例子中，我们只是将返回值作为调试信息输出到编译器窗口，但你可以用这个事件以任何你选择的方式处理这些信息。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Steam_Leaderboards.htm">排行榜</a></div>
        <div style="float:right">下一页:<a href="steam_upload_score_buffer.htm"><span class="notranslate">steam</span></a>_upload_score_buffer</div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">steam</span>_upload_score
-->
  <!-- TAGS
<span class="notranslate">steam</span>_upload_score
-->
</body>
</html>