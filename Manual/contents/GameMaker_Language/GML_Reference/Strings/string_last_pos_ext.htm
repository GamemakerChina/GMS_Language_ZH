<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>string_last_pos_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for string_last_pos_ext" />
  <meta name="rh-index-keywords" content="string_last_pos_ext" />
  <meta name="search-keywords" content="string_last_pos_ext" />
</head>

<body>
<!--<div class="body-scroll" style="top: 150px;">-->
  <h1>string_last_pos_ext</h1>
  <p>该函数将返回一个字符串中子字符串实例的字符位置，从给定的起始位置开始向后搜索该字符串。如果没有找到搜索的字符串，该函数将返回0，如果找到，则返回搜索字符串的第一个字符的位置。
    如果找到，则返回搜索字符串的第一个字符的位置。请记住，对于传统的支持，字符串的索引是从1开始的，所以1是字符串中的第一个位置，而不是你可能期望的0。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">string_last_pos_ext(substr, str, start_pos)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>子层</td>
        <td>要在字符串中寻找的子串。</td>
      </tr>
      <tr>
        <td>弦外之音</td>
        <td>的字符串。</td>
      </tr>
      <tr>
        <td>开始位置</td>
        <td>要搜索的起始位置。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">整数</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">if (string_last_pos_ext(&quot;,&quot;, text, 20) != 0)<br> {
    <br> string_insert(name, text, string_last_pos_ext(&quot;,&quot;, text, 20));<br> }
  </p>
  <p>上面的代码搜索存储在变量 &quot;text &quot;中的字符串，寻找第20个字符前的逗号，如果找到，就在该位置插入子串 &quot;name&quot;。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Strings.htm">弦乐</a></div>
        <div style="float:right">下一个：<a href="string_repeat.htm">字符串_重复</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
string_last_pos_ext
-->
  <!-- TAGS
string_last_pos_ext
-->

</body></html>