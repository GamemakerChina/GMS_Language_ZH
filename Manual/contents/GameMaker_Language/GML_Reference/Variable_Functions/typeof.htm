<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>typeof</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function typeof" />
  <meta name="rh-index-keywords" content="typeof" />
  <meta name="search-keywords" content="typeof" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>typeof</h1>
  <p>该函数以字符串形式返回任何给定变量的数据类型。可能的返回值列在下表中。</p>
  <table>
    <tbody>
      <tr>
        <th>字符串</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>数</td>
        <td>该变量持有一个实数（浮点数）--这可以包括<tt>NaN</tt>和<tt>无穷大</tt>。</td>
      </tr>
      <tr>
        <td>绳子</td>
        <td>该变量持有一个字符串</td>
      </tr>
      <tr>
        <td>阵列</td>
        <td>该变量引用了一个数组</td>
      </tr>
      <tr>
        <td>bool</td>
        <td>该变量持有一个布尔值<tt>（真</tt>/<tt>假</tt>）。</td>
      </tr>
      <tr>
        <td>int32</td>
        <td>该变量持有一个32位的整数</td>
      </tr>
      <tr>
        <td>ǞǞǞ</td>
        <td>该变量持有一个64位的整数</td>
      </tr>
      <tr>
        <td>ǞǞǞ</td>
        <td>该变量持有一个指针</td>
      </tr>
      <tr>
        <td>未定义</td>
        <td>该变量未被定义</td>
      </tr>
      <tr>
        <td>无</td>
        <td>该变量持有一个空值（这在正常情况下不应该出现）。</td>
      </tr>
      <tr>
        <td>vec3</td>
        <td>该变量持有一个3值向量</td>
      </tr>
      <tr>
        <td>vec4</td>
        <td>该变量持有一个4个值的向量</td>
      </tr>
      <tr>
        <td>方法</td>
        <td>该变量持有一个函数引用</td>
      </tr>
      <tr>
        <td>结构</td>
        <td>该变量持有一个结构参考</td>
      </tr>
      <tr>
        <td>未知</td>
        <td>值是未知的。这<i>不</i>应该被看到，它标志着在最基本的层面上出了问题，如内存被覆盖。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>请注意，在有些情况下，这个函数可能不会为一个<strong>方法</strong>返回正确的值。考虑以下两个函数的定义。</p>
  <p class="code">a = function()<br> {<br> // something<br> }<br>
    <br> function b()<br> {<br> // Something<br> }</p>
  <p> <span class="inline">b</span> 从技术上讲，这些都被认为是方法，因为它们是将一个函数绑定到一个实例范围的变量上，然而在函数 <span class="inline">typeof()</span> ，将返回 &quot;数字 &quot;而不是<em>&quot;方法&quot;。 </em>
    而在 <span class="inline">a</span> 上调用它将返回 &quot;方法&quot;。这是由于像为 <span class="inline">b</span> 创建的方法被分配了脚本索引（是整数值），因为这就是
    因为这是编译器识别脚本函数的方式，即使该函数没有在脚本中定义。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">typeof(variable)。</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>变量</td>
        <td>要获取数据类型的变量。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code">字符串（见上表）。</p>
  <p> </p>
  <h4><b>例子。</b></h4>
  <p class="code">var _str = typeof(global.ExtensionInput);<br> show_debug_message(&quot;<strong>global.ExtensionInput is a &quot; + _str);</strong></p>
  <p>上面的代码得到了给定的全局变量所持有的数据类型，并将字符串返回到一个局部变量，然后用来向控制台输出一条信息。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Variable_Functions.htm">可变的功能</a></div>
        <div style="float:right">下一页:<a href="bool.htm">bool</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
typeof
-->
  <!-- TAGS
typeof
-->
</body>
</html>