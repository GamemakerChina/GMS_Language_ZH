<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>调试器</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Section that covers the debugger." />
  <meta name="rh-index-keywords" content="Debugger,The Debugger,Debugging" />
  <meta name="search-keywords" content="debugging,the debugger,debug module,debug mode,debug" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>调试器</h1>
  <p> <strong>调试器 </strong>是检查你的游戏的强大工具，对于跟踪你的代码中的错误和漏洞特别有用，也可以检查脚本是否在应该运行的时候运行，以及变量和数组是否包含你期望的值等等。
    的值等等...你可以在<span class="notranslate">GameMaker Studio 2</span> <a class="glossterm" data-glossterm="IDE" href="The_Debugger/The_Profiler.htm#">IDE</a>中使用IDE顶部的Debug按钮（<img alt="Debug Icon" class="icon" src="../assets/Images/Icons/Icon_Debug.png"> ）运行你的游戏，或者进入<a href="../IDE_Navigation/Menus/The_Build_Menu.htm">Build菜单</a>，选择 &quot;Debug<em>&quot;</em>来启动调试器。</p>
  <p class="note"><strong>注意</strong>：<span class="notranslate">Windows</span>防火墙（或你运行的任何其他防火墙程序）可能会提示你为该模块创建一个安全例外。<strong>你必须这样做，否则它将无法正常工作</strong>。这是由于调试器的工作方式所决定的。
    调试器的工作方式，对于调试移动平台至关重要。</p>
  <p>当你在调试模式下运行一个游戏时，IDE会显示调试器的不同工具。</p>
  <p><img alt="The Debugger Windows" class="center" src="../assets/Images/IDE Tools/Debug_Module.png">上图显示的是调试器的默认布局，但与IDE的其他方面一样，你可以根据自己的需要进行定制，关闭你不需要的窗口或改变你需要的文档和窗口的大小。
    关闭你不需要的窗口，或者改变你需要的文档和窗口的大小。你可以在任何时候重新设置调试器的布局--或者重新打开关闭的窗口--从IDE顶部的调试器上下文菜单中选择。</p>
  <p><img alt="Debugger Context Menu" class="center" src="../assets/Images/IDE Tools/Debug_Module_Context_Menu.png">下面我们解释一下调试器的每个部分是做什么的。</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">图形视图</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">图形视图向你显示你的项目是如何使用内存的，以及随着时间的推移它的帧速率的图形显示。</p>
    <p class="dropspot"><img alt="Debug Graph" class="center" src="../assets/Images/IDE Tools/Debug_Graph.png">该图显示了当前和平均内存使用量以及当前和平均FPS随时间变化的情况，你可以使用<img alt="Control Icon" class="icon" height="20" src="../assets/Images/Icons/Icon_Ctrl.png" width="55"> /<img alt="CMD Icon" class="icon" height="20" src="../assets/Images/Icons/Icon_Cmd.png" width="55"> 和鼠标滚轮<img alt="MMB Icon" class="icon" src="../assets/Images/Icons/Icon_MMB.png"> ，放大或缩小，如果你把鼠标光标放在任何一个图形元素上，它将显示该元素在选定点的数值。</p>
    <p class="dropspot">图形视图也会将某些调试事件显示为沿着图形长度的点。这些事件是由<span class="notranslate">GameMaker Studio 2</span>在游戏运行的某些点上自动生成的，以显示特定的重要事件，但你也可以
      添加你自己的图形元素，使用函数 <a href="../GameMaker_Language/GML_Reference/Debugging/show_debug_message.htm"><span class="inline">show_debug_message()</span></a>和 <a href="../GameMaker_Language/GML_Reference/Debugging/debug_event.htm"><span class="inline">debug_event()</span></a>.
      系统事件将被标记为不同的颜色，而那些通过代码触发的事件。</p>
    <p class="dropspot"><img alt="Debug Graph Events" class="center" src="../assets/Images/IDE Tools/Debug_Graph_Events.png">当在调试状态下运行游戏并将鼠标移到这些事件上时，将显示一个在游戏中该点被触发的所有事件的列表。
      你可以通过点击 &quot;点击<strong>在新窗口中打开 &quot;</strong>的文字，将列表拉出到一个单独的窗口中进行修改。</p>
    <p class="dropspot"><img alt="Debug Events" class="center" src="../assets/Images/IDE Tools/Debug_Events.png" /></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">资源查看</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">资源视图显示了项目中正在使用的所有资源的列表，这些资源可以包含代码或<span class="notranslate">DnD</span>™ 动作。这一部分的工作方式很像<a href="../Introduction/The_Asset_Browser.htm">资产浏览器</a>，你可以展开其中的项目，以显示更多信息，例如，特定对象的不同事件。
      以显示更多的信息，例如，一个特定对象的不同事件。然后你可以双击<img alt="LMB Icon" class="icon" height="24" src="../assets/Images/Icons/Icon_LMB.png" width="21"> ，在代码视图中打开任何资源的代码。
      在<strong>代码视图</strong>窗口中打开它的代码，在那里你可以检查数值并添加或删除<strong>断点</strong>。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">呼叫堆栈</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">这个窗口将显示当前事件的调用堆栈，以及正在步入的代码的行号。调用堆栈本质上是一个 &quot;后进先出 &quot;的数据结构，显示所有游戏代码的执行顺序。
     <span class="notranslate">代码</span>的执行顺序，因为调试是通过<a class="glossterm" data-glossterm="虚拟机 (VM)" href="#">虚拟机（VM）</a>来完成的，而你为游戏编写的代码也是如此。调试器将需要
      在这里显示任何信息之前，调试器需要被<em>暂停 </em>。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">工具栏</a></p>
  <div class="droptext" data-targetname="drop-down3">
    <p class="dropspot">工具栏上有调试器控件和一些基本信息，如内存使用情况、游戏的当前（真实）FPS和一个显示调试器当前是否连接的指示器（当连接到你的项目实例时，该指示器为绿色，否则为红色）。
      当连接到你的项目的运行实例时，指示灯为绿色，否则为红色）。)可用的控件有。</p>
    <table class="icons" style="margin-left: 32auto">
      <tbody>
        <tr>
          <td class="icons"><img alt="Play Debug Icon" src="../assets/Images/Icons/Debug_play.png" style="margin-left: 24px;" /></td>
          <td class="text">这在游戏暂停后再次启动（键盘快捷键 &quot;<span class="inline">f5</span>&quot;）。</td>
        </tr>
        <tr>
          <td class="icons"><img alt="Pause Debug Icon" height="24" src="../assets/Images/Icons/Debug_Pause.png" style="margin-left: 24px;" width="24" /></td>
          <td class="text">这将暂停（中断）游戏。</td>
        </tr>
        <tr>
          <td class="icons"><img alt="Restart Debug Icon" src="../assets/Images/Icons/Debug_Restart.png" style="margin-left: 24px;" /></td>
          <td class="text">重新启动游戏。</td>
        </tr>
        <tr>
          <td class="icons"><img alt="Stop Debug Icon" height="24" src="../assets/Images/Icons/Debug_Stop.png" style="margin-left: 24px;" width="24" /></td>
          <td class="text">停止游戏。</td>
        </tr>
        <tr>
          <td class="icons"><img alt="Step In Debug Icon" src="../assets/Images/Icons/Debug_StepIn.png" style="margin-left: 24px;" /></td>
          <td class="text">步入一个代码块或脚本（键盘快捷键 &quot;<span class="inline">f11</span>&quot;）。</td>
        </tr>
        <tr>
          <td class="icons"><img alt="Step Over Debug Icon" src="../assets/Images/Icons/Debug_StepOver.png" style="margin-left: 24px;" /></td>
          <td class="text">踏过一个代码块或脚本（键盘快捷键 &quot;<span class="inline">f10</span>&quot;）。</td>
        </tr>
        <tr>
          <td class="icons"><img alt="Step Out Debug Icon" src="../assets/Images/Icons/Debug_StepOut.png" style="margin-left: 24px;" /></td>
          <td class="text">走出一个代码块或脚本（键盘快捷键<img alt="Shift Icon" class="icon" height="20" src="../assets/Images/Icons/Icon_Shift.png" width="55"> + &quot;<span class="inline">f11</span>&quot;）。</td>
        </tr>
        <tr>
          <td class="icons"><img alt="Real Time Debug Icon" src="../assets/Images/Icons/Debug_RealTime.png" style="margin-left: 24px;" /></td>
          <td class="text">打开或关闭调试信息的实时更新（默认为关闭）。</td>
        </tr>
      </tbody>
    </table>
    <p class="dropspot">前三个按钮用于控制你的游戏，允许你在任何时候<strong>开始</strong>、<strong>暂停</strong>、<strong>重新启动 </strong>或<strong>停止 </strong>游戏。当游戏被暂停时（可以通过点击暂停按钮
      或从<strong>断点</strong>开始），你就可以使用三个<strong>步骤</strong>按钮对你的代码进行步进。</p>
    <p class="dropspot">当我们谈论 &quot;步进 &quot;代码时，我们只是意味着你可以告诉你的游戏运行当前的代码行，然后 &quot;步进 &quot;到下一行，允许你一次运行整个游戏中的一行代码
      如果你愿意的话。通常情况下，你只需使用 "<strong>步入</strong>"按钮就可以做到这一点，但你也有一个用于<strong>跨过 </strong>代码的按钮和一个用于<strong>跳出 </strong>代码的按钮。当你有大的脚本需要运行时，跨步是很有用的。
      当你有大的脚本要运行时，跨步是很有用的，因为点击这个按钮会把整个脚本或代码块作为一个步骤来运行，然后在下一行停止，而跨步会把你带出一个脚本（它们会运行，但都是一次性的），然后在范围改变时停止在
      之后，当范围发生变化时，会在下一步停止。</p>
    <p class="dropspot">最后一个<strong>实时更新</strong>的图标允许调试窗口实时更新其数据，所以你可以看到变量的变化或实例的创建和销毁情况。请注意，这可能会影响游戏的性能
      并不是所有的信息都是实时可用的。例如，<strong>渲染状态</strong>的观察（见<a href="The_Debugger/Watches.htm">观察</a>一节）不能实时查看。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">代码查看</a></p>
  <div class="droptext" data-targetname="drop-down4">
    <p class="dropspot">代码视图是我们可以在项目运行时看到和审查不同的脚本或事件代码。默认情况下，这里开始是空的，但你可以在<strong>资源视图 </strong>中的任何资产上双击<img alt="LMB Icon" class="icon" height="24" src="../assets/Images/Icons/Icon_LMB.png" width="21"> ，在这里打开它。你也可以打开多个不同的事件或脚本，它们将作为标签被添加到代码视图工作区的顶部。</p>
    <p class="dropspot">当任何代码窗口在代码视图中打开时，你可以在沟槽中（行号所在的位置）左键点击<img alt="LMB Icon" class="icon" height="24" src="../assets/Images/Icons/Icon_LMB.png" width="21"> ，添加或删除<strong>断点 </strong>（见
      关于断点的信息，请参见本页面下一页）。)</p>
    <p class="dropspot">你也可以使用鼠标右键<img alt="RMB Icon" class="icon" height="24" src="../assets/Images/Icons/Icon_RMB.png" width="21"> ，打开<strong>上下文菜单</strong>，它也允许你添加或删除断点，并将任何选定的代码复制到剪贴板。
      选择的代码复制到剪贴板上。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">钟表</a></p>
  <div class="droptext" data-targetname="drop-down5">
    <p class="dropspot">这一部分专门用于 &quot;观察 &quot;你的游戏的不同方面，以允许更深入和详细的调试。这将在下面的页面中深入介绍。</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="The_Debugger/Watches.htm">钟表</a></li>
    </ul>
  </div>
  <p><br> 需要注意的是，当游戏运行时，它不会默认更新调试窗口的变量值和其他细节，因此你必须首先使用调试器中的暂停按钮<img alt="Pause Debug Icon" class="icon" src="../assets/Images/Icons/Debug_Pause.png"> ，在本地、全球和其他数据可用之前暂停游戏，或者从顶部的图标启用实时更新<img alt="Real Time Debug Icon" class="icon" src="../assets/Images/Icons/Debug_RealTime.png"> 。唯一例外的是
    这条规则的唯一例外是<strong>个人资料 </strong>视图，它在独立于实时开关的情况下实时更新，因为它有自己的开/关按钮。你可以从下面的页面找到关于这个视图的全部信息。</p>
  <ul class="colour">
    <li><a href="The_Debugger/The_Profiler.htm">剖析者</a></li>
  </ul>
  <p>调试游戏的另一个重要部分是使用<strong>断点</strong>。断点是项目代码中的一个地方，你希望它停在那里，以便你能看到正在发生的事情。在调试器运行的情况下，你可以在任何时间、任何代码或任何地方添加或删除断点。
    在任何时间和任何代码或脚本块中，通过左键点击水沟中的<img alt="LMB Icon" class="icon" height="24" src="../assets/Images/Icons/Icon_LMB.png" width="21"> （行号所在），或者你可以使用鼠标右键 <strong><img alt="RMB Icon" class="icon" height="24" src="../assets/Images/Icons/Icon_RMB.png" width="21"></strong>来打开上下文菜单。
    打开<strong>上下文菜单</strong>，这也允许你添加或删除断点。</p>
  <p><img alt="Add/Remove Breakpoints" class="center" src="../assets/Images/IDE Tools/Add_Remove_Breakpoint.gif">Breakpoints也可以从<span class="notranslate">GameMaker Studio 2</span>IDE中设置。在编写你的项目时，可以在任何时候通过以下方式添加或删除它们
   <span class="inline">f9</span>（或使用鼠标右键<img alt="RMB Icon" class="icon" height="24" src="../assets/Images/Icons/Icon_RMB.png" width="21"> ，选择 &quot;切换<strong>断点&quot;），</strong>可以在对象窗口中的一个动作上添加或删除断点。
      (<span class="notranslate">DnD</span>™用户)，或者代码编辑器窗口中的某一行。现在，当你在调试模式下运行你的游戏时，它将在你所定义的点（或多个点）处暂停。</p>
  <p>在IDE中设置的断点会和你的项目一起保存，并在各种运行中持续存在，直到再次被删除。然而，如果你在调试器中给你的代码添加了一个断点，在关闭模块或开始新的测试运行后，这个断点就会丢失。
    请注意，所有的断点都会出现在<a href="../Introduction/The_Output_Window.htm">输出窗口</a>，它们可以被启用或禁用，甚至可以被删除。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Additional_IDE_Tools.htm">其他IDE工具</a></div>
        <div style="float:right">下一个。<a href="The_Micro_Web_Server.htm">微型网络服务器</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
The Debugger
The Debug Module
Debug Mode
Debugging
Debug
-->
  <!-- TAGS
debug_mode
-->
</body>
</html>