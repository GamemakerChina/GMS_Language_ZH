<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>JSDoc脚本评论</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains how JSDoc Script Comments work" />
  <meta name="rh-index-keywords" content="Code Editor - JSDoc Comments,JSDoc" />
  <meta name="search-keywords" content="JSDoc,JSDoc Comments" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>JSDoc脚本评论</h1>
  <p>如果你希望你的自定义函数有代码自动完成功能，并在代码编辑器中以特定方式显示所需的参数，那么你需要添加一些<a href="https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html">JSDoc风格的</a>注释。这些注释是用来告诉自动完成功能应该如何在<a href="../Scripts.htm">脚本编辑器</a>中使用和填写该函数。</p>
  <p>一个典型的函数头的格式是：函数名称、函数描述，然后是函数接受的不同参数列表，确保每一行以三倍反斜杠&quot;
    <span class="inline">///</span> &quot;，因为这告诉<span class="notranslate">GameMaker Studio 2将</span>注释解析为JSDoc风格。注释本身需要被赋予一个标识符（前面是 &quot;<span class="inline">@</span>&quot;）和内容，可用的
    可用的标识符如下。</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>识别器</th>
        <th>内容</th>
      </tr>
      <tr>
        <td><span class="inline">@function</span> / <span class="inline">@func</span></td>
        <td>函数的完整名称和参数，例如：<br>
          <span class="inline"><tt>my_func(x, y, colour)</tt></span> 。</td>
      </tr>
      <tr>
        <td><span class="inline">@description</span> / <span class="inline">@desc</span></td>
        <td>对该功能的一般描述。</td>
      </tr>
      <tr>
        <td><span class="inline">@param</span> / <span class="inline">@arg</span> / <span class="inline">@argument</span></td>
        <td>参数类型（可选），用 <span class="inline">{}</span> ，参数名称，以及简短的描述（中间有空格）。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>为了了解在编写你自己的函数时如何工作，让我们来看看这个基本的例子。</p>
  <p class="code">函数 is_same_object(_id, _obj)<br> {
    <br> if (_id.object_index == _obj)<br> {<br> return true;<br> }<br> else return false;<br> }
  </p>
  <p>这个脚本所做的就是检查一个实例是否与给定的对象有相同的 <span class="inline">object_index</span> ，并且会被简单地调用为。</p>
  <p class="code">if is_same_object(id, obj_Player)<br> {
    <br> instance_destroy()<br> }
  </p>
  <p>然而，将其写入代码编辑器会直接显示参数变量名<tt>（_id</tt>和<tt>_obj</tt>），这在大多数情况下并不具有很强的描述性。你可以使用JSDoc来定义自定义参数名称和描述，以及
    以及函数的信息。</p>
  <p class="code">/// @function is_same_object(id, object)<br> /// @description 比较一个实例索引和一个对象索引。<br> /// @param {real} inst_id 要检查的实例的唯一实例ID值。<br> /// @param {real} object_id 要检查的对象索引。
    object_id 要检查的对象索引。<br>
    <br> function is_same_object(_id, _obj)<br> {
    <br> if (_id.object_index == _obj)<br> {<br> return true;<br> }<br> else return false;<br> }
  </p>
  <p>现在，当在你项目的任何地方调用这个函数时，你会看到在JSDoc注释中输入的新参数名称。</p>
  <p><img alt="JSDoc Example" class="center" height="652" src="../../assets/Images/Scripting_Reference/Additional_Information/JavaDoc_Example.png" width="672" /></p>
  <p>在上面的图片中，上面的部分显示了自动完成中的函数，下面的部分显示了底部的参数帮助器是如何工作的。请注意， <span class="inline">@param</span> 中可选的 &quot;类型 &quot;和必须的 &quot;描述 &quot;部分在IDE代码完成中默认不显示，要看到它们，你必须激活GML偏好中的选项。</p>
  <p>你可以用<tt>[]</tt>括号包住一个参数名，表示它是可选的。然后，代码编辑器将期望在最小需要的参数和参数总数之间有任何数量的参数。例如，请看下面的例子
    函数。</p>
  <p class="code">/// @function animate_position(end_x, end_y, start_x, start_y)<br> /// @desc 将实例从可选的起点动画到结束点<br> /// @arg end_x<br> /// @arg end_y<br> /// @arg [start_x]<br> /// @arg [start_y]<br>
    <br> function animate_position (x1, y1, x2, y2)<br> {
    <br> // 函数代码<br> }
  </p>
  <p> <tt>start_x</tt>和<tt>start_y</tt>参数被标记为可选参数，这意味着代码编辑器现在会期望有2到4个参数，从警告信息中可以看出。</p>
  <p><img class="center" height="150" src="../../assets/Images/Scripting_Reference/Additional_Information/JavaDoc_Optional.png" width="537" /></p>
  <p class="note"><strong>注意</strong>：如果你在函数声明中使用可选的参数，你会得到同样的行为。更多信息请参见<a href="../../GameMaker_Language/GML_Overview/Script_Functions.htm">脚本函数</a>。</p>
  <p>由于脚本中可以有多个函数，你可以在其声明前为每个函数添加JSDoc注释。</p>
  <p><img alt="Multiple Functions With JSDoc Comments Example" class="center" src="../../assets/Images/Scripting_Reference/Additional_Information/JavaDoc_MultipleFunctions.png" /></p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Scripts.htm">脚本编辑器</a></div>
        <div style="float:right">下一步。<a href="Code_Snippets.htm">代码摘录</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
JSDoc Script Comments
-->
  <!-- TAGS
jsdoc_comments
-->
</body>
</html>