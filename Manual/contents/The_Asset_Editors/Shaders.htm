<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>着色器</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how the shader editor works" />
  <meta name="rh-index-keywords" content="Shader Editor" />
  <meta name="search-keywords" content="shaders,shader,open GL,open GL ES" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1> <span class="notranslate">着色器</span>编辑器</h1>
  <p><img alt="Shader Editor" class="center" src="../assets/Images/Asset_Editors/Editor_Shaders.png"><span class="notranslate">着色器</span>是一个非常强大的工具，可以用来操纵你的游戏渲染到屏幕上的图形，允许令人难以置信的快速效果。
    例如，为精灵添加一个微妙的颜色色调，甚至是全屏变形效果。但什么是<span class="notranslate">着色器</span>？</p>
  <p> <span class="notranslate">着色器</span>基本上是一个由两部分组成的程序，直接在显卡本身上运行，由于GPU正在做所有的工作，因此速度非常快，并为你的游戏代码释放出CPU周期。完整的<span class="notranslate">着色器</span>是由顶点<span class="notranslate">着色器</span>程序和
    一个片段<span class="notranslate">着色器</span>程序（也被称为像素<span class="notranslate">着色器</span>）。这两个小程序一起工作，以操纵显卡渲染到屏幕上的内容。这样，你就可以实时地操纵实际渲染到屏幕上的位置、颜色和阿尔法值。
    值，并实际<a class="glossterm" data-glossterm="呈现的" href="#">渲染</a>到<a class="glossterm" data-glossterm="显示缓冲区" href="#">显示缓冲区</a>。</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">顶点<span class="notranslate">着色器</span></a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">顶点<span class="notranslate">着色器</span>是渲染管道中的可编程<span class="notranslate">着色器</span>阶段，它处理单个顶点（用于渲染任何图像的三角形的点），当你渲染一个几何体时--比如一个精灵或一个表面
      -<span class="notranslate">GameMaker Studio 2</span>创建了一个顶点流--称为<strong>Vertex Buffer </strong>--定义了这些三角形的几何图形。例如，一个精灵会有一个由两个三角形（通常称为<em>多边形</em>）组成的几何体被渲染出来
      形成一个 &quot;四边形&quot;。来自顶点缓冲器的顶点流被作为输入输入到顶点<span class="notranslate">着色器</span>，它可以以可编程的方式处理顶点数据。顶点<span class="notranslate">着色器</span>的输出被GPU用来组装三角形。
      然后，这些三角形会被适当地剪切和剪裁到视图端口和视图摄像头，然后被发送到GPU的光栅化器块，该块产生一个新的输出流，由称为 "<strong>碎片</strong>"的东西构成。这些是微小的数据
      结构，每一个都是相对于屏幕上出现的一个像素的。</p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">片段<span class="notranslate">着色器</span></a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">片段<span class="notranslate">着色器</span>是渲染管道中处理 &quot;片段 &quot;的可编程<span class="notranslate">着色器</span>阶段--用于对任何给定的多边形进行纹理的插值像素--它们负责输出每个
      渲染的三角形像素的最终颜色。基本上，它的工作原理是这样的：片段<span class="notranslate">着色器</span>接收所有由顶点<span class="notranslate">着色器</span>沿管道传递的片段（正在渲染的三角形的单个像素）作为其输入。然后，它可以
      处理这些片段，以改变将被绘制到屏幕上的最终目标像素的颜色和alpha。</p>
  </div>
  <p> </p>
  <p>关于<span class="notranslate">着色器</span>如何真正工作以及它们在图形管道中的地位的完整概述超出了本文的范围，但你可以在这里找到一份干货指南。</p>
  <p> </p>
  <ul class="colour">
    <li><a href="../Additional_Information/Guide_To_Using_Shaders.htm"> <span class="notranslate">着色器</span>使用指南</a></li>
  </ul>
  <p> </p>
  <p>而在<span class="notranslate">YoYo游戏</span>技术博客上，有许多文章对其进行了更详细的介绍，你可以通过以下链接访问。</p>
  <p> </p>
  <ul class="colour">
    <li><a href="https://www.yoyogames.com/blog/14/shaders-overview-part-1"><span class="notranslate">着色器</span>第一部分</a></li>
    <li><a href="https://www.yoyogames.com/blog/16/shaders-overview-part-2"><span class="notranslate">着色器</span>第2部分</a></li>
    <li><a href="https://www.yoyogames.com/blog/17/shaders-overview-part-3"><span class="notranslate">着色器</span>第三部分</a></li>
    <li><a href="https://www.yoyogames.com/blog/18/shaders-overview-part-4"><span class="notranslate">着色器</span>第4部分</a></li>
  </ul>
  <p> </p>
  <p><span class="notranslate">GameMaker Studio 2</span>支持以下<span class="notranslate">着色器</span>语言。</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th><span class="notranslate">着色器</span>语言</th>
        <th>目标平台</th>
      </tr>
      <tr>
        <td><strong>GLSL ES</strong></td>
        <td>所有目标平台</td>
      </tr>
      <tr>
        <td><strong>ǞǞǞ</strong></td>
        <td>Mac和<span class="notranslate">Ubuntu</span><span class="notranslate">（Linux</span>）。</td>
      </tr>
      <tr>
        <td><strong>HLSL 11</strong></td>
        <td><span class="notranslate">Windows</span>, UWP, XboxOne</td>
      </tr>
      <tr>
        <td><strong>PSSL</strong></td>
        <td><span class="notranslate">戏院4</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>要创建一个<span class="notranslate">着色器</span>资源，只需在<a href="../Introduction/The_Asset_Browser.htm">资产浏览器</a>上右击<img alt="RMB Icon" class="icon" src="../assets/Images/Icons/Icon_RMB.png"> ，并选择<em>创建<span class="notranslate">着色器</span></em>。一旦你创建了
    基础<span class="notranslate">着色器</span>，你就可以使用新资源上的鼠标右键<img alt="RMB Icon" class="icon" src="../assets/Images/Icons/Icon_RMB.png"> ，在继续编辑代码之前选择<span class="notranslate">着色器</span>类型。</p>
  <p><img alt="Shader Editor RMB Menu" class="center" src="../assets/Images/Asset_Editors/Editor_Shader_RMBMenu.png">当你创建一个新的着色器时，代码编辑器本身被分成两个 &quot;程序&quot;--顶点和片段<span class="notranslate">。</span>
    都可以从编辑器顶部的标签中找到。这两个程序都是同时创建的，因为<em>没有这两个部分</em>你<em>就无法创建一个<span class="notranslate">着色器</span></em>。即使你只想使用片段<span class="notranslate">着色器</span>，你也必须先创建一个 &quot;通过 &quot;顶点着色器。
   <span class="notranslate">着色器</span>，这就是为什么在默认情况下，任何新创建的<span class="notranslate">着色器</span>都会有一个已经为你编码的顶点和片段通过的<span class="notranslate">着色器</span>（在页面顶部的屏幕截图中，你可以看到我们已经使用代码编辑器窗格视图来显示
    在页面顶部的屏幕截图中，你可以看到我们使用了代码编辑器窗格视图来显示这两个程序......在同时处理两个<span class="notranslate">着色器</span>程序的时候非常有用）。)</p>
  <p>值得注意的是，你可以在<em>所有 </em>目标平台上使用GLSL ES<span class="notranslate">着色器</span>，但要使它们在<strong>HTML5 </strong>目标平台上工作，你必须在<a href="../Settings/Game_Options/HTML5.htm">HTML5游戏选项</a>中启用WebGL，否则
    否则它们将无法工作。</p>
  <p>有关<span class="notranslate">着色器</span>功能的进一步细节以及如何在<span class="notranslate">GameMaker Studio 2</span>中使用它们，请参见以下页面。</p>
  <ul class="colour">
    <li><a href="../GameMaker_Language/GML_Reference/Asset_Management/Shaders/Shaders.htm"><span class="notranslate">着色器</span></a>功能 -<span class="notranslate">着色器</span>的<span class="notranslate">GML</span>参考部分。</li>
    <li><a href="../GameMaker_Language/GML_Reference/Asset_Management/Shaders/Shader_Constants.htm"><span class="notranslate">着色器</span></a>常量 -<span class="notranslate">GameMaker Studio 2</span>内置的常量，可以在编写<span class="notranslate">着色器</span>时使用。</li>
    <li><a href="http://www.khronos.org/registry/gles/specs/2.0/GLSL_ES_Specification_1.0.17.pdf">GLSL ES 规格</a>-<span class="notranslate">GameMaker Studio 2</span>使用的 Open GL ES<span class="notranslate">着色器</span>语言规格的 PDF 文件。</li>
    <li><a href="https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-reference">HLSL语言参考</a>- 微软关于使用HLSL的参考页面。</li>
    <li><a href="http://twvideo01.ubm-us.net/o1/vault/gdceurope2013/Presentations/825424RichardStenson.pdf">PSSL语言演示</a>- PSSL语言的演示格式概述。</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="The_Asset_Editors.htm">资产编辑部</a></div>
        <div style="float:right">下一步。<a href="Sounds.htm">声音</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span>版权所有。2021年 保留所有权利</span></h5>
  </div>
  <!-- KEYWORDS
The <span class="notranslate">Shader</span> Editor
<span class="notranslate">Shaders</span>
OpenGL ES
HLSL
PSSL
-->
  <!-- TAGS
<span class="notranslate">shader</span>_editor
-->
</body>
</html>